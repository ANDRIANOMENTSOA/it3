//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1.DataHelpers
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class OnsiteBiatss_KKEntities3 : DbContext
    {
        public OnsiteBiatss_KKEntities3()
            : base("name=OnsiteBiatss_KKEntities3")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AccountTransaction> AccountTransactions { get; set; }
        public virtual DbSet<Header1> Header1 { get; set; }
        public virtual DbSet<Header2> Header2 { get; set; }
        public virtual DbSet<Header3> Header3 { get; set; }
        public virtual DbSet<COA1> COA1 { get; set; }
        public virtual DbSet<COA2> COA2 { get; set; }
        public virtual DbSet<COA3> COA3 { get; set; }
        public virtual DbSet<COA4> COA4 { get; set; }
        public virtual DbSet<FinPeriodCalender> FinPeriodCalenders { get; set; }
        public virtual DbSet<FORWARDSALE> FORWARDSALEs { get; set; }
        public virtual DbSet<PAXCodeDefinition> PAXCodeDefinitions { get; set; }
        public virtual DbSet<AccountMaster> AccountMasters { get; set; }
        public virtual DbSet<Charge> Charges { get; set; }
        public virtual DbSet<Constant> Constants { get; set; }
        public virtual DbSet<Scenario> Scenarios { get; set; }
        public virtual DbSet<TicketAccounting> TicketAccountings { get; set; }
        public virtual DbSet<AppObject> AppObjects { get; set; }
        public virtual DbSet<AppObjectOption> AppObjectOptions { get; set; }
        public virtual DbSet<ColumnSpec> ColumnSpecs { get; set; }
        public virtual DbSet<ED> EDS { get; set; }
        public virtual DbSet<Exception> Exceptions { get; set; }
        public virtual DbSet<Group> Groups { get; set; }
        public virtual DbSet<GroupObjectOption> GroupObjectOptions { get; set; }
        public virtual DbSet<GSP> GSPs { get; set; }
        public virtual DbSet<ImportControl> ImportControls { get; set; }
        public virtual DbSet<Invoice> Invoices { get; set; }
        public virtual DbSet<MessageMap> MessageMaps { get; set; }
        public virtual DbSet<Monitor> Monitors { get; set; }
        public virtual DbSet<ProblematicView> ProblematicViews { get; set; }
        public virtual DbSet<Setting> Settings { get; set; }
        public virtual DbSet<SysGroup> SysGroups { get; set; }
        public virtual DbSet<SysLog> SysLogs { get; set; }
        public virtual DbSet<SysObject> SysObjects { get; set; }
        public virtual DbSet<SysObjectGroupMapping> SysObjectGroupMappings { get; set; }
        public virtual DbSet<SysObjectOption> SysObjectOptions { get; set; }
        public virtual DbSet<SysUser> SysUsers { get; set; }
        public virtual DbSet<SysUserGroupMapping> SysUserGroupMappings { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserGroup> UserGroups { get; set; }
        public virtual DbSet<UserHistory> UserHistories { get; set; }
        public virtual DbSet<UserLog> UserLogs { get; set; }
        public virtual DbSet<UserSession> UserSessions { get; set; }
        public virtual DbSet<PLBDetail> PLBDetails { get; set; }
        public virtual DbSet<PLBHeader> PLBHeaders { get; set; }
        public virtual DbSet<AirportCoordinate> AirportCoordinates { get; set; }
        public virtual DbSet<CountryCoordinate> CountryCoordinates { get; set; }
        public virtual DbSet<ApplicableTFC_MD> ApplicableTFC_MD { get; set; }
        public virtual DbSet<KK_Amadeus_Split> KK_Amadeus_Split { get; set; }
        public virtual DbSet<KK_BSP_Batch_Reports_Currency_Conversion> KK_BSP_Batch_Reports_Currency_Conversion { get; set; }
        public virtual DbSet<KK_CodeShare> KK_CodeShare { get; set; }
        public virtual DbSet<KK_CodeShareAgreement> KK_CodeShareAgreement { get; set; }
        public virtual DbSet<KK_CodeShareASV> KK_CodeShareASV { get; set; }
        public virtual DbSet<KK_CodeShareDiscounts> KK_CodeShareDiscounts { get; set; }
        public virtual DbSet<KK_CodeShareException> KK_CodeShareException { get; set; }
        public virtual DbSet<KK_CustProrateShare> KK_CustProrateShare { get; set; }
        public virtual DbSet<KK_GSA_Parameters> KK_GSA_Parameters { get; set; }
        public virtual DbSet<MD_Aircraft> MD_Aircraft { get; set; }
        public virtual DbSet<MD_DCS_Arrival> MD_DCS_Arrival { get; set; }
        public virtual DbSet<MD_DCS_Departure> MD_DCS_Departure { get; set; }
        public virtual DbSet<MD_FareBasisException> MD_FareBasisException { get; set; }
        public virtual DbSet<MD_FlightIrregularities> MD_FlightIrregularities { get; set; }
        public virtual DbSet<MD_Geneva> MD_Geneva { get; set; }
        public virtual DbSet<MD_UsageVBooking> MD_UsageVBooking { get; set; }
        public virtual DbSet<MR_FlightSchedule> MR_FlightSchedule { get; set; }
        public virtual DbSet<Network_MD> Network_MD { get; set; }
        public virtual DbSet<RBD_Class_Mapping_MD> RBD_Class_Mapping_MD { get; set; }
        public virtual DbSet<UH_CustProrateShare> UH_CustProrateShare { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Maintenance> Maintenances { get; set; }
        public virtual DbSet<SystemCheck> SystemChecks { get; set; }
        public virtual DbSet<EXT83ExchangeFopBrkDwn> EXT83ExchangeFopBrkDwn { get; set; }
        public virtual DbSet<SRD86SurrenderedTicketDocIden> SRD86SurrenderedTicketDocIden { get; set; }
        public virtual DbSet<SRD87SurrenderedFareTaxAmounts> SRD87SurrenderedFareTaxAmounts { get; set; }
        public virtual DbSet<SRD88SurrenderedEndorsementsRestrictionsInfo> SRD88SurrenderedEndorsementsRestrictionsInfo { get; set; }
        public virtual DbSet<SRD89SurrenderedPassengerInfo> SRD89SurrenderedPassengerInfo { get; set; }
        public virtual DbSet<SRD90SurrenderedItinerary> SRD90SurrenderedItinerary { get; set; }
        public virtual DbSet<SRD91SurrenderedFareCalculation> SRD91SurrenderedFareCalculation { get; set; }
        public virtual DbSet<SRD92SurrenderedFormofPayment> SRD92SurrenderedFormofPayment { get; set; }
        public virtual DbSet<TCH02CycleHeader> TCH02CycleHeader { get; set; }
        public virtual DbSet<TCT95CycleTrailer> TCT95CycleTrailer { get; set; }
        public virtual DbSet<TKF81FareCalculation> TKF81FareCalculation { get; set; }
        public virtual DbSet<TKI63Itinerary> TKI63Itinerary { get; set; }
        public virtual DbSet<TKP84FormofPayment> TKP84FormofPayment { get; set; }
        public virtual DbSet<TKP85CertificateRecord> TKP85CertificateRecord { get; set; }
        public virtual DbSet<TKS24TicketDocIden> TKS24TicketDocIden { get; set; }
        public virtual DbSet<TKS30FareTaxAmounts> TKS30FareTaxAmounts { get; set; }
        public virtual DbSet<TKS31ExchangeNewAuditorAmounts> TKS31ExchangeNewAuditorAmounts { get; set; }
        public virtual DbSet<TKS39CommissionAmounts> TKS39CommissionAmounts { get; set; }
        public virtual DbSet<TKS45OriginalIssueInfo> TKS45OriginalIssueInfo { get; set; }
        public virtual DbSet<TKS46EndorsementsRestrictionsInfo> TKS46EndorsementsRestrictionsInfo { get; set; }
        public virtual DbSet<TKS47WaiverCode> TKS47WaiverCode { get; set; }
        public virtual DbSet<TKS48PassengerInfo> TKS48PassengerInfo { get; set; }
        public virtual DbSet<TKT06TransactionHeader> TKT06TransactionHeader { get; set; }
        public virtual DbSet<TMP64EMDReasonforIssuance> TMP64EMDReasonforIssuance { get; set; }
        public virtual DbSet<TMP65EMDCouponFeeOwner> TMP65EMDCouponFeeOwner { get; set; }
        public virtual DbSet<TMP66EMDCouponValue> TMP66EMDCouponValue { get; set; }
        public virtual DbSet<TMP67EMDInConnectionWithCoupon> TMP67EMDInConnectionWithCoupon { get; set; }
        public virtual DbSet<TMP70MiscReasonforIssuance> TMP70MiscReasonforIssuance { get; set; }
        public virtual DbSet<TMP71EMDandMiscAdditionalInfo> TMP71EMDandMiscAdditionalInfo { get; set; }
        public virtual DbSet<TMP75MiscCouponValue> TMP75MiscCouponValue { get; set; }
        public virtual DbSet<TMP76MiscCouponInfo> TMP76MiscCouponInfo { get; set; }
        public virtual DbSet<TMP77MiscCouponPrintLineText> TMP77MiscCouponPrintLineText { get; set; }
        public virtual DbSet<TOH03SalesReportHeader> TOH03SalesReportHeader { get; set; }
        public virtual DbSet<TOT94SalesReportTrailer> TOT94SalesReportTrailer { get; set; }
        public virtual DbSet<TTH01FileHeader> TTH01FileHeader { get; set; }
        public virtual DbSet<TTT97VariableRemittanceTotals> TTT97VariableRemittanceTotals { get; set; }
        public virtual DbSet<TTT98DisbursementTotals> TTT98DisbursementTotals { get; set; }
        public virtual DbSet<TTT99FileTotals> TTT99FileTotals { get; set; }
        public virtual DbSet<Ama25_AgentBookingAndTicketingID> Ama25_AgentBookingAndTicketingID { get; set; }
        public virtual DbSet<Bar64_DocumentAmount> Bar64_DocumentAmount { get; set; }
        public virtual DbSet<Bar65_PassengerInformation> Bar65_PassengerInformation { get; set; }
        public virtual DbSet<Bar66_AdditionalFormOfPayment> Bar66_AdditionalFormOfPayment { get; set; }
        public virtual DbSet<Bch02_BillingAnalysisHeader> Bch02_BillingAnalysisHeader { get; set; }
        public virtual DbSet<Bct95_BillingAnalysis> Bct95_BillingAnalysis { get; set; }
        public virtual DbSet<Bfh01_FileHeader> Bfh01_FileHeader { get; set; }
        public virtual DbSet<Bft99_FileTotals> Bft99_FileTotals { get; set; }
        public virtual DbSet<Bkf81_FareCalculation> Bkf81_FareCalculation { get; set; }
        public virtual DbSet<Bki63_ItineraryDataSegment> Bki63_ItineraryDataSegment { get; set; }
        public virtual DbSet<Bkp83_ElectronicTransaction> Bkp83_ElectronicTransaction { get; set; }
        public virtual DbSet<Bkp84_FormOfPayment> Bkp84_FormOfPayment { get; set; }
        public virtual DbSet<Bks24_DocumentIdentification> Bks24_DocumentIdentification { get; set; }
        public virtual DbSet<Bks30_DocumentAmount> Bks30_DocumentAmount { get; set; }
        public virtual DbSet<Bks31_CouponTaxInformation> Bks31_CouponTaxInformation { get; set; }
        public virtual DbSet<Bks39_Commission> Bks39_Commission { get; set; }
        public virtual DbSet<Bks42_TaxOnCommission> Bks42_TaxOnCommission { get; set; }
        public virtual DbSet<Bks45_RelatedDocumentInformation> Bks45_RelatedDocumentInformation { get; set; }
        public virtual DbSet<Bks46_SalesTransactions> Bks46_SalesTransactions { get; set; }
        public virtual DbSet<Bkt06_TransactionHeader> Bkt06_TransactionHeader { get; set; }
        public virtual DbSet<Bmd75_ECouponRecords> Bmd75_ECouponRecords { get; set; }
        public virtual DbSet<Bmd76_ERemarkRecords> Bmd76_ERemarkRecords { get; set; }
        public virtual DbSet<Bmp70_ReasonForIssuance> Bmp70_ReasonForIssuance { get; set; }
        public virtual DbSet<Bmp71_AdditionalInformation> Bmp71_AdditionalInformation { get; set; }
        public virtual DbSet<Bmp72_AmountInLetters> Bmp72_AmountInLetters { get; set; }
        public virtual DbSet<Bmp73_AirlineInformation> Bmp73_AirlineInformation { get; set; }
        public virtual DbSet<Bmp74_DocumentPrintLines> Bmp74_DocumentPrintLines { get; set; }
        public virtual DbSet<Bmp77_CouponPrintLines> Bmp77_CouponPrintLines { get; set; }
        public virtual DbSet<Bmp78_SponsorInformation> Bmp78_SponsorInformation { get; set; }
        public virtual DbSet<Boh03_ReportingAgentOfficeHeader> Boh03_ReportingAgentOfficeHeader { get; set; }
        public virtual DbSet<Bot93_OfficeSubTotals> Bot93_OfficeSubTotals { get; set; }
        public virtual DbSet<Bot94_OfficeTotals> Bot94_OfficeTotals { get; set; }
        public virtual DbSet<Bar64_DocumentAmount1> Bar64_DocumentAmount1 { get; set; }
        public virtual DbSet<Bar65_PassengerInformation1> Bar65_PassengerInformation1 { get; set; }
        public virtual DbSet<Bar66_AdditionalFormOfPayment1> Bar66_AdditionalFormOfPayment1 { get; set; }
        public virtual DbSet<BCC82_AdditionalCardInformation> BCC82_AdditionalCardInformation { get; set; }
        public virtual DbSet<BCH02_BillingAnalysisHeader1> BCH02_BillingAnalysisHeader1 { get; set; }
        public virtual DbSet<Bct95_BillingAnalysis1> Bct95_BillingAnalysis1 { get; set; }
        public virtual DbSet<BFH01_FileHeader1> BFH01_FileHeader1 { get; set; }
        public virtual DbSet<Bft99_FileTotals1> Bft99_FileTotals1 { get; set; }
        public virtual DbSet<Bkf81_FareCalculation1> Bkf81_FareCalculation1 { get; set; }
        public virtual DbSet<Bki63_ItineraryDataSegment1> Bki63_ItineraryDataSegment1 { get; set; }
        public virtual DbSet<Bkp84_FormOfPayment1> Bkp84_FormOfPayment1 { get; set; }
        public virtual DbSet<Bks24_DocumentIdentification1> Bks24_DocumentIdentification1 { get; set; }
        public virtual DbSet<Bks30_DocumentAmount1> Bks30_DocumentAmount1 { get; set; }
        public virtual DbSet<BKS31_CouponTaxInformation1> BKS31_CouponTaxInformation1 { get; set; }
        public virtual DbSet<Bks39_Commission1> Bks39_Commission1 { get; set; }
        public virtual DbSet<Bks42_TaxOnCommission1> Bks42_TaxOnCommission1 { get; set; }
        public virtual DbSet<Bks45_RelatedDocumentInformation1> Bks45_RelatedDocumentInformation1 { get; set; }
        public virtual DbSet<Bks46_SalesTransactions1> Bks46_SalesTransactions1 { get; set; }
        public virtual DbSet<BKS47_NettingValues> BKS47_NettingValues { get; set; }
        public virtual DbSet<Bkt06_TransactionHeader1> Bkt06_TransactionHeader1 { get; set; }
        public virtual DbSet<Bmd75_ECouponRecords1> Bmd75_ECouponRecords1 { get; set; }
        public virtual DbSet<Bmd76_ERemarkRecords1> Bmd76_ERemarkRecords1 { get; set; }
        public virtual DbSet<Boh03_ReportingAgentOfficeHeader1> Boh03_ReportingAgentOfficeHeader1 { get; set; }
        public virtual DbSet<Bot93_OfficeSubTotals1> Bot93_OfficeSubTotals1 { get; set; }
        public virtual DbSet<Bot94_OfficeTotals1> Bot94_OfficeTotals1 { get; set; }
        public virtual DbSet<CouponException> CouponExceptions { get; set; }
        public virtual DbSet<LiftCoupon> LiftCoupons { get; set; }
        public virtual DbSet<LiftFormOfPayment> LiftFormOfPayments { get; set; }
        public virtual DbSet<LiftHeader> LiftHeaders { get; set; }
        public virtual DbSet<LiftHeaderAddOn> LiftHeaderAddOns { get; set; }
        public virtual DbSet<LiftHeaderIndex> LiftHeaderIndexes { get; set; }
        public virtual DbSet<LiftTax> LiftTaxes { get; set; }
        public virtual DbSet<OriginalUsageType> OriginalUsageTypes { get; set; }
        public virtual DbSet<TicketInSetCorrection> TicketInSetCorrections { get; set; }
        public virtual DbSet<LiftHeaderOld> LiftHeaderOlds { get; set; }
        public virtual DbSet<LiftHeaderAddOn1> LiftHeaderAddOn1 { get; set; }
        public virtual DbSet<LiftCoupon2> LiftCoupon2 { get; set; }
        public virtual DbSet<LiftFormOfPayment2> LiftFormOfPayment2 { get; set; }
        public virtual DbSet<LiftHeader3> LiftHeader3 { get; set; }
        public virtual DbSet<LiftTax2> LiftTax2 { get; set; }
        public virtual DbSet<FileUploadStatu> FileUploadStatus { get; set; }
        public virtual DbSet<FileUploadStatus_Deleted> FileUploadStatus_Deleted { get; set; }
        public virtual DbSet<It01_FileHeader> It01_FileHeader { get; set; }
        public virtual DbSet<It02_Transaction> It02_Transaction { get; set; }
        public virtual DbSet<It04_AdditionalSaleInformation> It04_AdditionalSaleInformation { get; set; }
        public virtual DbSet<It0A_MiscellaneousDocument> It0A_MiscellaneousDocument { get; set; }
        public virtual DbSet<DiscAndBagg> DiscAndBaggs { get; set; }
        public virtual DbSet<Import> Imports { get; set; }
        public virtual DbSet<ImportData> ImportDatas { get; set; }
        public virtual DbSet<FAREBASI> FAREBASIS { get; set; }
        public virtual DbSet<FAREBASIS2> FAREBASIS2 { get; set; }
        public virtual DbSet<FlightSchedule_MD> FlightSchedule_MD { get; set; }
        public virtual DbSet<FlightsSchedule> FlightsSchedules { get; set; }
        public virtual DbSet<FlightsScheduleDone> FlightsScheduleDones { get; set; }
        public virtual DbSet<TFCCollected> TFCCollecteds { get; set; }
        public virtual DbSet<MissingFlightsInLift> MissingFlightsInLifts { get; set; }
        public virtual DbSet<PNLCouponMapping> PNLCouponMappings { get; set; }
        public virtual DbSet<BillingMemo> BillingMemoes { get; set; }
        public virtual DbSet<FileUploadStatus2> FileUploadStatus2 { get; set; }
        public virtual DbSet<frUserChanx> frUserChanges { get; set; }
        public virtual DbSet<frUserTaxChanx> frUserTaxChanges { get; set; }
        public virtual DbSet<History> Histories { get; set; }
        public virtual DbSet<HistoryTax> HistoryTaxes { get; set; }
        public virtual DbSet<Isc> Iscs { get; set; }
        public virtual DbSet<Prime> Primes { get; set; }
        public virtual DbSet<Rejection> Rejections { get; set; }
        public virtual DbSet<RjTax> RjTaxes { get; set; }
        public virtual DbSet<rjUserChanx> rjUserChanges { get; set; }
        public virtual DbSet<rjUserTaxChanx> rjUserTaxChanges { get; set; }
        public virtual DbSet<Contact> Contacts { get; set; }
        public virtual DbSet<Invoice1> Invoice1 { get; set; }
        public virtual DbSet<InvoiceDetail> InvoiceDetails { get; set; }
        public virtual DbSet<Payment> Payments { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<AirlineNoBillingAgreement> AirlineNoBillingAgreements { get; set; }
        public virtual DbSet<InwardImport> InwardImports { get; set; }
        public virtual DbSet<Fare> Fares { get; set; }
        public virtual DbSet<Route> Routes { get; set; }
        public virtual DbSet<ETL> ETLs { get; set; }
        public virtual DbSet<FlightRecord> FlightRecords { get; set; }
        public virtual DbSet<LDM> LDMs { get; set; }
        public virtual DbSet<PF> PFS { get; set; }
        public virtual DbSet<PNL1> PNL1 { get; set; }
        public virtual DbSet<PRL> PRLs { get; set; }
        public virtual DbSet<FlightRecord1> FlightRecord1 { get; set; }
        public virtual DbSet<SL> SLS { get; set; }
        public virtual DbSet<SLSPaxCount> SLSPaxCounts { get; set; }
        public virtual DbSet<Coupons1> Coupons1 { get; set; }
        public virtual DbSet<Coupons_Audit> Coupons_Audit { get; set; }
        public virtual DbSet<InwardBilling> InwardBillings { get; set; }
        public virtual DbSet<InwardBillingTax> InwardBillingTaxes { get; set; }
        public virtual DbSet<NavisionExport> NavisionExports { get; set; }
        public virtual DbSet<OutwardBilling> OutwardBillings { get; set; }
        public virtual DbSet<OutwardBillingTax> OutwardBillingTaxes { get; set; }
        public virtual DbSet<Sale> Sales { get; set; }
        public virtual DbSet<Sales_Audit> Sales_Audit { get; set; }
        public virtual DbSet<Tax_Audit> Tax_Audit { get; set; }
        public virtual DbSet<UpliftTax> UpliftTaxes { get; set; }
        public virtual DbSet<Usage> Usages { get; set; }
        public virtual DbSet<Usage_Audit> Usage_Audit { get; set; }
        public virtual DbSet<ValidatePrime> ValidatePrimes { get; set; }
        public virtual DbSet<ACMADM> ACMADMs { get; set; }
        public virtual DbSet<AdjAnaDocumentCoupon> AdjAnaDocumentCoupons { get; set; }
        public virtual DbSet<AdjAnaDocumentHeader> AdjAnaDocumentHeaders { get; set; }
        public virtual DbSet<AgreementApplicabilityAuditParameter> AgreementApplicabilityAuditParameters { get; set; }
        public virtual DbSet<ApplicableTaxesException> ApplicableTaxesExceptions { get; set; }
        public virtual DbSet<CouponStatusOverride> CouponStatusOverrides { get; set; }
        public virtual DbSet<ExcessBaggage> ExcessBaggages { get; set; }
        public virtual DbSet<Farebasis1> Farebasis1 { get; set; }
        public virtual DbSet<FareComponent> FareComponents { get; set; }
        public virtual DbSet<FCA_Component> FCA_Component { get; set; }
        public virtual DbSet<FIM_OB> FIM_OB { get; set; }
        public virtual DbSet<FIMDetail> FIMDetails { get; set; }
        public virtual DbSet<FIMDetailsEntry> FIMDetailsEntries { get; set; }
        public virtual DbSet<FIMHeader> FIMHeaders { get; set; }
        public virtual DbSet<FIMHeaderData> FIMHeaderDatas { get; set; }
        public virtual DbSet<FIMProrationDetail> FIMProrationDetails { get; set; }
        public virtual DbSet<FlightSchedule> FlightSchedules { get; set; }
        public virtual DbSet<INADHeader> INADHeaders { get; set; }
        public virtual DbSet<INADProrateDetail> INADProrateDetails { get; set; }
        public virtual DbSet<ManualEntryLog> ManualEntryLogs { get; set; }
        public virtual DbSet<ManualRefund> ManualRefunds { get; set; }
        public virtual DbSet<Outward_invs> Outward_invs { get; set; }
        public virtual DbSet<OutwardBilling1> OutwardBilling1 { get; set; }
        public virtual DbSet<OutwardBillingTax1> OutwardBillingTax1 { get; set; }
        public virtual DbSet<PC_AddOn> PC_AddOn { get; set; }
        public virtual DbSet<ProrationDetail> ProrationDetails { get; set; }
        public virtual DbSet<ProrationException> ProrationExceptions { get; set; }
        public virtual DbSet<ProrationHistory> ProrationHistories { get; set; }
        public virtual DbSet<RefundManagement> RefundManagements { get; set; }
        public virtual DbSet<SalesBillingAnalysi> SalesBillingAnalysis { get; set; }
        public virtual DbSet<SalesCouponTaxInformation> SalesCouponTaxInformations { get; set; }
        public virtual DbSet<SalesDocumentAdditionalInfo> SalesDocumentAdditionalInfoes { get; set; }
        public virtual DbSet<SalesDocumentCoupon> SalesDocumentCoupons { get; set; }
        public virtual DbSet<SalesDocumentCouponOriginal> SalesDocumentCouponOriginals { get; set; }
        public virtual DbSet<SalesDocumentHeader> SalesDocumentHeaders { get; set; }
        public virtual DbSet<SalesDocumentOtherAmount> SalesDocumentOtherAmounts { get; set; }
        public virtual DbSet<SalesDocumentPayment> SalesDocumentPayments { get; set; }
        public virtual DbSet<SalesDocumentStatu> SalesDocumentStatus { get; set; }
        public virtual DbSet<SalesRelatedDocumentInformation> SalesRelatedDocumentInformations { get; set; }
        public virtual DbSet<SalesTransactionRemittance> SalesTransactionRemittances { get; set; }
        public virtual DbSet<SLSLDMPaxAdjust> SLSLDMPaxAdjusts { get; set; }
        public virtual DbSet<TicketObservation> TicketObservations { get; set; }
        public virtual DbSet<TicketRemark> TicketRemarks { get; set; }
        public virtual DbSet<FareBasis3> FareBasis3 { get; set; }
        public virtual DbSet<ProrateStep> ProrateSteps { get; set; }
        public virtual DbSet<Agent> Agents { get; set; }
        public virtual DbSet<Agent_Own> Agent_Own { get; set; }
        public virtual DbSet<Agent_Own_MD> Agent_Own_MD { get; set; }
        public virtual DbSet<AgentGuarantee> AgentGuarantees { get; set; }
        public virtual DbSet<AgentSalesLimit> AgentSalesLimits { get; set; }
        public virtual DbSet<Aircraft> Aircraft { get; set; }
        public virtual DbSet<AirlineException> AirlineExceptions { get; set; }
        public virtual DbSet<Airline> Airlines { get; set; }
        public virtual DbSet<Airlines_ICH> Airlines_ICH { get; set; }
        public virtual DbSet<AirportTax> AirportTaxes { get; set; }
        public virtual DbSet<Area_SD> Area_SD { get; set; }
        public virtual DbSet<ATCAN> ATCANs { get; set; }
        public virtual DbSet<BANKERRATE> BANKERRATEs { get; set; }
        public virtual DbSet<BSPClosingPeriod> BSPClosingPeriods { get; set; }
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<CltFareTable> CltFareTables { get; set; }
        public virtual DbSet<CodeShareAgreementDetail> CodeShareAgreementDetails { get; set; }
        public virtual DbSet<CodeShareFlights1> CodeShareFlights1 { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<Currency> Currencies { get; set; }
        public virtual DbSet<CurrencyRate> CurrencyRates { get; set; }
        public virtual DbSet<CurrencyRounding> CurrencyRoundings { get; set; }
        public virtual DbSet<CurrencyType> CurrencyTypes { get; set; }
        public virtual DbSet<Differential> Differentials { get; set; }
        public virtual DbSet<DNA> DNAs { get; set; }
        public virtual DbSet<EMD> EMDs { get; set; }
        public virtual DbSet<FareControl> FareControls { get; set; }
        public virtual DbSet<FarePassengerTypeCode> FarePassengerTypeCodes { get; set; }
        public virtual DbSet<FarePassengerTypeRule> FarePassengerTypeRules { get; set; }
        public virtual DbSet<Flight_SD> Flight_SD { get; set; }
        public virtual DbSet<FlightSchedule_MD1> FlightSchedule_MD1 { get; set; }
        public virtual DbSet<FlightSchedule_RAW_SD> FlightSchedule_RAW_SD { get; set; }
        public virtual DbSet<FormOfPayment_Old> FormOfPayment_Old { get; set; }
        public virtual DbSet<FormOfPaymentCard> FormOfPaymentCards { get; set; }
        public virtual DbSet<FormOfPaymentMode> FormOfPaymentModes { get; set; }
        public virtual DbSet<FreeBaggageAllowance> FreeBaggageAllowances { get; set; }
        public virtual DbSet<FrequencyCode> FrequencyCodes { get; set; }
        public virtual DbSet<FunnelFlight> FunnelFlights { get; set; }
        public virtual DbSet<IataArea> IataAreas { get; set; }
        public virtual DbSet<IATACalendar> IATACalendars { get; set; }
        public virtual DbSet<IataReferenceFile> IataReferenceFiles { get; set; }
        public virtual DbSet<IataSubArea> IataSubAreas { get; set; }
        public virtual DbSet<ISAIRROE> ISAIRROEs { get; set; }
        public virtual DbSet<KK_AccCodes> KK_AccCodes { get; set; }
        public virtual DbSet<KK_ClientCodes> KK_ClientCodes { get; set; }
        public virtual DbSet<KK_SupplierCodes> KK_SupplierCodes { get; set; }
        public virtual DbSet<MadaROE> MadaROEs { get; set; }
        public virtual DbSet<MDAgent_ASD> MDAgent_ASD { get; set; }
        public virtual DbSet<MDAgent_CASS> MDAgent_CASS { get; set; }
        public virtual DbSet<MDITBTHeader> MDITBTHeaders { get; set; }
        public virtual DbSet<ModulePeriod> ModulePeriods { get; set; }
        public virtual DbSet<MR_APG_Office> MR_APG_Office { get; set; }
        public virtual DbSet<Organization> Organizations { get; set; }
        public virtual DbSet<PassengerAgencyDetail> PassengerAgencyDetails { get; set; }
        public virtual DbSet<PaxAgencyDetail> PaxAgencyDetails { get; set; }
        public virtual DbSet<PC_ChangesRate> PC_ChangesRate { get; set; }
        public virtual DbSet<PlusUp> PlusUps { get; set; }
        public virtual DbSet<PMPAttachment> PMPAttachments { get; set; }
        public virtual DbSet<PMPBaseAmount> PMPBaseAmounts { get; set; }
        public virtual DbSet<PMPFactor> PMPFactors { get; set; }
        public virtual DbSet<Proviso_Country_Dictionnary> Proviso_Country_Dictionnary { get; set; }
        public virtual DbSet<ProvisoRulesSectionA> ProvisoRulesSectionAs { get; set; }
        public virtual DbSet<ProvisoRulesSectionB> ProvisoRulesSectionBs { get; set; }
        public virtual DbSet<ProvisoRulesSectionC> ProvisoRulesSectionCs { get; set; }
        public virtual DbSet<ProvisoRulesSectionC_test> ProvisoRulesSectionC_test { get; set; }
        public virtual DbSet<ProvisoRulesSectionC_test2> ProvisoRulesSectionC_test2 { get; set; }
        public virtual DbSet<QSurcharge> QSurcharges { get; set; }
        public virtual DbSet<ReasonCode> ReasonCodes { get; set; }
        public virtual DbSet<Repgroup> Repgroups { get; set; }
        public virtual DbSet<SalesComponent> SalesComponents { get; set; }
        public virtual DbSet<SalesTransactionGroup> SalesTransactionGroups { get; set; }
        public virtual DbSet<SectorsNoApplicableTax> SectorsNoApplicableTaxes { get; set; }
        public virtual DbSet<ServiceCode> ServiceCodes { get; set; }
        public virtual DbSet<SnapBulletin> SnapBulletins { get; set; }
        public virtual DbSet<SourceCode> SourceCodes { get; set; }
        public virtual DbSet<SPC> SPCs { get; set; }
        public virtual DbSet<SSR> SSRs { get; set; }
        public virtual DbSet<SSRCatering> SSRCaterings { get; set; }
        public virtual DbSet<Station_SD> Station_SD { get; set; }
        public virtual DbSet<Stopover> Stopovers { get; set; }
        public virtual DbSet<Surcharge> Surcharges { get; set; }
        public virtual DbSet<Tax2> Tax2 { get; set; }
        public virtual DbSet<Tax_SectorNoTax> Tax_SectorNoTax { get; set; }
        public virtual DbSet<TaxInfo> TaxInfoes { get; set; }
        public virtual DbSet<TaxRegion> TaxRegions { get; set; }
        public virtual DbSet<TFC> TFCs { get; set; }
        public virtual DbSet<TFC_MD> TFC_MD { get; set; }
        public virtual DbSet<TransactionCode> TransactionCodes { get; set; }
        public virtual DbSet<TableDef_CouponTax> TableDef_CouponTax { get; set; }
        public virtual DbSet<TableDef_Document_BSP_Period> TableDef_Document_BSP_Period { get; set; }
        public virtual DbSet<Report> Reports { get; set; }
        public virtual DbSet<ReportsCategory> ReportsCategories { get; set; }
        public virtual DbSet<ReportsCustomised> ReportsCustomiseds { get; set; }
        public virtual DbSet<Tmp_BSP_SAP_Flown_Data_Transfer_Header_KK> Tmp_BSP_SAP_Flown_Data_Transfer_Header_KK { get; set; }
        public virtual DbSet<Tmp_BSP_SAP_Flown_Data_Transfer_KK> Tmp_BSP_SAP_Flown_Data_Transfer_KK { get; set; }
        public virtual DbSet<Tmp_BSP_SAP_LINK_KK> Tmp_BSP_SAP_LINK_KK { get; set; }
        public virtual DbSet<Application> Applications { get; set; }
        public virtual DbSet<ApplicationDefault> ApplicationDefaults { get; set; }
        public virtual DbSet<ASV> ASVs { get; set; }
        public virtual DbSet<ASVException> ASVExceptions { get; set; }
        public virtual DbSet<CodeShareClassMapping> CodeShareClassMappings { get; set; }
        public virtual DbSet<CodeShareFlights2> CodeShareFlights2 { get; set; }
        public virtual DbSet<Discount> Discounts { get; set; }
        public virtual DbSet<FlightRestriction> FlightRestrictions { get; set; }
        public virtual DbSet<IATASeason> IATASeasons { get; set; }
        public virtual DbSet<Signatory> Signatories { get; set; }
        public virtual DbSet<SignatoryCodeShare> SignatoryCodeShares { get; set; }
        public virtual DbSet<Surcharge1> Surcharge1 { get; set; }
        public virtual DbSet<CarrierRDB> CarrierRDBs { get; set; }
        public virtual DbSet<FareBasisRule> FareBasisRules { get; set; }
        public virtual DbSet<FareType> FareTypes { get; set; }
        public virtual DbSet<FlightRestriction1> FlightRestrictions1 { get; set; }
        public virtual DbSet<High_Low> High_Low { get; set; }
        public virtual DbSet<IATASeasons1> IATASeasons1 { get; set; }
        public virtual DbSet<RouteRDBAmount> RouteRDBAmounts { get; set; }
        public virtual DbSet<Route1> Routes1 { get; set; }
        public virtual DbSet<SpaHeader> SpaHeaders { get; set; }
        public virtual DbSet<SpecificISC> SpecificISCs { get; set; }
        public virtual DbSet<ApplicabilityStatu> ApplicabilityStatus { get; set; }
        public virtual DbSet<ApplicabilityStatusFail> ApplicabilityStatusFails { get; set; }
        public virtual DbSet<ASV1> ASV1 { get; set; }
        public virtual DbSet<ASV44> ASV44 { get; set; }
        public virtual DbSet<Main_ApplicabilityStatus> Main_ApplicabilityStatus { get; set; }
        public virtual DbSet<PC_Quotient> PC_Quotient { get; set; }
        public virtual DbSet<VW_PC_Header2> VW_PC_Header2 { get; set; }
        public virtual DbSet<ApplicableTFC> ApplicableTFCs { get; set; }
        public virtual DbSet<BSP_REPORTS_KK> BSP_REPORTS_KK { get; set; }
        public virtual DbSet<OB_ValidatePrime> OB_ValidatePrime { get; set; }
        public virtual DbSet<TableIndexScriptBak_02SEP2015> TableIndexScriptBak_02SEP2015 { get; set; }
        public virtual DbSet<InvoiceAnalytic> InvoiceAnalytics { get; set; }
        public virtual DbSet<Cntry_Airport> Cntry_Airport { get; set; }
        public virtual DbSet<DetailTransactionsData> DetailTransactionsDatas { get; set; }
        public virtual DbSet<FOP> FOPs { get; set; }
        public virtual DbSet<JournalEntry> JournalEntries { get; set; }
        public virtual DbSet<PRORATEDTRANSACTION> PRORATEDTRANSACTIONS { get; set; }
        public virtual DbSet<RefBANKERRATE> RefBANKERRATEs { get; set; }
        public virtual DbSet<RefCurrencyRate> RefCurrencyRates { get; set; }
        public virtual DbSet<RefTaxSurComSum> RefTaxSurComSums { get; set; }
        public virtual DbSet<TRANSACTIONDATA> TRANSACTIONDATAs { get; set; }
        public virtual DbSet<TRANSACTIONENTRY> TRANSACTIONENTRies { get; set; }
        public virtual DbSet<TransactionsData> TransactionsDatas { get; set; }
        public virtual DbSet<TrnChart> TrnCharts { get; set; }
        public virtual DbSet<ConsolidatedData> ConsolidatedDatas { get; set; }
        public virtual DbSet<LastFileUploadStatu> LastFileUploadStatus { get; set; }
        public virtual DbSet<Coupon> Coupons { get; set; }
        public virtual DbSet<FOP1> FOP1 { get; set; }
        public virtual DbSet<Header> Headers { get; set; }
        public virtual DbSet<TAX> TAXes { get; set; }
        public virtual DbSet<LiftHeaderOriginal> LiftHeaderOriginals { get; set; }
        public virtual DbSet<LiftCoupon1> LiftCoupon1 { get; set; }
        public virtual DbSet<LiftFormOfPayment1> LiftFormOfPayment1 { get; set; }
        public virtual DbSet<LiftHeader2> LiftHeader2 { get; set; }
        public virtual DbSet<LiftTax1> LiftTax1 { get; set; }
        public virtual DbSet<Log> Logs { get; set; }
        public virtual DbSet<Passenger> Passengers { get; set; }
        public virtual DbSet<It03_TicketDocumentInformation> It03_TicketDocumentInformation { get; set; }
        public virtual DbSet<It05_MonetaryAmounts> It05_MonetaryAmounts { get; set; }
        public virtual DbSet<It06_Itinerary> It06_Itinerary { get; set; }
        public virtual DbSet<It07_FareCalculation> It07_FareCalculation { get; set; }
        public virtual DbSet<It08_FormOfPayment> It08_FormOfPayment { get; set; }
        public virtual DbSet<It09_AdditionalInformation> It09_AdditionalInformation { get; set; }
        public virtual DbSet<It0B_AdditionalInformation> It0B_AdditionalInformation { get; set; }
        public virtual DbSet<It0C_MiscellaneousCoupon> It0C_MiscellaneousCoupon { get; set; }
        public virtual DbSet<It0D_MiscellaneousCouponLine> It0D_MiscellaneousCouponLine { get; set; }
        public virtual DbSet<It0E_AutomatedTicketAdvice> It0E_AutomatedTicketAdvice { get; set; }
        public virtual DbSet<It0G_EMBCouponDetails> It0G_EMBCouponDetails { get; set; }
        public virtual DbSet<It0S_StockControl> It0S_StockControl { get; set; }
        public virtual DbSet<It0Y_AgencyData> It0Y_AgencyData { get; set; }
        public virtual DbSet<It0Z_FileTrailer> It0Z_FileTrailer { get; set; }
        public virtual DbSet<SACLiftCoupon> SACLiftCoupons { get; set; }
        public virtual DbSet<SACLiftFormOfPayment> SACLiftFormOfPayments { get; set; }
        public virtual DbSet<SACLiftHeader> SACLiftHeaders { get; set; }
        public virtual DbSet<SACLiftTax> SACLiftTaxes { get; set; }
        public virtual DbSet<SalesReport> SalesReports { get; set; }
        public virtual DbSet<NoLift_ForcedFlown> NoLift_ForcedFlown { get; set; }
        public virtual DbSet<PNL> PNLs { get; set; }
        public virtual DbSet<PNL_Doublons> PNL_Doublons { get; set; }
        public virtual DbSet<PrimeTax> PrimeTaxes { get; set; }
        public virtual DbSet<AlreadyRejected> AlreadyRejecteds { get; set; }
        public virtual DbSet<AlreadyRejectedTax> AlreadyRejectedTaxes { get; set; }
        public virtual DbSet<InwardRejectionTaxMemo> InwardRejectionTaxMemoes { get; set; }
        public virtual DbSet<AdjAnaProrationDetail> AdjAnaProrationDetails { get; set; }
        public virtual DbSet<ADMACM> ADMACMs { get; set; }
        public virtual DbSet<CodeShare> CodeShares { get; set; }
        public virtual DbSet<CodeShareFlight> CodeShareFlights { get; set; }
        public virtual DbSet<CodeShareFlightsBak> CodeShareFlightsBaks { get; set; }
        public virtual DbSet<Inward_Details> Inward_Details { get; set; }
        public virtual DbSet<Inward_Header> Inward_Header { get; set; }
        public virtual DbSet<InwardBillingProrationSlip> InwardBillingProrationSlips { get; set; }
        public virtual DbSet<OALift2del> OALift2del { get; set; }
        public virtual DbSet<OalProrationDetail> OalProrationDetails { get; set; }
        public virtual DbSet<OutwardBilling_WrongBilling> OutwardBilling_WrongBilling { get; set; }
        public virtual DbSet<OutwardBillingTax_WrongBilling> OutwardBillingTax_WrongBilling { get; set; }
        public virtual DbSet<PCCustomisedProration> PCCustomisedProrations { get; set; }
        public virtual DbSet<SalesDocumentHeaderOriginal> SalesDocumentHeaderOriginals { get; set; }
        public virtual DbSet<SPAApplicabilityRemark> SPAApplicabilityRemarks { get; set; }
        public virtual DbSet<X_invoiceLine> X_invoiceLine { get; set; }
        public virtual DbSet<Coupons2> Coupons2 { get; set; }
        public virtual DbSet<PNLFileUploadStatu> PNLFileUploadStatus { get; set; }
        public virtual DbSet<SalesDocumentHeader1> SalesDocumentHeader1 { get; set; }
        public virtual DbSet<Tax1> Taxes1 { get; set; }
        public virtual DbSet<Ticket> Tickets { get; set; }
        public virtual DbSet<Airlines_OLD> Airlines_OLD { get; set; }
        public virtual DbSet<FlightSchedule1> FlightSchedule1 { get; set; }
        public virtual DbSet<FormOfPayment> FormOfPayments { get; set; }
        public virtual DbSet<ICHCalendar> ICHCalendars { get; set; }
        public virtual DbSet<MDITBTParcour> MDITBTParcours { get; set; }
        public virtual DbSet<MMR> MMRs { get; set; }
        public virtual DbSet<ModulePeriodHistory> ModulePeriodHistories { get; set; }
        public virtual DbSet<MPR> MPRs { get; set; }
        public virtual DbSet<SLS1> SLS1 { get; set; }
        public virtual DbSet<Tax_Additional> Tax_Additional { get; set; }
        public virtual DbSet<TaxLibrary> TaxLibraries { get; set; }
        public virtual DbSet<Tmp_SaleDates> Tmp_SaleDates { get; set; }
        public virtual DbSet<BSP_SAP_BATCH_REPORTS_KK> BSP_SAP_BATCH_REPORTS_KK { get; set; }
        public virtual DbSet<ReportsCustomization> ReportsCustomizations { get; set; }
        public virtual DbSet<Tmp_BSP_BATCH_REPORTS_KK_Step1> Tmp_BSP_BATCH_REPORTS_KK_Step1 { get; set; }
        public virtual DbSet<Tmp_BSP_BATCH_REPORTS_KK_Step2> Tmp_BSP_BATCH_REPORTS_KK_Step2 { get; set; }
        public virtual DbSet<Tmp_BSP_SAP_LINK_HEADER_KK> Tmp_BSP_SAP_LINK_HEADER_KK { get; set; }
        public virtual DbSet<Endorsement_BAK> Endorsement_BAK { get; set; }
        public virtual DbSet<SPAException> SPAExceptions { get; set; }
        public virtual DbSet<ASV_ViceVersa> ASV_ViceVersa { get; set; }
        public virtual DbSet<fca> fcas { get; set; }
        public virtual DbSet<Orin> Orins { get; set; }
        public virtual DbSet<Trigger_Log> Trigger_Log { get; set; }
        public virtual DbSet<TFCBySector> TFCBySectors { get; set; }
        public virtual DbSet<SalesDocumentCoupon1> SalesDocumentCoupon1 { get; set; }
        public virtual DbSet<SalesDocumentHeader2> SalesDocumentHeader2 { get; set; }
        public virtual DbSet<SalesDocumentOtherAmount1> SalesDocumentOtherAmount1 { get; set; }
        public virtual DbSet<SalesDocumentPayment1> SalesDocumentPayment1 { get; set; }
        public virtual DbSet<SalesRelatedDocumentInformation1> SalesRelatedDocumentInformation1 { get; set; }
        public virtual DbSet<Check_LiftConjunction> Check_LiftConjunction { get; set; }
        public virtual DbSet<Check_LiftCouponDoublon> Check_LiftCouponDoublon { get; set; }
        public virtual DbSet<Check_LiftCouponNumber> Check_LiftCouponNumber { get; set; }
        public virtual DbSet<Check_LiftFileList_Detail> Check_LiftFileList_Detail { get; set; }
        public virtual DbSet<Check_LiftMissingCouponsInPax> Check_LiftMissingCouponsInPax { get; set; }
        public virtual DbSet<Check_LiftOrphan_NoCoupons> Check_LiftOrphan_NoCoupons { get; set; }
        public virtual DbSet<Check_LiftOrphan_NoHeader> Check_LiftOrphan_NoHeader { get; set; }
        public virtual DbSet<Check_LiftReccount> Check_LiftReccount { get; set; }
        public virtual DbSet<HdrGuidFromLiftHeader> HdrGuidFromLiftHeaders { get; set; }
        public virtual DbSet<Listofsector> Listofsectors { get; set; }
        public virtual DbSet<OB_ValidatedTax> OB_ValidatedTax { get; set; }
        public virtual DbSet<OriginalSalesDocumentOtherAmount> OriginalSalesDocumentOtherAmounts { get; set; }
        public virtual DbSet<OriginalSalesDocumentPayment> OriginalSalesDocumentPayments { get; set; }
        public virtual DbSet<SalesDocumentCoupon2> SalesDocumentCoupon2 { get; set; }
        public virtual DbSet<SalesDocumentHeader3> SalesDocumentHeader3 { get; set; }
        public virtual DbSet<SalesDocumentOtherAmount2> SalesDocumentOtherAmount2 { get; set; }
        public virtual DbSet<SalesDocumentPayment2> SalesDocumentPayment2 { get; set; }
        public virtual DbSet<SalesRelatedDocumentInformation2> SalesRelatedDocumentInformation2 { get; set; }
        public virtual DbSet<SysLog1> SysLog1 { get; set; }
        public virtual DbSet<TableColumnSpecsBak_02SEP2015> TableColumnSpecsBak_02SEP2015 { get; set; }
        public virtual DbSet<tmp_DIF> tmp_DIF { get; set; }
        public virtual DbSet<tmp_TKTTBase> tmp_TKTTBase { get; set; }
        public virtual DbSet<SalesDocumentCoupon3> SalesDocumentCoupon3 { get; set; }
        public virtual DbSet<BillingMemoDetail> BillingMemoDetails { get; set; }
        public virtual DbSet<BMHEADER> BMHEADERs { get; set; }
        public virtual DbSet<Correspondence> Correspondences { get; set; }
        public virtual DbSet<DataAddOnCharge> DataAddOnCharges { get; set; }
        public virtual DbSet<DataInvoicesHRD> DataInvoicesHRDs { get; set; }
        public virtual DbSet<DataInvoiceSummary> DataInvoiceSummaries { get; set; }
        public virtual DbSet<DataLineItemDetail> DataLineItemDetails { get; set; }
        public virtual DbSet<DataLineItemDetetailsTXBrkDnw> DataLineItemDetetailsTXBrkDnws { get; set; }
        public virtual DbSet<DataRejAddOnCharge> DataRejAddOnCharges { get; set; }
        public virtual DbSet<DataRejMemoDetail> DataRejMemoDetails { get; set; }
        public virtual DbSet<DataTransmissionHDR> DataTransmissionHDRs { get; set; }
        public virtual DbSet<InvoiceAnalyticsAOCharge> InvoiceAnalyticsAOCharges { get; set; }
        public virtual DbSet<InvoiceAnalyticsTaxBkDwn> InvoiceAnalyticsTaxBkDwns { get; set; }
        public virtual DbSet<XmlPrefix> XmlPrefixes { get; set; }
        public virtual DbSet<XmlRefNormalise> XmlRefNormalises { get; set; }
        public virtual DbSet<xmlRefNormaliseddataTable> xmlRefNormaliseddataTables { get; set; }
        public virtual DbSet<XmlStructureIn> XmlStructureIns { get; set; }
        public virtual DbSet<VW_AllColumns> VW_AllColumns { get; set; }
        public virtual DbSet<VW_Columns> VW_Columns { get; set; }
        public virtual DbSet<VW_Default_Constraints> VW_Default_Constraints { get; set; }
        public virtual DbSet<VW_Definitions_Views_Procedures_Functions> VW_Definitions_Views_Procedures_Functions { get; set; }
        public virtual DbSet<VW_Foreign_Constraints> VW_Foreign_Constraints { get; set; }
        public virtual DbSet<VW_Indexes> VW_Indexes { get; set; }
        public virtual DbSet<VW_Key_Constraints> VW_Key_Constraints { get; set; }
        public virtual DbSet<VW_Table_Types> VW_Table_Types { get; set; }
        public virtual DbSet<VW_Views> VW_Views { get; set; }
        public virtual DbSet<VW_ConsolidatedData> VW_ConsolidatedData { get; set; }
        public virtual DbSet<VW_CouponSummary> VW_CouponSummary { get; set; }
        public virtual DbSet<VW_DocumentSummary> VW_DocumentSummary { get; set; }
        public virtual DbSet<MissingTaxForSectorDetail> MissingTaxForSectorDetails { get; set; }
        public virtual DbSet<VW_ComputedFare> VW_ComputedFare { get; set; }
        public virtual DbSet<VW_FCA_Clean> VW_FCA_Clean { get; set; }
        public virtual DbSet<VW_HOT_ProcessingFileName_For_FBS> VW_HOT_ProcessingFileName_For_FBS { get; set; }
        public virtual DbSet<VW_InwardRejectionMemo> VW_InwardRejectionMemo { get; set; }
        public virtual DbSet<VW_missing_coupons_in_source_data> VW_missing_coupons_in_source_data { get; set; }
        public virtual DbSet<VW_RelatedDocumentOrphans> VW_RelatedDocumentOrphans { get; set; }
        public virtual DbSet<VW_Show_Unprorated> VW_Show_Unprorated { get; set; }
        public virtual DbSet<VW_Document_ReportPeriod> VW_Document_ReportPeriod { get; set; }
        public virtual DbSet<VW_Document_ReportPeriod1> VW_Document_ReportPeriod1 { get; set; }
        public virtual DbSet<VW_Bar64_DocumentAmount> VW_Bar64_DocumentAmount { get; set; }
        public virtual DbSet<VW_Bar65_PassengerInformation> VW_Bar65_PassengerInformation { get; set; }
        public virtual DbSet<VW_Bar66_AdditionalFormOfPayment> VW_Bar66_AdditionalFormOfPayment { get; set; }
        public virtual DbSet<VW_Bch02_BillingAnalysisHeader> VW_Bch02_BillingAnalysisHeader { get; set; }
        public virtual DbSet<VW_Bct95_BillingAnalysis> VW_Bct95_BillingAnalysis { get; set; }
        public virtual DbSet<VW_Bfh01_FileHeader> VW_Bfh01_FileHeader { get; set; }
        public virtual DbSet<VW_Bft99_FileTotals> VW_Bft99_FileTotals { get; set; }
        public virtual DbSet<VW_Bkf81_FareCalculation> VW_Bkf81_FareCalculation { get; set; }
        public virtual DbSet<VW_Bki63_ItineraryDataSegment> VW_Bki63_ItineraryDataSegment { get; set; }
        public virtual DbSet<VW_Bkp83_ElectronicTransaction> VW_Bkp83_ElectronicTransaction { get; set; }
        public virtual DbSet<VW_Bkp84_FormOfPayment> VW_Bkp84_FormOfPayment { get; set; }
        public virtual DbSet<VW_Bks24_DocumentIdentification> VW_Bks24_DocumentIdentification { get; set; }
        public virtual DbSet<VW_Bks30_DocumentAmount> VW_Bks30_DocumentAmount { get; set; }
        public virtual DbSet<VW_BKS31_CouponTaxInformation> VW_BKS31_CouponTaxInformation { get; set; }
        public virtual DbSet<VW_Bks39_Commission> VW_Bks39_Commission { get; set; }
        public virtual DbSet<VW_Bks42_TaxOnCommission> VW_Bks42_TaxOnCommission { get; set; }
        public virtual DbSet<VW_Bks45_RelatedDocumentInformation> VW_Bks45_RelatedDocumentInformation { get; set; }
        public virtual DbSet<VW_Bks46_SalesTransactions> VW_Bks46_SalesTransactions { get; set; }
        public virtual DbSet<VW_Bkt06_TransactionHeader> VW_Bkt06_TransactionHeader { get; set; }
        public virtual DbSet<VW_Bmd75_ECouponRecords> VW_Bmd75_ECouponRecords { get; set; }
        public virtual DbSet<VW_Bmd76_ERemarkRecords> VW_Bmd76_ERemarkRecords { get; set; }
        public virtual DbSet<VW_Bmp71_AdditionalInformation> VW_Bmp71_AdditionalInformation { get; set; }
        public virtual DbSet<VW_Boh03_ReportingAgentOfficeHeader> VW_Boh03_ReportingAgentOfficeHeader { get; set; }
        public virtual DbSet<VW_Bot93_OfficeSubTotals> VW_Bot93_OfficeSubTotals { get; set; }
        public virtual DbSet<VW_Bot94_OfficeTotals> VW_Bot94_OfficeTotals { get; set; }
        public virtual DbSet<VW_Lift_SalesDocumentHeader> VW_Lift_SalesDocumentHeader { get; set; }
        public virtual DbSet<VW_Lift_SalesRelatedDocumentInformation> VW_Lift_SalesRelatedDocumentInformation { get; set; }
        public virtual DbSet<VW_Lifted_Coupon_Validation> VW_Lifted_Coupon_Validation { get; set; }
        public virtual DbSet<VW_LiftHeader_Doublon> VW_LiftHeader_Doublon { get; set; }
        public virtual DbSet<VW_FileUploadStatus_Airline> VW_FileUploadStatus_Airline { get; set; }
        public virtual DbSet<VW_It0A_MiscellaneousDocument> VW_It0A_MiscellaneousDocument { get; set; }
        public virtual DbSet<VW_Match> VW_Match { get; set; }
        public virtual DbSet<ToleranceValue> ToleranceValues { get; set; }
        public virtual DbSet<VW_InwardBilling_Coupons> VW_InwardBilling_Coupons { get; set; }
        public virtual DbSet<VW_InwardBilling_TaxDetail> VW_InwardBilling_TaxDetail { get; set; }
        public virtual DbSet<vw_InwardBillingCheck> vw_InwardBillingCheck { get; set; }
        public virtual DbSet<VW_InwardRejectionList> VW_InwardRejectionList { get; set; }
        public virtual DbSet<VW_InwardRejectionList_Excluding_frUserChanges> VW_InwardRejectionList_Excluding_frUserChanges { get; set; }
        public virtual DbSet<VW_InwardRejectionList_Summary> VW_InwardRejectionList_Summary { get; set; }
        public virtual DbSet<VW_InwardRejectionMemo1> VW_InwardRejectionMemo1 { get; set; }
        public virtual DbSet<VW_InwardRejectionTaxList> VW_InwardRejectionTaxList { get; set; }
        public virtual DbSet<VW_InwardRejectionTaxMemo> VW_InwardRejectionTaxMemo { get; set; }
        public virtual DbSet<VW_Rejection_Check> VW_Rejection_Check { get; set; }
        public virtual DbSet<VW_SecondRejectionList> VW_SecondRejectionList { get; set; }
        public virtual DbSet<VW_ThirdRejectionList> VW_ThirdRejectionList { get; set; }
        public virtual DbSet<AgentSale> AgentSales { get; set; }
        public virtual DbSet<FlownCouponDetail> FlownCouponDetails { get; set; }
        public virtual DbSet<FlownCouponDetailOAL> FlownCouponDetailOALs { get; set; }
        public virtual DbSet<FlownCouponDetailOWN> FlownCouponDetailOWNs { get; set; }
        public virtual DbSet<FlownHeader> FlownHeaders { get; set; }
        public virtual DbSet<FlownMatching> FlownMatchings { get; set; }
        public virtual DbSet<FlownNoMatching> FlownNoMatchings { get; set; }
        public virtual DbSet<GetProration> GetProrations { get; set; }
        public virtual DbSet<JourneyOriginating> JourneyOriginatings { get; set; }
        public virtual DbSet<LiftsQuery> LiftsQueries { get; set; }
        public virtual DbSet<OwnExchange> OwnExchanges { get; set; }
        public virtual DbSet<QRYlift> QRYlifts { get; set; }
        public virtual DbSet<SalesCouponDetail> SalesCouponDetails { get; set; }
        public virtual DbSet<SLS2> SLS2 { get; set; }
        public virtual DbSet<USDRateInBND> USDRateInBNDs { get; set; }
        public virtual DbSet<VW_ApplicableTaxes> VW_ApplicableTaxes { get; set; }
        public virtual DbSet<VW_ApplicableTaxes_Jaivin> VW_ApplicableTaxes_Jaivin { get; set; }
        public virtual DbSet<VW_ApplicableTaxesUSD> VW_ApplicableTaxesUSD { get; set; }
        public virtual DbSet<VW_Attachment_Currency> VW_Attachment_Currency { get; set; }
        public virtual DbSet<VW_Bft99_FileTotals1> VW_Bft99_FileTotals1 { get; set; }
        public virtual DbSet<VW_CancelledTickets> VW_CancelledTickets { get; set; }
        public virtual DbSet<VW_CommissionSum> VW_CommissionSum { get; set; }
        public virtual DbSet<VW_CouponApplicableTaxes> VW_CouponApplicableTaxes { get; set; }
        public virtual DbSet<VW_Document_BSP_Period> VW_Document_BSP_Period { get; set; }
        public virtual DbSet<VW_DocumentsRefunded> VW_DocumentsRefunded { get; set; }
        public virtual DbSet<VW_DocumentsSP_CR_DR> VW_DocumentsSP_CR_DR { get; set; }
        public virtual DbSet<VW_DocumentsSPCR> VW_DocumentsSPCR { get; set; }
        public virtual DbSet<VW_DocumentsSPDR> VW_DocumentsSPDR { get; set; }
        public virtual DbSet<VW_EMD_Details_CAT> VW_EMD_Details_CAT { get; set; }
        public virtual DbSet<VW_EMD_Details_HOT> VW_EMD_Details_HOT { get; set; }
        public virtual DbSet<VW_ExchangeDocument> VW_ExchangeDocument { get; set; }
        public virtual DbSet<VW_FareBasis_Discount> VW_FareBasis_Discount { get; set; }
        public virtual DbSet<VW_FareComponent> VW_FareComponent { get; set; }
        public virtual DbSet<VW_FOPSum> VW_FOPSum { get; set; }
        public virtual DbSet<VW_HOT_Header> VW_HOT_Header { get; set; }
        public virtual DbSet<VW_HOT_Payment> VW_HOT_Payment { get; set; }
        public virtual DbSet<VW_InterlineApplicableTax> VW_InterlineApplicableTax { get; set; }
        public virtual DbSet<VW_InwardBillComp> VW_InwardBillComp { get; set; }
        public virtual DbSet<VW_inwardBills> VW_inwardBills { get; set; }
        public virtual DbSet<VW_InwardCheck> VW_InwardCheck { get; set; }
        public virtual DbSet<VW_Lift> VW_Lift { get; set; }
        public virtual DbSet<VW_Lift_ALL> VW_Lift_ALL { get; set; }
        public virtual DbSet<VW_Lift_CouponUsage> VW_Lift_CouponUsage { get; set; }
        public virtual DbSet<VW_LiftForTransportation> VW_LiftForTransportation { get; set; }
        public virtual DbSet<VW_LiftForTransportation_ForTax> VW_LiftForTransportation_ForTax { get; set; }
        public virtual DbSet<VW_OtherAmount_Other_Sum> VW_OtherAmount_Other_Sum { get; set; }
        public virtual DbSet<VW_Outward_Billing_Report> VW_Outward_Billing_Report { get; set; }
        public virtual DbSet<VW_outwardBilling> VW_outwardBilling { get; set; }
        public virtual DbSet<VW_OutwardBilling_Base> VW_OutwardBilling_Base { get; set; }
        public virtual DbSet<VW_OutwardBillingAndFCA> VW_OutwardBillingAndFCA { get; set; }
        public virtual DbSet<VW_OutwardVATpicker> VW_OutwardVATpicker { get; set; }
        public virtual DbSet<VW_ProrateFactors> VW_ProrateFactors { get; set; }
        public virtual DbSet<VW_ProrationSlip> VW_ProrationSlip { get; set; }
        public virtual DbSet<VW_PSR> VW_PSR { get; set; }
        public virtual DbSet<VW_RefundedRelatedTicket> VW_RefundedRelatedTicket { get; set; }
        public virtual DbSet<VW_RefundedTicket> VW_RefundedTicket { get; set; }
        public virtual DbSet<VW_RetAncillaries> VW_RetAncillaries { get; set; }
        public virtual DbSet<VW_SalesComponent> VW_SalesComponent { get; set; }
        public virtual DbSet<VW_SalesCouponDetail> VW_SalesCouponDetail { get; set; }
        public virtual DbSet<VW_SalesDocumentExchanged> VW_SalesDocumentExchanged { get; set; }
        public virtual DbSet<VW_SalesDocumentOtherAmount> VW_SalesDocumentOtherAmount { get; set; }
        public virtual DbSet<VW_SalesDocumentPayment> VW_SalesDocumentPayment { get; set; }
        public virtual DbSet<VW_SalesHeader> VW_SalesHeader { get; set; }
        public virtual DbSet<VW_SalesMixedFormOfPayment> VW_SalesMixedFormOfPayment { get; set; }
        public virtual DbSet<VW_SectorINcountry> VW_SectorINcountry { get; set; }
        public virtual DbSet<VW_SISCPN> VW_SISCPN { get; set; }
        public virtual DbSet<VW_SurchargesAndTaxSum> VW_SurchargesAndTaxSum { get; set; }
        public virtual DbSet<VW_TaxCommissionSum> VW_TaxCommissionSum { get; set; }
        public virtual DbSet<VW_TaxCompare> VW_TaxCompare { get; set; }
        public virtual DbSet<VW_Ticket_Accounting> VW_Ticket_Accounting { get; set; }
        public virtual DbSet<VW_SalesDocumentCoupon_PNL> VW_SalesDocumentCoupon_PNL { get; set; }
        public virtual DbSet<VW_SalesDocumentHeader_PNL> VW_SalesDocumentHeader_PNL { get; set; }
        public virtual DbSet<VW_SalesRelatedDocumentInformation_PNL> VW_SalesRelatedDocumentInformation_PNL { get; set; }
        public virtual DbSet<VW_Coupons_For_Outward_Billing_Excel> VW_Coupons_For_Outward_Billing_Excel { get; set; }
        public virtual DbSet<VW_CouponsNotToBeProrated> VW_CouponsNotToBeProrated { get; set; }
        public virtual DbSet<Regions_vw> Regions_vw { get; set; }
        public virtual DbSet<VW_Agent> VW_Agent { get; set; }
        public virtual DbSet<VW_ApplicableSurcharge_FareComponent> VW_ApplicableSurcharge_FareComponent { get; set; }
        public virtual DbSet<VW_ApplicableSurcharge_Sector> VW_ApplicableSurcharge_Sector { get; set; }
        public virtual DbSet<VW_CityCurrency> VW_CityCurrency { get; set; }
        public virtual DbSet<VW_FlightSchedule_SD> VW_FlightSchedule_SD { get; set; }
        public virtual DbSet<VW_PMPFactor_Quotient> VW_PMPFactor_Quotient { get; set; }
        public virtual DbSet<VW_ProrationDetail> VW_ProrationDetail { get; set; }
        public virtual DbSet<VW_SD_PaxAmountsConverted> VW_SD_PaxAmountsConverted { get; set; }
        public virtual DbSet<VW_Reports> VW_Reports { get; set; }
        public virtual DbSet<ASV_ViceVersa1> ASV_ViceVersa1 { get; set; }
        public virtual DbSet<ViceVersaWithASV> ViceVersaWithASVs { get; set; }
        public virtual DbSet<VW_ApplicabilityStatus_Summary> VW_ApplicabilityStatus_Summary { get; set; }
        public virtual DbSet<VW_ApplicabilityStatus_Summary_Dates> VW_ApplicabilityStatus_Summary_Dates { get; set; }
        public virtual DbSet<VW_Application> VW_Application { get; set; }
        public virtual DbSet<VW_ASV_ViceVersa> VW_ASV_ViceVersa { get; set; }
        public virtual DbSet<VW_SignatoryAll> VW_SignatoryAll { get; set; }
        public virtual DbSet<VW_LiftCouponToPax> VW_LiftCouponToPax { get; set; }
        public virtual DbSet<VW_LiftHeaderToPaxHeader> VW_LiftHeaderToPaxHeader { get; set; }
        public virtual DbSet<Bar64_DocumentAmount2> Bar64_DocumentAmount2 { get; set; }
        public virtual DbSet<Bki63_ItineraryDataSegment2> Bki63_ItineraryDataSegment2 { get; set; }
        public virtual DbSet<Bkp84_FormOfPayment2> Bkp84_FormOfPayment2 { get; set; }
        public virtual DbSet<Bks30_DocumentAmount2> Bks30_DocumentAmount2 { get; set; }
        public virtual DbSet<Bks39_Commission2> Bks39_Commission2 { get; set; }
        public virtual DbSet<Bkt06_TransactionHeader_SaleDocumentHeader> Bkt06_TransactionHeader_SaleDocumentHeader { get; set; }
        public virtual DbSet<Bkt06_TransactionHeaderCount> Bkt06_TransactionHeaderCount { get; set; }
        public virtual DbSet<Bmp71_AdditionalInformation1> Bmp71_AdditionalInformation1 { get; set; }
        public virtual DbSet<CitiesWithMoreThanOneAirport> CitiesWithMoreThanOneAirports { get; set; }
        public virtual DbSet<FileUploadStatus3> FileUploadStatus3 { get; set; }
        public virtual DbSet<HOTUploadGuid> HOTUploadGuids { get; set; }
        public virtual DbSet<SalesHeaderCountCheck> SalesHeaderCountChecks { get; set; }
        public virtual DbSet<template1> template1 { get; set; }
        public virtual DbSet<TicketWithFOPhavingExchange> TicketWithFOPhavingExchanges { get; set; }
        public virtual DbSet<VW_Orin> VW_Orin { get; set; }
        public virtual DbSet<VW_TFCBySector> VW_TFCBySector { get; set; }
        public virtual DbSet<VW_SysLog> VW_SysLog { get; set; }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "GetCharge")]
        public virtual IQueryable<GetCharge_Result> GetCharge(string chargeCode, string documentNumber, string context)
        {
            var chargeCodeParameter = chargeCode != null ?
                new ObjectParameter("ChargeCode", chargeCode) :
                new ObjectParameter("ChargeCode", typeof(string));
    
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("DocumentNumber", documentNumber) :
                new ObjectParameter("DocumentNumber", typeof(string));
    
            var contextParameter = context != null ?
                new ObjectParameter("Context", context) :
                new ObjectParameter("Context", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetCharge_Result>("[OnsiteBiatss_KKEntities3].[GetCharge](@ChargeCode, @DocumentNumber, @Context)", chargeCodeParameter, documentNumberParameter, contextParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_DelimitedStringToTable")]
        public virtual IQueryable<fn_DelimitedStringToTable_Result> fn_DelimitedStringToTable(string @string, string delimeter, Nullable<bool> trimSpace)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("String", @string) :
                new ObjectParameter("String", typeof(string));
    
            var delimeterParameter = delimeter != null ?
                new ObjectParameter("Delimeter", delimeter) :
                new ObjectParameter("Delimeter", typeof(string));
    
            var trimSpaceParameter = trimSpace.HasValue ?
                new ObjectParameter("TrimSpace", trimSpace) :
                new ObjectParameter("TrimSpace", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_DelimitedStringToTable_Result>("[OnsiteBiatss_KKEntities3].[fn_DelimitedStringToTable](@String, @Delimeter, @TrimSpace)", stringParameter, delimeterParameter, trimSpaceParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_FileList")]
        public virtual IQueryable<fn_FileList_Result> fn_FileList(string fileDirectory)
        {
            var fileDirectoryParameter = fileDirectory != null ?
                new ObjectParameter("FileDirectory", fileDirectory) :
                new ObjectParameter("FileDirectory", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_FileList_Result>("[OnsiteBiatss_KKEntities3].[fn_FileList](@FileDirectory)", fileDirectoryParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_OwnAirline")]
        public virtual IQueryable<fn_OwnAirline_Result> fn_OwnAirline()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_OwnAirline_Result>("[OnsiteBiatss_KKEntities3].[fn_OwnAirline]()");
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_SalesDocumentCoupon")]
        public virtual IQueryable<fn_SalesDocumentCoupon_Result> fn_SalesDocumentCoupon()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_SalesDocumentCoupon_Result>("[OnsiteBiatss_KKEntities3].[fn_SalesDocumentCoupon]()");
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "SalesDocumentCoupon_Tki63")]
        public virtual IQueryable<SalesDocumentCoupon_Tki63_Result> SalesDocumentCoupon_Tki63(Nullable<System.Guid> uploadGuid, string doc)
        {
            var uploadGuidParameter = uploadGuid.HasValue ?
                new ObjectParameter("UploadGuid", uploadGuid) :
                new ObjectParameter("UploadGuid", typeof(System.Guid));
    
            var docParameter = doc != null ?
                new ObjectParameter("Doc", doc) :
                new ObjectParameter("Doc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SalesDocumentCoupon_Tki63_Result>("[OnsiteBiatss_KKEntities3].[SalesDocumentCoupon_Tki63](@UploadGuid, @Doc)", uploadGuidParameter, docParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "SalesBillingAnalysis_Bct95")]
        public virtual IQueryable<SalesBillingAnalysis_Bct95_Result> SalesBillingAnalysis_Bct95()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SalesBillingAnalysis_Bct95_Result>("[OnsiteBiatss_KKEntities3].[SalesBillingAnalysis_Bct95]()");
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "SalesDocumentCoupon_Bki63")]
        public virtual IQueryable<SalesDocumentCoupon_Bki63_Result> SalesDocumentCoupon_Bki63(Nullable<System.Guid> uploadGuid, string doc)
        {
            var uploadGuidParameter = uploadGuid.HasValue ?
                new ObjectParameter("UploadGuid", uploadGuid) :
                new ObjectParameter("UploadGuid", typeof(System.Guid));
    
            var docParameter = doc != null ?
                new ObjectParameter("Doc", doc) :
                new ObjectParameter("Doc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SalesDocumentCoupon_Bki63_Result>("[OnsiteBiatss_KKEntities3].[SalesDocumentCoupon_Bki63](@UploadGuid, @Doc)", uploadGuidParameter, docParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "SalesDocumentHeader_Bkt06")]
        public virtual IQueryable<SalesDocumentHeader_Bkt06_Result> SalesDocumentHeader_Bkt06(Nullable<System.Guid> uploadGuid, string doc)
        {
            var uploadGuidParameter = uploadGuid.HasValue ?
                new ObjectParameter("UploadGuid", uploadGuid) :
                new ObjectParameter("UploadGuid", typeof(System.Guid));
    
            var docParameter = doc != null ?
                new ObjectParameter("Doc", doc) :
                new ObjectParameter("Doc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SalesDocumentHeader_Bkt06_Result>("[OnsiteBiatss_KKEntities3].[SalesDocumentHeader_Bkt06](@UploadGuid, @Doc)", uploadGuidParameter, docParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "SalesDocumentHeader_Bkt06_Test")]
        public virtual IQueryable<SalesDocumentHeader_Bkt06_Test_Result> SalesDocumentHeader_Bkt06_Test(Nullable<System.Guid> uploadGuid, string doc)
        {
            var uploadGuidParameter = uploadGuid.HasValue ?
                new ObjectParameter("UploadGuid", uploadGuid) :
                new ObjectParameter("UploadGuid", typeof(System.Guid));
    
            var docParameter = doc != null ?
                new ObjectParameter("Doc", doc) :
                new ObjectParameter("Doc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SalesDocumentHeader_Bkt06_Test_Result>("[OnsiteBiatss_KKEntities3].[SalesDocumentHeader_Bkt06_Test](@UploadGuid, @Doc)", uploadGuidParameter, docParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "SalesTransactionRemittance_Bot93")]
        public virtual IQueryable<SalesTransactionRemittance_Bot93_Result> SalesTransactionRemittance_Bot93()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SalesTransactionRemittance_Bot93_Result>("[OnsiteBiatss_KKEntities3].[SalesTransactionRemittance_Bot93]()");
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_SalesDocumentCoupon_It06")]
        public virtual IQueryable<fn_SalesDocumentCoupon_It06_Result> fn_SalesDocumentCoupon_It06()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_SalesDocumentCoupon_It06_Result>("[OnsiteBiatss_KKEntities3].[fn_SalesDocumentCoupon_It06]()");
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "SalesDocumentCoupon4")]
        public virtual IQueryable<SalesDocumentCoupon4_Result> SalesDocumentCoupon4()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SalesDocumentCoupon4_Result>("[OnsiteBiatss_KKEntities3].[SalesDocumentCoupon4]()");
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "SalesDocumentHeader_It02")]
        public virtual IQueryable<SalesDocumentHeader_It02_Result> SalesDocumentHeader_It02()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SalesDocumentHeader_It02_Result>("[OnsiteBiatss_KKEntities3].[SalesDocumentHeader_It02]()");
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_SACLiftCoupon_ImportData")]
        public virtual IQueryable<fn_SACLiftCoupon_ImportData_Result> fn_SACLiftCoupon_ImportData(Nullable<System.Guid> uploadGuid)
        {
            var uploadGuidParameter = uploadGuid.HasValue ?
                new ObjectParameter("UploadGuid", uploadGuid) :
                new ObjectParameter("UploadGuid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_SACLiftCoupon_ImportData_Result>("[OnsiteBiatss_KKEntities3].[fn_SACLiftCoupon_ImportData](@UploadGuid)", uploadGuidParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_SACLiftFormOfPayment_ImportData")]
        public virtual IQueryable<fn_SACLiftFormOfPayment_ImportData_Result> fn_SACLiftFormOfPayment_ImportData(Nullable<System.Guid> uploadGuid)
        {
            var uploadGuidParameter = uploadGuid.HasValue ?
                new ObjectParameter("UploadGuid", uploadGuid) :
                new ObjectParameter("UploadGuid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_SACLiftFormOfPayment_ImportData_Result>("[OnsiteBiatss_KKEntities3].[fn_SACLiftFormOfPayment_ImportData](@UploadGuid)", uploadGuidParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_SACLiftFormOfPayment_ImportData_Sequence")]
        public virtual IQueryable<fn_SACLiftFormOfPayment_ImportData_Sequence_Result> fn_SACLiftFormOfPayment_ImportData_Sequence(Nullable<System.Guid> uploadGuid, Nullable<int> sequence)
        {
            var uploadGuidParameter = uploadGuid.HasValue ?
                new ObjectParameter("UploadGuid", uploadGuid) :
                new ObjectParameter("UploadGuid", typeof(System.Guid));
    
            var sequenceParameter = sequence.HasValue ?
                new ObjectParameter("Sequence", sequence) :
                new ObjectParameter("Sequence", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_SACLiftFormOfPayment_ImportData_Sequence_Result>("[OnsiteBiatss_KKEntities3].[fn_SACLiftFormOfPayment_ImportData_Sequence](@UploadGuid, @Sequence)", uploadGuidParameter, sequenceParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_SACLiftHeader_ImportData")]
        public virtual IQueryable<fn_SACLiftHeader_ImportData_Result> fn_SACLiftHeader_ImportData(Nullable<System.Guid> uploadGuid)
        {
            var uploadGuidParameter = uploadGuid.HasValue ?
                new ObjectParameter("UploadGuid", uploadGuid) :
                new ObjectParameter("UploadGuid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_SACLiftHeader_ImportData_Result>("[OnsiteBiatss_KKEntities3].[fn_SACLiftHeader_ImportData](@UploadGuid)", uploadGuidParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_SACLiftTax_ImportData")]
        public virtual IQueryable<fn_SACLiftTax_ImportData_Result> fn_SACLiftTax_ImportData(Nullable<System.Guid> uploadGuid)
        {
            var uploadGuidParameter = uploadGuid.HasValue ?
                new ObjectParameter("UploadGuid", uploadGuid) :
                new ObjectParameter("UploadGuid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_SACLiftTax_ImportData_Result>("[OnsiteBiatss_KKEntities3].[fn_SACLiftTax_ImportData](@UploadGuid)", uploadGuidParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_SACLiftTax_ImportData_Sequence")]
        public virtual IQueryable<fn_SACLiftTax_ImportData_Sequence_Result> fn_SACLiftTax_ImportData_Sequence(Nullable<System.Guid> uploadGuid, Nullable<int> sequence)
        {
            var uploadGuidParameter = uploadGuid.HasValue ?
                new ObjectParameter("UploadGuid", uploadGuid) :
                new ObjectParameter("UploadGuid", typeof(System.Guid));
    
            var sequenceParameter = sequence.HasValue ?
                new ObjectParameter("Sequence", sequence) :
                new ObjectParameter("Sequence", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_SACLiftTax_ImportData_Sequence_Result>("[OnsiteBiatss_KKEntities3].[fn_SACLiftTax_ImportData_Sequence](@UploadGuid, @Sequence)", uploadGuidParameter, sequenceParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "CouponUnused")]
        public virtual IQueryable<CouponUnused_Result> CouponUnused(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<CouponUnused_Result>("[OnsiteBiatss_KKEntities3].[CouponUnused](@From, @To)", fromParameter, toParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_Document_Control")]
        public virtual IQueryable<fn_Document_Control_Result> fn_Document_Control()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_Document_Control_Result>("[OnsiteBiatss_KKEntities3].[fn_Document_Control]()");
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_Farebasis_Split")]
        public virtual IQueryable<fn_Farebasis_Split_Result> fn_Farebasis_Split(string documentAirlineID, string fareBasis)
        {
            var documentAirlineIDParameter = documentAirlineID != null ?
                new ObjectParameter("DocumentAirlineID", documentAirlineID) :
                new ObjectParameter("DocumentAirlineID", typeof(string));
    
            var fareBasisParameter = fareBasis != null ?
                new ObjectParameter("FareBasis", fareBasis) :
                new ObjectParameter("FareBasis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_Farebasis_Split_Result>("[OnsiteBiatss_KKEntities3].[fn_Farebasis_Split](@DocumentAirlineID, @FareBasis)", documentAirlineIDParameter, fareBasisParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_FinalShareSumCheck")]
        public virtual IQueryable<fn_FinalShareSumCheck_Result> fn_FinalShareSumCheck()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_FinalShareSumCheck_Result>("[OnsiteBiatss_KKEntities3].[fn_FinalShareSumCheck]()");
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_FOP")]
        public virtual IQueryable<fn_FOP_Result> fn_FOP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_FOP_Result>("[OnsiteBiatss_KKEntities3].[fn_FOP]()");
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_FOP_UATP_Reclaim")]
        public virtual IQueryable<fn_FOP_UATP_Reclaim_Result> fn_FOP_UATP_Reclaim()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_FOP_UATP_Reclaim_Result>("[OnsiteBiatss_KKEntities3].[fn_FOP_UATP_Reclaim]()");
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_INAD")]
        public virtual IQueryable<fn_INAD_Result> fn_INAD()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_INAD_Result>("[OnsiteBiatss_KKEntities3].[fn_INAD]()");
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_LiftPaxCountAndSLSLDM")]
        public virtual IQueryable<fn_LiftPaxCountAndSLSLDM_Result> fn_LiftPaxCountAndSLSLDM()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_LiftPaxCountAndSLSLDM_Result>("[OnsiteBiatss_KKEntities3].[fn_LiftPaxCountAndSLSLDM]()");
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_MR_SalesDocumentRefund")]
        public virtual IQueryable<fn_MR_SalesDocumentRefund_Result> fn_MR_SalesDocumentRefund()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_MR_SalesDocumentRefund_Result>("[OnsiteBiatss_KKEntities3].[fn_MR_SalesDocumentRefund]()");
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_MR_SalesSummary_All_Agents")]
        public virtual IQueryable<fn_MR_SalesSummary_All_Agents_Result> fn_MR_SalesSummary_All_Agents(Nullable<System.DateTime> saleDateFrom, Nullable<System.DateTime> saleDateTo)
        {
            var saleDateFromParameter = saleDateFrom.HasValue ?
                new ObjectParameter("SaleDateFrom", saleDateFrom) :
                new ObjectParameter("SaleDateFrom", typeof(System.DateTime));
    
            var saleDateToParameter = saleDateTo.HasValue ?
                new ObjectParameter("SaleDateTo", saleDateTo) :
                new ObjectParameter("SaleDateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_MR_SalesSummary_All_Agents_Result>("[OnsiteBiatss_KKEntities3].[fn_MR_SalesSummary_All_Agents](@SaleDateFrom, @SaleDateTo)", saleDateFromParameter, saleDateToParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_MR_SalesSummary_All_Agents_Sectors")]
        public virtual IQueryable<fn_MR_SalesSummary_All_Agents_Sectors_Result> fn_MR_SalesSummary_All_Agents_Sectors(Nullable<System.DateTime> saleDateFrom, Nullable<System.DateTime> saleDateTo)
        {
            var saleDateFromParameter = saleDateFrom.HasValue ?
                new ObjectParameter("SaleDateFrom", saleDateFrom) :
                new ObjectParameter("SaleDateFrom", typeof(System.DateTime));
    
            var saleDateToParameter = saleDateTo.HasValue ?
                new ObjectParameter("SaleDateTo", saleDateTo) :
                new ObjectParameter("SaleDateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_MR_SalesSummary_All_Agents_Sectors_Result>("[OnsiteBiatss_KKEntities3].[fn_MR_SalesSummary_All_Agents_Sectors](@SaleDateFrom, @SaleDateTo)", saleDateFromParameter, saleDateToParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_SalesComponent")]
        public virtual IQueryable<fn_SalesComponent_Result> fn_SalesComponent()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_SalesComponent_Result>("[OnsiteBiatss_KKEntities3].[fn_SalesComponent]()");
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_SalesCouponDetail")]
        public virtual IQueryable<fn_SalesCouponDetail_Result> fn_SalesCouponDetail(string documentNumber)
        {
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("DocumentNumber", documentNumber) :
                new ObjectParameter("DocumentNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_SalesCouponDetail_Result>("[OnsiteBiatss_KKEntities3].[fn_SalesCouponDetail](@DocumentNumber)", documentNumberParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_SalesCouponDetail_Source")]
        public virtual IQueryable<fn_SalesCouponDetail_Source_Result> fn_SalesCouponDetail_Source(string documentNumber)
        {
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("DocumentNumber", documentNumber) :
                new ObjectParameter("DocumentNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_SalesCouponDetail_Source_Result>("[OnsiteBiatss_KKEntities3].[fn_SalesCouponDetail_Source](@DocumentNumber)", documentNumberParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_SalesDocumentFareByCoupon")]
        public virtual IQueryable<fn_SalesDocumentFareByCoupon_Result> fn_SalesDocumentFareByCoupon()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_SalesDocumentFareByCoupon_Result>("[OnsiteBiatss_KKEntities3].[fn_SalesDocumentFareByCoupon]()");
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_SalesDocumentPayment")]
        public virtual IQueryable<fn_SalesDocumentPayment_Result> fn_SalesDocumentPayment()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_SalesDocumentPayment_Result>("[OnsiteBiatss_KKEntities3].[fn_SalesDocumentPayment]()");
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_SalesDocumentPaymentAmountByCoupon")]
        public virtual IQueryable<fn_SalesDocumentPaymentAmountByCoupon_Result> fn_SalesDocumentPaymentAmountByCoupon(Nullable<System.Guid> relatedDocumentGuid, Nullable<int> couponNumber)
        {
            var relatedDocumentGuidParameter = relatedDocumentGuid.HasValue ?
                new ObjectParameter("RelatedDocumentGuid", relatedDocumentGuid) :
                new ObjectParameter("RelatedDocumentGuid", typeof(System.Guid));
    
            var couponNumberParameter = couponNumber.HasValue ?
                new ObjectParameter("CouponNumber", couponNumber) :
                new ObjectParameter("CouponNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_SalesDocumentPaymentAmountByCoupon_Result>("[OnsiteBiatss_KKEntities3].[fn_SalesDocumentPaymentAmountByCoupon](@RelatedDocumentGuid, @CouponNumber)", relatedDocumentGuidParameter, couponNumberParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_SalesFlownMatching")]
        public virtual IQueryable<fn_SalesFlownMatching_Result> fn_SalesFlownMatching()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_SalesFlownMatching_Result>("[OnsiteBiatss_KKEntities3].[fn_SalesFlownMatching]()");
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_SalesHeader")]
        public virtual IQueryable<fn_SalesHeader_Result> fn_SalesHeader()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_SalesHeader_Result>("[OnsiteBiatss_KKEntities3].[fn_SalesHeader]()");
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_SalesHeader_Source")]
        public virtual IQueryable<fn_SalesHeader_Source_Result> fn_SalesHeader_Source()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_SalesHeader_Source_Result>("[OnsiteBiatss_KKEntities3].[fn_SalesHeader_Source]()");
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_SalesSubComponent")]
        public virtual IQueryable<fn_SalesSubComponent_Result> fn_SalesSubComponent(Nullable<System.DateTime> saleDateFrom, Nullable<System.DateTime> saleDateTo)
        {
            var saleDateFromParameter = saleDateFrom.HasValue ?
                new ObjectParameter("SaleDateFrom", saleDateFrom) :
                new ObjectParameter("SaleDateFrom", typeof(System.DateTime));
    
            var saleDateToParameter = saleDateTo.HasValue ?
                new ObjectParameter("SaleDateTo", saleDateTo) :
                new ObjectParameter("SaleDateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_SalesSubComponent_Result>("[OnsiteBiatss_KKEntities3].[fn_SalesSubComponent](@SaleDateFrom, @SaleDateTo)", saleDateFromParameter, saleDateToParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_SalesUtilisation")]
        public virtual IQueryable<fn_SalesUtilisation_Result> fn_SalesUtilisation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_SalesUtilisation_Result>("[OnsiteBiatss_KKEntities3].[fn_SalesUtilisation]()");
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_SLSLDM")]
        public virtual IQueryable<fn_SLSLDM_Result> fn_SLSLDM()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_SLSLDM_Result>("[OnsiteBiatss_KKEntities3].[fn_SLSLDM]()");
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_SLSLDM_Adjust")]
        public virtual IQueryable<fn_SLSLDM_Adjust_Result> fn_SLSLDM_Adjust()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_SLSLDM_Adjust_Result>("[OnsiteBiatss_KKEntities3].[fn_SLSLDM_Adjust]()");
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "OutwardBillingToExcel")]
        public virtual IQueryable<OutwardBillingToExcel_Result> OutwardBillingToExcel(string bILLINGPERIOD)
        {
            var bILLINGPERIODParameter = bILLINGPERIOD != null ?
                new ObjectParameter("BILLINGPERIOD", bILLINGPERIOD) :
                new ObjectParameter("BILLINGPERIOD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<OutwardBillingToExcel_Result>("[OnsiteBiatss_KKEntities3].[OutwardBillingToExcel](@BILLINGPERIOD)", bILLINGPERIODParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "OutwardBillingToExcelDetail")]
        public virtual IQueryable<OutwardBillingToExcelDetail_Result> OutwardBillingToExcelDetail(string bILLINGPERIOD)
        {
            var bILLINGPERIODParameter = bILLINGPERIOD != null ?
                new ObjectParameter("BILLINGPERIOD", bILLINGPERIOD) :
                new ObjectParameter("BILLINGPERIOD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<OutwardBillingToExcelDetail_Result>("[OnsiteBiatss_KKEntities3].[OutwardBillingToExcelDetail](@BILLINGPERIOD)", bILLINGPERIODParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "OutwardBillingToExcelSummary")]
        public virtual IQueryable<OutwardBillingToExcelSummary_Result> OutwardBillingToExcelSummary(string bILLINGPERIOD)
        {
            var bILLINGPERIODParameter = bILLINGPERIOD != null ?
                new ObjectParameter("BILLINGPERIOD", bILLINGPERIOD) :
                new ObjectParameter("BILLINGPERIOD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<OutwardBillingToExcelSummary_Result>("[OnsiteBiatss_KKEntities3].[OutwardBillingToExcelSummary](@BILLINGPERIOD)", bILLINGPERIODParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "OutwardBillingToExcelTax")]
        public virtual IQueryable<OutwardBillingToExcelTax_Result> OutwardBillingToExcelTax(string bILLINGPERIOD)
        {
            var bILLINGPERIODParameter = bILLINGPERIOD != null ?
                new ObjectParameter("BILLINGPERIOD", bILLINGPERIOD) :
                new ObjectParameter("BILLINGPERIOD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<OutwardBillingToExcelTax_Result>("[OnsiteBiatss_KKEntities3].[OutwardBillingToExcelTax](@BILLINGPERIOD)", bILLINGPERIODParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "SalesComponentSummary")]
        public virtual IQueryable<SalesComponentSummary_Result> SalesComponentSummary(string fromPeriod, string toPeriod, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string agentNumericCode, string reportOption)
        {
            var fromPeriodParameter = fromPeriod != null ?
                new ObjectParameter("FromPeriod", fromPeriod) :
                new ObjectParameter("FromPeriod", typeof(string));
    
            var toPeriodParameter = toPeriod != null ?
                new ObjectParameter("ToPeriod", toPeriod) :
                new ObjectParameter("ToPeriod", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var agentNumericCodeParameter = agentNumericCode != null ?
                new ObjectParameter("AgentNumericCode", agentNumericCode) :
                new ObjectParameter("AgentNumericCode", typeof(string));
    
            var reportOptionParameter = reportOption != null ?
                new ObjectParameter("ReportOption", reportOption) :
                new ObjectParameter("ReportOption", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SalesComponentSummary_Result>("[OnsiteBiatss_KKEntities3].[SalesComponentSummary](@FromPeriod, @ToPeriod, @FromDate, @ToDate, @AgentNumericCode, @ReportOption)", fromPeriodParameter, toPeriodParameter, fromDateParameter, toDateParameter, agentNumericCodeParameter, reportOptionParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "SalesDocumentOtherAmountSummary")]
        public virtual IQueryable<SalesDocumentOtherAmountSummary_Result> SalesDocumentOtherAmountSummary(string fromPeriod, string toPeriod, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string agentNumericCode, string reportOption)
        {
            var fromPeriodParameter = fromPeriod != null ?
                new ObjectParameter("FromPeriod", fromPeriod) :
                new ObjectParameter("FromPeriod", typeof(string));
    
            var toPeriodParameter = toPeriod != null ?
                new ObjectParameter("ToPeriod", toPeriod) :
                new ObjectParameter("ToPeriod", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var agentNumericCodeParameter = agentNumericCode != null ?
                new ObjectParameter("AgentNumericCode", agentNumericCode) :
                new ObjectParameter("AgentNumericCode", typeof(string));
    
            var reportOptionParameter = reportOption != null ?
                new ObjectParameter("ReportOption", reportOption) :
                new ObjectParameter("ReportOption", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SalesDocumentOtherAmountSummary_Result>("[OnsiteBiatss_KKEntities3].[SalesDocumentOtherAmountSummary](@FromPeriod, @ToPeriod, @FromDate, @ToDate, @AgentNumericCode, @ReportOption)", fromPeriodParameter, toPeriodParameter, fromDateParameter, toDateParameter, agentNumericCodeParameter, reportOptionParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "SalesDocumentPaymentSummary")]
        public virtual IQueryable<SalesDocumentPaymentSummary_Result> SalesDocumentPaymentSummary(string fromPeriod, string toPeriod, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string agentNumericCode, string reportOption)
        {
            var fromPeriodParameter = fromPeriod != null ?
                new ObjectParameter("FromPeriod", fromPeriod) :
                new ObjectParameter("FromPeriod", typeof(string));
    
            var toPeriodParameter = toPeriod != null ?
                new ObjectParameter("ToPeriod", toPeriod) :
                new ObjectParameter("ToPeriod", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var agentNumericCodeParameter = agentNumericCode != null ?
                new ObjectParameter("AgentNumericCode", agentNumericCode) :
                new ObjectParameter("AgentNumericCode", typeof(string));
    
            var reportOptionParameter = reportOption != null ?
                new ObjectParameter("ReportOption", reportOption) :
                new ObjectParameter("ReportOption", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SalesDocumentPaymentSummary_Result>("[OnsiteBiatss_KKEntities3].[SalesDocumentPaymentSummary](@FromPeriod, @ToPeriod, @FromDate, @ToDate, @AgentNumericCode, @ReportOption)", fromPeriodParameter, toPeriodParameter, fromDateParameter, toDateParameter, agentNumericCodeParameter, reportOptionParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "fn_VaryingFinalShareSameMOS")]
        public virtual IQueryable<fn_VaryingFinalShareSameMOS_Result> fn_VaryingFinalShareSameMOS(string prevMOS)
        {
            var prevMOSParameter = prevMOS != null ?
                new ObjectParameter("PrevMOS", prevMOS) :
                new ObjectParameter("PrevMOS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_VaryingFinalShareSameMOS_Result>("[OnsiteBiatss_KKEntities3].[fn_VaryingFinalShareSameMOS](@PrevMOS)", prevMOSParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "ApplicabilityStatus1")]
        public virtual IQueryable<ApplicabilityStatus1_Result> ApplicabilityStatus1(string documentNumber)
        {
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("DocumentNumber", documentNumber) :
                new ObjectParameter("DocumentNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ApplicabilityStatus1_Result>("[OnsiteBiatss_KKEntities3].[ApplicabilityStatus1](@DocumentNumber)", documentNumberParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "ApplicabilityStatus_Summary")]
        public virtual IQueryable<ApplicabilityStatus_Summary_Result> ApplicabilityStatus_Summary(string documentNumber)
        {
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("DocumentNumber", documentNumber) :
                new ObjectParameter("DocumentNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ApplicabilityStatus_Summary_Result>("[OnsiteBiatss_KKEntities3].[ApplicabilityStatus_Summary](@DocumentNumber)", documentNumberParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "GetCouponSPA")]
        public virtual IQueryable<GetCouponSPA_Result> GetCouponSPA(string relatedDocumentGuid, string documentNumber, Nullable<int> couponNumber)
        {
            var relatedDocumentGuidParameter = relatedDocumentGuid != null ?
                new ObjectParameter("RelatedDocumentGuid", relatedDocumentGuid) :
                new ObjectParameter("RelatedDocumentGuid", typeof(string));
    
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("DocumentNumber", documentNumber) :
                new ObjectParameter("DocumentNumber", typeof(string));
    
            var couponNumberParameter = couponNumber.HasValue ?
                new ObjectParameter("CouponNumber", couponNumber) :
                new ObjectParameter("CouponNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetCouponSPA_Result>("[OnsiteBiatss_KKEntities3].[GetCouponSPA](@RelatedDocumentGuid, @DocumentNumber, @CouponNumber)", relatedDocumentGuidParameter, documentNumberParameter, couponNumberParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "GetSPA")]
        public virtual IQueryable<GetSPA_Result> GetSPA(string documentNumber)
        {
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("DocumentNumber", documentNumber) :
                new ObjectParameter("DocumentNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetSPA_Result>("[OnsiteBiatss_KKEntities3].[GetSPA](@DocumentNumber)", documentNumberParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "GetSPA_Source")]
        public virtual IQueryable<GetSPA_Source_Result> GetSPA_Source(string documentNumber)
        {
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("DocumentNumber", documentNumber) :
                new ObjectParameter("DocumentNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetSPA_Source_Result>("[OnsiteBiatss_KKEntities3].[GetSPA_Source](@DocumentNumber)", documentNumberParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "GetTicketsAllCarrierSPANumber")]
        public virtual IQueryable<GetTicketsAllCarrierSPANumber_Result> GetTicketsAllCarrierSPANumber(string documentNumber)
        {
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("DocumentNumber", documentNumber) :
                new ObjectParameter("DocumentNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetTicketsAllCarrierSPANumber_Result>("[OnsiteBiatss_KKEntities3].[GetTicketsAllCarrierSPANumber](@DocumentNumber)", documentNumberParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "Main_ApplicabilityStatus1")]
        public virtual IQueryable<Main_ApplicabilityStatus1_Result> Main_ApplicabilityStatus1(string documentNumber)
        {
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("DocumentNumber", documentNumber) :
                new ObjectParameter("DocumentNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Main_ApplicabilityStatus1_Result>("[OnsiteBiatss_KKEntities3].[Main_ApplicabilityStatus1](@DocumentNumber)", documentNumberParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "MissingCarrierWhenBothRequiredInATBP")]
        public virtual IQueryable<MissingCarrierWhenBothRequiredInATBP_Result> MissingCarrierWhenBothRequiredInATBP(string documentNumber, string relatedDocumentGuid)
        {
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("DocumentNumber", documentNumber) :
                new ObjectParameter("DocumentNumber", typeof(string));
    
            var relatedDocumentGuidParameter = relatedDocumentGuid != null ?
                new ObjectParameter("RelatedDocumentGuid", relatedDocumentGuid) :
                new ObjectParameter("RelatedDocumentGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<MissingCarrierWhenBothRequiredInATBP_Result>("[OnsiteBiatss_KKEntities3].[MissingCarrierWhenBothRequiredInATBP](@DocumentNumber, @RelatedDocumentGuid)", documentNumberParameter, relatedDocumentGuidParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "MissingCarrierWhenBothRequiredInJourney")]
        public virtual IQueryable<MissingCarrierWhenBothRequiredInJourney_Result> MissingCarrierWhenBothRequiredInJourney(string documentNumber, string hdrGuid)
        {
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("DocumentNumber", documentNumber) :
                new ObjectParameter("DocumentNumber", typeof(string));
    
            var hdrGuidParameter = hdrGuid != null ?
                new ObjectParameter("HdrGuid", hdrGuid) :
                new ObjectParameter("HdrGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<MissingCarrierWhenBothRequiredInJourney_Result>("[OnsiteBiatss_KKEntities3].[MissingCarrierWhenBothRequiredInJourney](@DocumentNumber, @HdrGuid)", documentNumberParameter, hdrGuidParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "OtherPartyInvolvedAnotherATBP")]
        public virtual IQueryable<OtherPartyInvolvedAnotherATBP_Result> OtherPartyInvolvedAnotherATBP(string documentNumber)
        {
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("DocumentNumber", documentNumber) :
                new ObjectParameter("DocumentNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<OtherPartyInvolvedAnotherATBP_Result>("[OnsiteBiatss_KKEntities3].[OtherPartyInvolvedAnotherATBP](@DocumentNumber)", documentNumberParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "OtherPartyInvolvedJourney")]
        public virtual IQueryable<OtherPartyInvolvedJourney_Result> OtherPartyInvolvedJourney(string documentNumber)
        {
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("DocumentNumber", documentNumber) :
                new ObjectParameter("DocumentNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<OtherPartyInvolvedJourney_Result>("[OnsiteBiatss_KKEntities3].[OtherPartyInvolvedJourney](@DocumentNumber)", documentNumberParameter);
        }
    
        [DbFunction("OnsiteBiatss_KKEntities3", "OtherPartyInvolvedSameATBP")]
        public virtual IQueryable<OtherPartyInvolvedSameATBP_Result> OtherPartyInvolvedSameATBP(string documentNumber)
        {
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("DocumentNumber", documentNumber) :
                new ObjectParameter("DocumentNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<OtherPartyInvolvedSameATBP_Result>("[OnsiteBiatss_KKEntities3].[OtherPartyInvolvedSameATBP](@DocumentNumber)", documentNumberParameter);
        }
    
        public virtual int GenerateAccounting(string context, string documentNumber)
        {
            var contextParameter = context != null ?
                new ObjectParameter("Context", context) :
                new ObjectParameter("Context", typeof(string));
    
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("documentNumber", documentNumber) :
                new ObjectParameter("documentNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenerateAccounting", contextParameter, documentNumberParameter);
        }
    
        public virtual ObjectResult<GetAccountingListingByTicket_Result> GetAccountingListingByTicket(string ticketAirlineID, string ticketNumber, string accountingContext)
        {
            var ticketAirlineIDParameter = ticketAirlineID != null ?
                new ObjectParameter("TicketAirlineID", ticketAirlineID) :
                new ObjectParameter("TicketAirlineID", typeof(string));
    
            var ticketNumberParameter = ticketNumber != null ?
                new ObjectParameter("TicketNumber", ticketNumber) :
                new ObjectParameter("TicketNumber", typeof(string));
    
            var accountingContextParameter = accountingContext != null ?
                new ObjectParameter("AccountingContext", accountingContext) :
                new ObjectParameter("AccountingContext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAccountingListingByTicket_Result>("GetAccountingListingByTicket", ticketAirlineIDParameter, ticketNumberParameter, accountingContextParameter);
        }
    
        public virtual ObjectResult<GetAccountingSummaryByTicket_Result> GetAccountingSummaryByTicket(string ticketAirlineID, string ticketNumber, string accountingContext)
        {
            var ticketAirlineIDParameter = ticketAirlineID != null ?
                new ObjectParameter("TicketAirlineID", ticketAirlineID) :
                new ObjectParameter("TicketAirlineID", typeof(string));
    
            var ticketNumberParameter = ticketNumber != null ?
                new ObjectParameter("TicketNumber", ticketNumber) :
                new ObjectParameter("TicketNumber", typeof(string));
    
            var accountingContextParameter = accountingContext != null ?
                new ObjectParameter("AccountingContext", accountingContext) :
                new ObjectParameter("AccountingContext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAccountingSummaryByTicket_Result>("GetAccountingSummaryByTicket", ticketAirlineIDParameter, ticketNumberParameter, accountingContextParameter);
        }
    
        public virtual ObjectResult<GetAccountingSummaryNetByTicket_Result> GetAccountingSummaryNetByTicket(string ticketAirlineID, string ticketNumber, string accountingContext)
        {
            var ticketAirlineIDParameter = ticketAirlineID != null ?
                new ObjectParameter("TicketAirlineID", ticketAirlineID) :
                new ObjectParameter("TicketAirlineID", typeof(string));
    
            var ticketNumberParameter = ticketNumber != null ?
                new ObjectParameter("TicketNumber", ticketNumber) :
                new ObjectParameter("TicketNumber", typeof(string));
    
            var accountingContextParameter = accountingContext != null ?
                new ObjectParameter("AccountingContext", accountingContext) :
                new ObjectParameter("AccountingContext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAccountingSummaryNetByTicket_Result>("GetAccountingSummaryNetByTicket", ticketAirlineIDParameter, ticketNumberParameter, accountingContextParameter);
        }
    
        public virtual int database_backup(string path)
        {
            var pathParameter = path != null ?
                new ObjectParameter("path", path) :
                new ObjectParameter("path", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("database_backup", pathParameter);
        }
    
        public virtual int DatabaseCompare(string password, Nullable<int> all, Nullable<int> show)
        {
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var allParameter = all.HasValue ?
                new ObjectParameter("All", all) :
                new ObjectParameter("All", typeof(int));
    
            var showParameter = show.HasValue ?
                new ObjectParameter("Show", show) :
                new ObjectParameter("Show", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DatabaseCompare", passwordParameter, allParameter, showParameter);
        }
    
        public virtual int DatabaseRestore(string mdf, string backupFilePath, string physicalFilePath)
        {
            var mdfParameter = mdf != null ?
                new ObjectParameter("Mdf", mdf) :
                new ObjectParameter("Mdf", typeof(string));
    
            var backupFilePathParameter = backupFilePath != null ?
                new ObjectParameter("BackupFilePath", backupFilePath) :
                new ObjectParameter("BackupFilePath", typeof(string));
    
            var physicalFilePathParameter = physicalFilePath != null ?
                new ObjectParameter("PhysicalFilePath", physicalFilePath) :
                new ObjectParameter("PhysicalFilePath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DatabaseRestore", mdfParameter, backupFilePathParameter, physicalFilePathParameter);
        }
    
        public virtual int GenTable()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenTable");
        }
    
        public virtual int GlobalDelete(Nullable<System.DateTime> processingDate, string processingFileName, string processingFileType, string uploadGuid, Nullable<System.DateTime> batchID, string uploadGuidList, Nullable<int> op)
        {
            var processingDateParameter = processingDate.HasValue ?
                new ObjectParameter("ProcessingDate", processingDate) :
                new ObjectParameter("ProcessingDate", typeof(System.DateTime));
    
            var processingFileNameParameter = processingFileName != null ?
                new ObjectParameter("ProcessingFileName", processingFileName) :
                new ObjectParameter("ProcessingFileName", typeof(string));
    
            var processingFileTypeParameter = processingFileType != null ?
                new ObjectParameter("ProcessingFileType", processingFileType) :
                new ObjectParameter("ProcessingFileType", typeof(string));
    
            var uploadGuidParameter = uploadGuid != null ?
                new ObjectParameter("UploadGuid", uploadGuid) :
                new ObjectParameter("UploadGuid", typeof(string));
    
            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(System.DateTime));
    
            var uploadGuidListParameter = uploadGuidList != null ?
                new ObjectParameter("UploadGuidList", uploadGuidList) :
                new ObjectParameter("UploadGuidList", typeof(string));
    
            var opParameter = op.HasValue ?
                new ObjectParameter("Op", op) :
                new ObjectParameter("Op", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GlobalDelete", processingDateParameter, processingFileNameParameter, processingFileTypeParameter, uploadGuidParameter, batchIDParameter, uploadGuidListParameter, opParameter);
        }
    
        public virtual int GlobalDelete_FileSac_ALL(Nullable<int> op)
        {
            var opParameter = op.HasValue ?
                new ObjectParameter("Op", op) :
                new ObjectParameter("Op", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GlobalDelete_FileSac_ALL", opParameter);
        }
    
        public virtual int GlobalDeleteNew(Nullable<System.DateTime> processingDate, string processingFileName, string processingFileType, string uploadGuid, Nullable<System.DateTime> batchID, string uploadGuidList, Nullable<int> op)
        {
            var processingDateParameter = processingDate.HasValue ?
                new ObjectParameter("ProcessingDate", processingDate) :
                new ObjectParameter("ProcessingDate", typeof(System.DateTime));
    
            var processingFileNameParameter = processingFileName != null ?
                new ObjectParameter("ProcessingFileName", processingFileName) :
                new ObjectParameter("ProcessingFileName", typeof(string));
    
            var processingFileTypeParameter = processingFileType != null ?
                new ObjectParameter("ProcessingFileType", processingFileType) :
                new ObjectParameter("ProcessingFileType", typeof(string));
    
            var uploadGuidParameter = uploadGuid != null ?
                new ObjectParameter("UploadGuid", uploadGuid) :
                new ObjectParameter("UploadGuid", typeof(string));
    
            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(System.DateTime));
    
            var uploadGuidListParameter = uploadGuidList != null ?
                new ObjectParameter("UploadGuidList", uploadGuidList) :
                new ObjectParameter("UploadGuidList", typeof(string));
    
            var opParameter = op.HasValue ?
                new ObjectParameter("Op", op) :
                new ObjectParameter("Op", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GlobalDeleteNew", processingDateParameter, processingFileNameParameter, processingFileTypeParameter, uploadGuidParameter, batchIDParameter, uploadGuidListParameter, opParameter);
        }
    
        public virtual int ListExceptions()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ListExceptions");
        }
    
        public virtual int RefreshAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RefreshAll");
        }
    
        public virtual int RefreshAllFunctions()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RefreshAllFunctions");
        }
    
        public virtual int RefreshAllProcedure()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RefreshAllProcedure");
        }
    
        public virtual int RefreshAllViews()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RefreshAllViews");
        }
    
        public virtual ObjectResult<SP_Airline_Object_Permissions_Result> SP_Airline_Object_Permissions()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Airline_Object_Permissions_Result>("SP_Airline_Object_Permissions");
        }
    
        public virtual int SP_BackUpIndexesAndKeys()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_BackUpIndexesAndKeys");
        }
    
        public virtual int SP_BackUpTableCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_BackUpTableCount");
        }
    
        public virtual int SP_Change_nvarchar_to_varchar(string schemaName, string tableName)
        {
            var schemaNameParameter = schemaName != null ?
                new ObjectParameter("SchemaName", schemaName) :
                new ObjectParameter("SchemaName", typeof(string));
    
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Change_nvarchar_to_varchar", schemaNameParameter, tableNameParameter);
        }
    
        public virtual int SP_DropStatistics(string objectName, string columnName)
        {
            var objectNameParameter = objectName != null ?
                new ObjectParameter("ObjectName", objectName) :
                new ObjectParameter("ObjectName", typeof(string));
    
            var columnNameParameter = columnName != null ?
                new ObjectParameter("ColumnName", columnName) :
                new ObjectParameter("ColumnName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DropStatistics", objectNameParameter, columnNameParameter);
        }
    
        public virtual int SP_ExportTable(string targetName, string sql)
        {
            var targetNameParameter = targetName != null ?
                new ObjectParameter("TargetName", targetName) :
                new ObjectParameter("TargetName", typeof(string));
    
            var sqlParameter = sql != null ?
                new ObjectParameter("Sql", sql) :
                new ObjectParameter("Sql", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ExportTable", targetNameParameter, sqlParameter);
        }
    
        public virtual int SP_FieldType_GlobalChange(string schemaIncludeList, string tableIncludeList, string schemaExcludeList, string tableExcludeList)
        {
            var schemaIncludeListParameter = schemaIncludeList != null ?
                new ObjectParameter("SchemaIncludeList", schemaIncludeList) :
                new ObjectParameter("SchemaIncludeList", typeof(string));
    
            var tableIncludeListParameter = tableIncludeList != null ?
                new ObjectParameter("TableIncludeList", tableIncludeList) :
                new ObjectParameter("TableIncludeList", typeof(string));
    
            var schemaExcludeListParameter = schemaExcludeList != null ?
                new ObjectParameter("SchemaExcludeList", schemaExcludeList) :
                new ObjectParameter("SchemaExcludeList", typeof(string));
    
            var tableExcludeListParameter = tableExcludeList != null ?
                new ObjectParameter("TableExcludeList", tableExcludeList) :
                new ObjectParameter("TableExcludeList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_FieldType_GlobalChange", schemaIncludeListParameter, tableIncludeListParameter, schemaExcludeListParameter, tableExcludeListParameter);
        }
    
        public virtual int SP_FileDateTimeAttribute(string filepath, string filename, ObjectParameter attribute)
        {
            var filepathParameter = filepath != null ?
                new ObjectParameter("Filepath", filepath) :
                new ObjectParameter("Filepath", typeof(string));
    
            var filenameParameter = filename != null ?
                new ObjectParameter("Filename", filename) :
                new ObjectParameter("Filename", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_FileDateTimeAttribute", filepathParameter, filenameParameter, attribute);
        }
    
        public virtual int SP_Generate_Create_Indexes(string p_SchemaName, string p_TableName, ObjectParameter sql)
        {
            var p_SchemaNameParameter = p_SchemaName != null ?
                new ObjectParameter("P_SchemaName", p_SchemaName) :
                new ObjectParameter("P_SchemaName", typeof(string));
    
            var p_TableNameParameter = p_TableName != null ?
                new ObjectParameter("P_TableName", p_TableName) :
                new ObjectParameter("P_TableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Generate_Create_Indexes", p_SchemaNameParameter, p_TableNameParameter, sql);
        }
    
        public virtual int SP_Generate_Drop_Indexes(string p_SchemaName, string p_TableName, ObjectParameter sql)
        {
            var p_SchemaNameParameter = p_SchemaName != null ?
                new ObjectParameter("P_SchemaName", p_SchemaName) :
                new ObjectParameter("P_SchemaName", typeof(string));
    
            var p_TableNameParameter = p_TableName != null ?
                new ObjectParameter("P_TableName", p_TableName) :
                new ObjectParameter("P_TableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Generate_Drop_Indexes", p_SchemaNameParameter, p_TableNameParameter, sql);
        }
    
        public virtual ObjectResult<SP_GenerateColumnSpecsForCSharp_Result> SP_GenerateColumnSpecsForCSharp(string procedureName, string objectNumber)
        {
            var procedureNameParameter = procedureName != null ?
                new ObjectParameter("ProcedureName", procedureName) :
                new ObjectParameter("ProcedureName", typeof(string));
    
            var objectNumberParameter = objectNumber != null ?
                new ObjectParameter("ObjectNumber", objectNumber) :
                new ObjectParameter("ObjectNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GenerateColumnSpecsForCSharp_Result>("SP_GenerateColumnSpecsForCSharp", procedureNameParameter, objectNumberParameter);
        }
    
        public virtual ObjectResult<SP_GlobalParams_Result> SP_GlobalParams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GlobalParams_Result>("SP_GlobalParams");
        }
    
        public virtual int SP_GrantPermissionToAirline()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GrantPermissionToAirline");
        }
    
        public virtual int SP_Import_5DayRate(string filePath)
        {
            var filePathParameter = filePath != null ?
                new ObjectParameter("FilePath", filePath) :
                new ObjectParameter("FilePath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Import_5DayRate", filePathParameter);
        }
    
        public virtual int SP_Import_Airline_ICH(string filePath)
        {
            var filePathParameter = filePath != null ?
                new ObjectParameter("FilePath", filePath) :
                new ObjectParameter("FilePath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Import_Airline_ICH", filePathParameter);
        }
    
        public virtual int SP_ImportPMPBaseAmount(string filePath)
        {
            var filePathParameter = filePath != null ?
                new ObjectParameter("FilePath", filePath) :
                new ObjectParameter("FilePath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ImportPMPBaseAmount", filePathParameter);
        }
    
        public virtual int SP_ImportPMPFactor(string filePath)
        {
            var filePathParameter = filePath != null ?
                new ObjectParameter("FilePath", filePath) :
                new ObjectParameter("FilePath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ImportPMPFactor", filePathParameter);
        }
    
        public virtual int SP_LiftArchive()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_LiftArchive");
        }
    
        public virtual int SP_PaxExport(string sql, Nullable<int> generate, Nullable<int> showCount, Nullable<int> showData, Nullable<int> showSql)
        {
            var sqlParameter = sql != null ?
                new ObjectParameter("Sql", sql) :
                new ObjectParameter("Sql", typeof(string));
    
            var generateParameter = generate.HasValue ?
                new ObjectParameter("Generate", generate) :
                new ObjectParameter("Generate", typeof(int));
    
            var showCountParameter = showCount.HasValue ?
                new ObjectParameter("ShowCount", showCount) :
                new ObjectParameter("ShowCount", typeof(int));
    
            var showDataParameter = showData.HasValue ?
                new ObjectParameter("ShowData", showData) :
                new ObjectParameter("ShowData", typeof(int));
    
            var showSqlParameter = showSql.HasValue ?
                new ObjectParameter("ShowSql", showSql) :
                new ObjectParameter("ShowSql", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PaxExport", sqlParameter, generateParameter, showCountParameter, showDataParameter, showSqlParameter);
        }
    
        public virtual int SP_RebuildIndex(Nullable<int> maxfragmentation, Nullable<int> rows)
        {
            var maxfragmentationParameter = maxfragmentation.HasValue ?
                new ObjectParameter("maxfragmentation", maxfragmentation) :
                new ObjectParameter("maxfragmentation", typeof(int));
    
            var rowsParameter = rows.HasValue ?
                new ObjectParameter("rows", rows) :
                new ObjectParameter("rows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RebuildIndex", maxfragmentationParameter, rowsParameter);
        }
    
        public virtual int SP_Restore_Biatss_Empty()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Restore_Biatss_Empty");
        }
    
        public virtual int SP_ShowTableDifferenceByColumn(string table, string key, string keyExist, string sql, string format, string columnName, string info, Nullable<int> debug)
        {
            var tableParameter = table != null ?
                new ObjectParameter("Table", table) :
                new ObjectParameter("Table", typeof(string));
    
            var keyParameter = key != null ?
                new ObjectParameter("Key", key) :
                new ObjectParameter("Key", typeof(string));
    
            var keyExistParameter = keyExist != null ?
                new ObjectParameter("KeyExist", keyExist) :
                new ObjectParameter("KeyExist", typeof(string));
    
            var sqlParameter = sql != null ?
                new ObjectParameter("sql", sql) :
                new ObjectParameter("sql", typeof(string));
    
            var formatParameter = format != null ?
                new ObjectParameter("Format", format) :
                new ObjectParameter("Format", typeof(string));
    
            var columnNameParameter = columnName != null ?
                new ObjectParameter("ColumnName", columnName) :
                new ObjectParameter("ColumnName", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            var debugParameter = debug.HasValue ?
                new ObjectParameter("Debug", debug) :
                new ObjectParameter("Debug", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ShowTableDifferenceByColumn", tableParameter, keyParameter, keyExistParameter, sqlParameter, formatParameter, columnNameParameter, infoParameter, debugParameter);
        }
    
        public virtual int SP_TableCount(Nullable<int> showData, Nullable<int> showHeader, Nullable<int> showAll, string schemas)
        {
            var showDataParameter = showData.HasValue ?
                new ObjectParameter("ShowData", showData) :
                new ObjectParameter("ShowData", typeof(int));
    
            var showHeaderParameter = showHeader.HasValue ?
                new ObjectParameter("ShowHeader", showHeader) :
                new ObjectParameter("ShowHeader", typeof(int));
    
            var showAllParameter = showAll.HasValue ?
                new ObjectParameter("ShowAll", showAll) :
                new ObjectParameter("ShowAll", typeof(int));
    
            var schemasParameter = schemas != null ?
                new ObjectParameter("Schemas", schemas) :
                new ObjectParameter("Schemas", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_TableCount", showDataParameter, showHeaderParameter, showAllParameter, schemasParameter);
        }
    
        public virtual int SP_Validate_InsertsAndUpdates(string sourceTable, string targetTable, string key)
        {
            var sourceTableParameter = sourceTable != null ?
                new ObjectParameter("SourceTable", sourceTable) :
                new ObjectParameter("SourceTable", typeof(string));
    
            var targetTableParameter = targetTable != null ?
                new ObjectParameter("TargetTable", targetTable) :
                new ObjectParameter("TargetTable", typeof(string));
    
            var keyParameter = key != null ?
                new ObjectParameter("Key", key) :
                new ObjectParameter("Key", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Validate_InsertsAndUpdates", sourceTableParameter, targetTableParameter, keyParameter);
        }
    
        public virtual ObjectResult<Stat_Result> Stat()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Stat_Result>("Stat");
        }
    
        public virtual int SP_PLB(string agentNumericCode, string financialYear)
        {
            var agentNumericCodeParameter = agentNumericCode != null ?
                new ObjectParameter("AgentNumericCode", agentNumericCode) :
                new ObjectParameter("AgentNumericCode", typeof(string));
    
            var financialYearParameter = financialYear != null ?
                new ObjectParameter("FinancialYear", financialYear) :
                new ObjectParameter("FinancialYear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PLB", agentNumericCodeParameter, financialYearParameter);
        }
    
        public virtual int SP_ConsolidatedData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ConsolidatedData");
        }
    
        public virtual int SP_DocumentSummary(Nullable<int> salesYear_from, Nullable<int> salesYear_to)
        {
            var salesYear_fromParameter = salesYear_from.HasValue ?
                new ObjectParameter("SalesYear_from", salesYear_from) :
                new ObjectParameter("SalesYear_from", typeof(int));
    
            var salesYear_toParameter = salesYear_to.HasValue ?
                new ObjectParameter("SalesYear_to", salesYear_to) :
                new ObjectParameter("SalesYear_to", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DocumentSummary", salesYear_fromParameter, salesYear_toParameter);
        }
    
        public virtual ObjectResult<SP_DocumentSummaryByTransactionCode_Result> SP_DocumentSummaryByTransactionCode(Nullable<int> salesYear_from, Nullable<int> salesYear_to)
        {
            var salesYear_fromParameter = salesYear_from.HasValue ?
                new ObjectParameter("SalesYear_from", salesYear_from) :
                new ObjectParameter("SalesYear_from", typeof(int));
    
            var salesYear_toParameter = salesYear_to.HasValue ?
                new ObjectParameter("SalesYear_to", salesYear_to) :
                new ObjectParameter("SalesYear_to", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DocumentSummaryByTransactionCode_Result>("SP_DocumentSummaryByTransactionCode", salesYear_fromParameter, salesYear_toParameter);
        }
    
        public virtual int SP_ExpectedRevenue_vs_FlownRevenue(string salesYear)
        {
            var salesYearParameter = salesYear != null ?
                new ObjectParameter("SalesYear", salesYear) :
                new ObjectParameter("SalesYear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ExpectedRevenue_vs_FlownRevenue", salesYearParameter);
        }
    
        public virtual int SP_FlownRevenueByRBD(string salesYear)
        {
            var salesYearParameter = salesYear != null ?
                new ObjectParameter("SalesYear", salesYear) :
                new ObjectParameter("SalesYear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_FlownRevenueByRBD", salesYearParameter);
        }
    
        public virtual int SP_Pivot(string itemName)
        {
            var itemNameParameter = itemName != null ?
                new ObjectParameter("ItemName", itemName) :
                new ObjectParameter("ItemName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Pivot", itemNameParameter);
        }
    
        public virtual int SP_SalesAndInward(string salesYear)
        {
            var salesYearParameter = salesYear != null ?
                new ObjectParameter("SalesYear", salesYear) :
                new ObjectParameter("SalesYear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SalesAndInward", salesYearParameter);
        }
    
        public virtual ObjectResult<SP_SalesByCountry_Result> SP_SalesByCountry(string salesYear)
        {
            var salesYearParameter = salesYear != null ?
                new ObjectParameter("SalesYear", salesYear) :
                new ObjectParameter("SalesYear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SalesByCountry_Result>("SP_SalesByCountry", salesYearParameter);
        }
    
        public virtual ObjectResult<SP_SalesByCountryCity_Result> SP_SalesByCountryCity(string salesYear, string originCountry)
        {
            var salesYearParameter = salesYear != null ?
                new ObjectParameter("SalesYear", salesYear) :
                new ObjectParameter("SalesYear", typeof(string));
    
            var originCountryParameter = originCountry != null ?
                new ObjectParameter("OriginCountry", originCountry) :
                new ObjectParameter("OriginCountry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SalesByCountryCity_Result>("SP_SalesByCountryCity", salesYearParameter, originCountryParameter);
        }
    
        public virtual int SP_SalesDomesticInternational(string salesYear)
        {
            var salesYearParameter = salesYear != null ?
                new ObjectParameter("SalesYear", salesYear) :
                new ObjectParameter("SalesYear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SalesDomesticInternational", salesYearParameter);
        }
    
        public virtual ObjectResult<SP_SalesDomesticInternational_Data_Result> SP_SalesDomesticInternational_Data(string salesYear, Nullable<int> dataOption, Nullable<int> columnInversion)
        {
            var salesYearParameter = salesYear != null ?
                new ObjectParameter("SalesYear", salesYear) :
                new ObjectParameter("SalesYear", typeof(string));
    
            var dataOptionParameter = dataOption.HasValue ?
                new ObjectParameter("DataOption", dataOption) :
                new ObjectParameter("DataOption", typeof(int));
    
            var columnInversionParameter = columnInversion.HasValue ?
                new ObjectParameter("ColumnInversion", columnInversion) :
                new ObjectParameter("ColumnInversion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SalesDomesticInternational_Data_Result>("SP_SalesDomesticInternational_Data", salesYearParameter, dataOptionParameter, columnInversionParameter);
        }
    
        public virtual int KK_SP_OutwardBilling_OBValidated(string airlineCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string billingPeriod, Nullable<int> selection, string notbilled)
        {
            var airlineCodeParameter = airlineCode != null ?
                new ObjectParameter("AirlineCode", airlineCode) :
                new ObjectParameter("AirlineCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var billingPeriodParameter = billingPeriod != null ?
                new ObjectParameter("BillingPeriod", billingPeriod) :
                new ObjectParameter("BillingPeriod", typeof(string));
    
            var selectionParameter = selection.HasValue ?
                new ObjectParameter("selection", selection) :
                new ObjectParameter("selection", typeof(int));
    
            var notbilledParameter = notbilled != null ?
                new ObjectParameter("notbilled", notbilled) :
                new ObjectParameter("notbilled", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("KK_SP_OutwardBilling_OBValidated", airlineCodeParameter, fromDateParameter, toDateParameter, billingPeriodParameter, selectionParameter, notbilledParameter);
        }
    
        public virtual ObjectResult<SP_GetCouponCodeShare_Result> SP_GetCouponCodeShare(Nullable<System.Guid> relatedDocumentGuid, Nullable<int> couponNumber, string period, Nullable<decimal> finalShare)
        {
            var relatedDocumentGuidParameter = relatedDocumentGuid.HasValue ?
                new ObjectParameter("RelatedDocumentGuid", relatedDocumentGuid) :
                new ObjectParameter("RelatedDocumentGuid", typeof(System.Guid));
    
            var couponNumberParameter = couponNumber.HasValue ?
                new ObjectParameter("CouponNumber", couponNumber) :
                new ObjectParameter("CouponNumber", typeof(int));
    
            var periodParameter = period != null ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(string));
    
            var finalShareParameter = finalShare.HasValue ?
                new ObjectParameter("FinalShare", finalShare) :
                new ObjectParameter("FinalShare", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetCouponCodeShare_Result>("SP_GetCouponCodeShare", relatedDocumentGuidParameter, couponNumberParameter, periodParameter, finalShareParameter);
        }
    
        public virtual int ClearAllTransactions()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClearAllTransactions");
        }
    
        public virtual ObjectResult<GetTfc_Result> GetTfc(string documentNumber)
        {
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("documentNumber", documentNumber) :
                new ObjectParameter("documentNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTfc_Result>("GetTfc", documentNumberParameter);
        }
    
        public virtual int Header_Inward_Insert(string reference, string invoiceNo, string billingPeriod, Nullable<int> sourceCode, Nullable<int> batchNo, string billingAirline, string billedAirline, string sourceDoc)
        {
            var referenceParameter = reference != null ?
                new ObjectParameter("Reference", reference) :
                new ObjectParameter("Reference", typeof(string));
    
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            var billingPeriodParameter = billingPeriod != null ?
                new ObjectParameter("BillingPeriod", billingPeriod) :
                new ObjectParameter("BillingPeriod", typeof(string));
    
            var sourceCodeParameter = sourceCode.HasValue ?
                new ObjectParameter("SourceCode", sourceCode) :
                new ObjectParameter("SourceCode", typeof(int));
    
            var batchNoParameter = batchNo.HasValue ?
                new ObjectParameter("BatchNo", batchNo) :
                new ObjectParameter("BatchNo", typeof(int));
    
            var billingAirlineParameter = billingAirline != null ?
                new ObjectParameter("BillingAirline", billingAirline) :
                new ObjectParameter("BillingAirline", typeof(string));
    
            var billedAirlineParameter = billedAirline != null ?
                new ObjectParameter("BilledAirline", billedAirline) :
                new ObjectParameter("BilledAirline", typeof(string));
    
            var sourceDocParameter = sourceDoc != null ?
                new ObjectParameter("sourceDoc", sourceDoc) :
                new ObjectParameter("sourceDoc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Header_Inward_Insert", referenceParameter, invoiceNoParameter, billingPeriodParameter, sourceCodeParameter, batchNoParameter, billingAirlineParameter, billedAirlineParameter, sourceDocParameter);
        }
    
        public virtual int Inward_details_insert(string reference, Nullable<int> sequence, string documentNo, Nullable<int> couponNo, Nullable<int> checkDigit, string sectorFROM, string sectorTO, string currency, Nullable<decimal> grosssFare, string aGMindic, Nullable<decimal> iscRate, Nullable<decimal> iscAmount, Nullable<decimal> otherCommissionRate, Nullable<decimal> otherCommAmt, Nullable<decimal> uatpRate, Nullable<decimal> uatpAmount, Nullable<decimal> handlingFee, string currencyAdj, Nullable<decimal> taxAmt, Nullable<decimal> vatAmount, Nullable<decimal> couponValue)
        {
            var referenceParameter = reference != null ?
                new ObjectParameter("Reference", reference) :
                new ObjectParameter("Reference", typeof(string));
    
            var sequenceParameter = sequence.HasValue ?
                new ObjectParameter("Sequence", sequence) :
                new ObjectParameter("Sequence", typeof(int));
    
            var documentNoParameter = documentNo != null ?
                new ObjectParameter("DocumentNo", documentNo) :
                new ObjectParameter("DocumentNo", typeof(string));
    
            var couponNoParameter = couponNo.HasValue ?
                new ObjectParameter("CouponNo", couponNo) :
                new ObjectParameter("CouponNo", typeof(int));
    
            var checkDigitParameter = checkDigit.HasValue ?
                new ObjectParameter("CheckDigit", checkDigit) :
                new ObjectParameter("CheckDigit", typeof(int));
    
            var sectorFROMParameter = sectorFROM != null ?
                new ObjectParameter("SectorFROM", sectorFROM) :
                new ObjectParameter("SectorFROM", typeof(string));
    
            var sectorTOParameter = sectorTO != null ?
                new ObjectParameter("SectorTO", sectorTO) :
                new ObjectParameter("SectorTO", typeof(string));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            var grosssFareParameter = grosssFare.HasValue ?
                new ObjectParameter("GrosssFare", grosssFare) :
                new ObjectParameter("GrosssFare", typeof(decimal));
    
            var aGMindicParameter = aGMindic != null ?
                new ObjectParameter("AGMindic", aGMindic) :
                new ObjectParameter("AGMindic", typeof(string));
    
            var iscRateParameter = iscRate.HasValue ?
                new ObjectParameter("IscRate", iscRate) :
                new ObjectParameter("IscRate", typeof(decimal));
    
            var iscAmountParameter = iscAmount.HasValue ?
                new ObjectParameter("IscAmount", iscAmount) :
                new ObjectParameter("IscAmount", typeof(decimal));
    
            var otherCommissionRateParameter = otherCommissionRate.HasValue ?
                new ObjectParameter("OtherCommissionRate", otherCommissionRate) :
                new ObjectParameter("OtherCommissionRate", typeof(decimal));
    
            var otherCommAmtParameter = otherCommAmt.HasValue ?
                new ObjectParameter("otherCommAmt", otherCommAmt) :
                new ObjectParameter("otherCommAmt", typeof(decimal));
    
            var uatpRateParameter = uatpRate.HasValue ?
                new ObjectParameter("UatpRate", uatpRate) :
                new ObjectParameter("UatpRate", typeof(decimal));
    
            var uatpAmountParameter = uatpAmount.HasValue ?
                new ObjectParameter("UatpAmount", uatpAmount) :
                new ObjectParameter("UatpAmount", typeof(decimal));
    
            var handlingFeeParameter = handlingFee.HasValue ?
                new ObjectParameter("HandlingFee", handlingFee) :
                new ObjectParameter("HandlingFee", typeof(decimal));
    
            var currencyAdjParameter = currencyAdj != null ?
                new ObjectParameter("CurrencyAdj", currencyAdj) :
                new ObjectParameter("CurrencyAdj", typeof(string));
    
            var taxAmtParameter = taxAmt.HasValue ?
                new ObjectParameter("TaxAmt", taxAmt) :
                new ObjectParameter("TaxAmt", typeof(decimal));
    
            var vatAmountParameter = vatAmount.HasValue ?
                new ObjectParameter("VatAmount", vatAmount) :
                new ObjectParameter("VatAmount", typeof(decimal));
    
            var couponValueParameter = couponValue.HasValue ?
                new ObjectParameter("CouponValue", couponValue) :
                new ObjectParameter("CouponValue", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Inward_details_insert", referenceParameter, sequenceParameter, documentNoParameter, couponNoParameter, checkDigitParameter, sectorFROMParameter, sectorTOParameter, currencyParameter, grosssFareParameter, aGMindicParameter, iscRateParameter, iscAmountParameter, otherCommissionRateParameter, otherCommAmtParameter, uatpRateParameter, uatpAmountParameter, handlingFeeParameter, currencyAdjParameter, taxAmtParameter, vatAmountParameter, couponValueParameter);
        }
    
        public virtual int InwardBillingProrationSlip1(string documentNo, Nullable<int> couponNo, string sectorOrigin, string sectorDestination, string sectorCarrier, string sourceType, string currency, Nullable<decimal> prorateFactor, Nullable<decimal> prorateValue, Nullable<decimal> straightRateProrate, Nullable<decimal> specialProrateAgreement, Nullable<decimal> diffentials, Nullable<decimal> surcharge, Nullable<decimal> finalShare, Nullable<decimal> taxesFeesCharges, Nullable<decimal> baseAmount, Nullable<decimal> iscPercent, Nullable<decimal> iscAmount, Nullable<decimal> handlingFeeAmt, Nullable<decimal> otherCommissions, Nullable<decimal> taxAmount, Nullable<decimal> uatpAmount)
        {
            var documentNoParameter = documentNo != null ?
                new ObjectParameter("DocumentNo", documentNo) :
                new ObjectParameter("DocumentNo", typeof(string));
    
            var couponNoParameter = couponNo.HasValue ?
                new ObjectParameter("CouponNo", couponNo) :
                new ObjectParameter("CouponNo", typeof(int));
    
            var sectorOriginParameter = sectorOrigin != null ?
                new ObjectParameter("SectorOrigin", sectorOrigin) :
                new ObjectParameter("SectorOrigin", typeof(string));
    
            var sectorDestinationParameter = sectorDestination != null ?
                new ObjectParameter("SectorDestination", sectorDestination) :
                new ObjectParameter("SectorDestination", typeof(string));
    
            var sectorCarrierParameter = sectorCarrier != null ?
                new ObjectParameter("SectorCarrier", sectorCarrier) :
                new ObjectParameter("SectorCarrier", typeof(string));
    
            var sourceTypeParameter = sourceType != null ?
                new ObjectParameter("SourceType", sourceType) :
                new ObjectParameter("SourceType", typeof(string));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            var prorateFactorParameter = prorateFactor.HasValue ?
                new ObjectParameter("ProrateFactor", prorateFactor) :
                new ObjectParameter("ProrateFactor", typeof(decimal));
    
            var prorateValueParameter = prorateValue.HasValue ?
                new ObjectParameter("ProrateValue", prorateValue) :
                new ObjectParameter("ProrateValue", typeof(decimal));
    
            var straightRateProrateParameter = straightRateProrate.HasValue ?
                new ObjectParameter("StraightRateProrate", straightRateProrate) :
                new ObjectParameter("StraightRateProrate", typeof(decimal));
    
            var specialProrateAgreementParameter = specialProrateAgreement.HasValue ?
                new ObjectParameter("SpecialProrateAgreement", specialProrateAgreement) :
                new ObjectParameter("SpecialProrateAgreement", typeof(decimal));
    
            var diffentialsParameter = diffentials.HasValue ?
                new ObjectParameter("Diffentials", diffentials) :
                new ObjectParameter("Diffentials", typeof(decimal));
    
            var surchargeParameter = surcharge.HasValue ?
                new ObjectParameter("Surcharge", surcharge) :
                new ObjectParameter("Surcharge", typeof(decimal));
    
            var finalShareParameter = finalShare.HasValue ?
                new ObjectParameter("FinalShare", finalShare) :
                new ObjectParameter("FinalShare", typeof(decimal));
    
            var taxesFeesChargesParameter = taxesFeesCharges.HasValue ?
                new ObjectParameter("TaxesFeesCharges", taxesFeesCharges) :
                new ObjectParameter("TaxesFeesCharges", typeof(decimal));
    
            var baseAmountParameter = baseAmount.HasValue ?
                new ObjectParameter("BaseAmount", baseAmount) :
                new ObjectParameter("BaseAmount", typeof(decimal));
    
            var iscPercentParameter = iscPercent.HasValue ?
                new ObjectParameter("IscPercent", iscPercent) :
                new ObjectParameter("IscPercent", typeof(decimal));
    
            var iscAmountParameter = iscAmount.HasValue ?
                new ObjectParameter("IscAmount", iscAmount) :
                new ObjectParameter("IscAmount", typeof(decimal));
    
            var handlingFeeAmtParameter = handlingFeeAmt.HasValue ?
                new ObjectParameter("HandlingFeeAmt", handlingFeeAmt) :
                new ObjectParameter("HandlingFeeAmt", typeof(decimal));
    
            var otherCommissionsParameter = otherCommissions.HasValue ?
                new ObjectParameter("OtherCommissions", otherCommissions) :
                new ObjectParameter("OtherCommissions", typeof(decimal));
    
            var taxAmountParameter = taxAmount.HasValue ?
                new ObjectParameter("TaxAmount", taxAmount) :
                new ObjectParameter("TaxAmount", typeof(decimal));
    
            var uatpAmountParameter = uatpAmount.HasValue ?
                new ObjectParameter("UatpAmount", uatpAmount) :
                new ObjectParameter("UatpAmount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InwardBillingProrationSlip1", documentNoParameter, couponNoParameter, sectorOriginParameter, sectorDestinationParameter, sectorCarrierParameter, sourceTypeParameter, currencyParameter, prorateFactorParameter, prorateValueParameter, straightRateProrateParameter, specialProrateAgreementParameter, diffentialsParameter, surchargeParameter, finalShareParameter, taxesFeesChargesParameter, baseAmountParameter, iscPercentParameter, iscAmountParameter, handlingFeeAmtParameter, otherCommissionsParameter, taxAmountParameter, uatpAmountParameter);
        }
    
        public virtual int OALscriptProrationSlip(string documentNo, Nullable<int> couponNo, string sectorOrigin, string sectorDestination, string sectorCarrier, string sourceType, string currency, Nullable<decimal> prorateFactor, Nullable<decimal> prorateValue, Nullable<decimal> straightRateProrate, Nullable<decimal> specialProrateAgreement, Nullable<decimal> diffentials, Nullable<decimal> surcharge, Nullable<decimal> finalShare, Nullable<decimal> taxesFeesCharges, Nullable<decimal> baseAmount, Nullable<decimal> iscPercent, Nullable<decimal> iscAmount, Nullable<decimal> handlingFeeAmt, Nullable<decimal> otherCommissions, Nullable<decimal> taxAmount, Nullable<decimal> uatpAmount)
        {
            var documentNoParameter = documentNo != null ?
                new ObjectParameter("DocumentNo", documentNo) :
                new ObjectParameter("DocumentNo", typeof(string));
    
            var couponNoParameter = couponNo.HasValue ?
                new ObjectParameter("CouponNo", couponNo) :
                new ObjectParameter("CouponNo", typeof(int));
    
            var sectorOriginParameter = sectorOrigin != null ?
                new ObjectParameter("SectorOrigin", sectorOrigin) :
                new ObjectParameter("SectorOrigin", typeof(string));
    
            var sectorDestinationParameter = sectorDestination != null ?
                new ObjectParameter("SectorDestination", sectorDestination) :
                new ObjectParameter("SectorDestination", typeof(string));
    
            var sectorCarrierParameter = sectorCarrier != null ?
                new ObjectParameter("SectorCarrier", sectorCarrier) :
                new ObjectParameter("SectorCarrier", typeof(string));
    
            var sourceTypeParameter = sourceType != null ?
                new ObjectParameter("SourceType", sourceType) :
                new ObjectParameter("SourceType", typeof(string));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            var prorateFactorParameter = prorateFactor.HasValue ?
                new ObjectParameter("ProrateFactor", prorateFactor) :
                new ObjectParameter("ProrateFactor", typeof(decimal));
    
            var prorateValueParameter = prorateValue.HasValue ?
                new ObjectParameter("ProrateValue", prorateValue) :
                new ObjectParameter("ProrateValue", typeof(decimal));
    
            var straightRateProrateParameter = straightRateProrate.HasValue ?
                new ObjectParameter("StraightRateProrate", straightRateProrate) :
                new ObjectParameter("StraightRateProrate", typeof(decimal));
    
            var specialProrateAgreementParameter = specialProrateAgreement.HasValue ?
                new ObjectParameter("SpecialProrateAgreement", specialProrateAgreement) :
                new ObjectParameter("SpecialProrateAgreement", typeof(decimal));
    
            var diffentialsParameter = diffentials.HasValue ?
                new ObjectParameter("Diffentials", diffentials) :
                new ObjectParameter("Diffentials", typeof(decimal));
    
            var surchargeParameter = surcharge.HasValue ?
                new ObjectParameter("Surcharge", surcharge) :
                new ObjectParameter("Surcharge", typeof(decimal));
    
            var finalShareParameter = finalShare.HasValue ?
                new ObjectParameter("FinalShare", finalShare) :
                new ObjectParameter("FinalShare", typeof(decimal));
    
            var taxesFeesChargesParameter = taxesFeesCharges.HasValue ?
                new ObjectParameter("TaxesFeesCharges", taxesFeesCharges) :
                new ObjectParameter("TaxesFeesCharges", typeof(decimal));
    
            var baseAmountParameter = baseAmount.HasValue ?
                new ObjectParameter("BaseAmount", baseAmount) :
                new ObjectParameter("BaseAmount", typeof(decimal));
    
            var iscPercentParameter = iscPercent.HasValue ?
                new ObjectParameter("IscPercent", iscPercent) :
                new ObjectParameter("IscPercent", typeof(decimal));
    
            var iscAmountParameter = iscAmount.HasValue ?
                new ObjectParameter("IscAmount", iscAmount) :
                new ObjectParameter("IscAmount", typeof(decimal));
    
            var handlingFeeAmtParameter = handlingFeeAmt.HasValue ?
                new ObjectParameter("HandlingFeeAmt", handlingFeeAmt) :
                new ObjectParameter("HandlingFeeAmt", typeof(decimal));
    
            var otherCommissionsParameter = otherCommissions.HasValue ?
                new ObjectParameter("OtherCommissions", otherCommissions) :
                new ObjectParameter("OtherCommissions", typeof(decimal));
    
            var taxAmountParameter = taxAmount.HasValue ?
                new ObjectParameter("TaxAmount", taxAmount) :
                new ObjectParameter("TaxAmount", typeof(decimal));
    
            var uatpAmountParameter = uatpAmount.HasValue ?
                new ObjectParameter("UatpAmount", uatpAmount) :
                new ObjectParameter("UatpAmount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OALscriptProrationSlip", documentNoParameter, couponNoParameter, sectorOriginParameter, sectorDestinationParameter, sectorCarrierParameter, sourceTypeParameter, currencyParameter, prorateFactorParameter, prorateValueParameter, straightRateProrateParameter, specialProrateAgreementParameter, diffentialsParameter, surchargeParameter, finalShareParameter, taxesFeesChargesParameter, baseAmountParameter, iscPercentParameter, iscAmountParameter, handlingFeeAmtParameter, otherCommissionsParameter, taxAmountParameter, uatpAmountParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int InsertProratedCouponsForSectorFare()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertProratedCouponsForSectorFare");
        }
    
        public virtual int InsertProratedCouponsForSPA()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertProratedCouponsForSPA");
        }
    
        public virtual int SP_AdjustCouponNumberInLiftHeader()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AdjustCouponNumberInLiftHeader");
        }
    
        public virtual int SP_AfterImport(Nullable<System.DateTime> batchID)
        {
            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AfterImport", batchIDParameter);
        }
    
        public virtual int SP_AfterLift_Correction01(Nullable<System.DateTime> param, ObjectParameter recordsUpdated)
        {
            var paramParameter = param.HasValue ?
                new ObjectParameter("Param", param) :
                new ObjectParameter("Param", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AfterLift_Correction01", paramParameter, recordsUpdated);
        }
    
        public virtual int SP_AfterLiftImport(Nullable<System.DateTime> batchID)
        {
            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AfterLiftImport", batchIDParameter);
        }
    
        public virtual int SP_AfterLiftImport_NOTES(Nullable<System.DateTime> batchID)
        {
            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AfterLiftImport_NOTES", batchIDParameter);
        }
    
        public virtual int SP_AfterPaxImport(Nullable<System.DateTime> batchID)
        {
            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AfterPaxImport", batchIDParameter);
        }
    
        public virtual int SP_AfterPaxImport_NOTES(Nullable<System.DateTime> batchID)
        {
            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AfterPaxImport_NOTES", batchIDParameter);
        }
    
        public virtual int SP_ArchiveTicket()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ArchiveTicket");
        }
    
        public virtual int SP_BatchProration_Completed(string batchType, Nullable<System.DateTime> batchID)
        {
            var batchTypeParameter = batchType != null ?
                new ObjectParameter("BatchType", batchType) :
                new ObjectParameter("BatchType", typeof(string));
    
            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_BatchProration_Completed", batchTypeParameter, batchIDParameter);
        }
    
        public virtual int SP_BatchProration_Started(string batchType, Nullable<System.DateTime> batchID)
        {
            var batchTypeParameter = batchType != null ?
                new ObjectParameter("BatchType", batchType) :
                new ObjectParameter("BatchType", typeof(string));
    
            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_BatchProration_Started", batchTypeParameter, batchIDParameter);
        }
    
        public virtual int SP_BeforeImport(Nullable<System.DateTime> batchID)
        {
            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_BeforeImport", batchIDParameter);
        }
    
        public virtual int SP_Check_HOT_BKS24(Nullable<System.DateTime> processingDate, Nullable<int> action)
        {
            var processingDateParameter = processingDate.HasValue ?
                new ObjectParameter("ProcessingDate", processingDate) :
                new ObjectParameter("ProcessingDate", typeof(System.DateTime));
    
            var actionParameter = action.HasValue ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Check_HOT_BKS24", processingDateParameter, actionParameter);
        }
    
        public virtual int SP_Check_Lift_REMOVE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Check_Lift_REMOVE");
        }
    
        public virtual int SP_Check_LiftBuildBatchCopy(string sourcePath, string targetPath)
        {
            var sourcePathParameter = sourcePath != null ?
                new ObjectParameter("SourcePath", sourcePath) :
                new ObjectParameter("SourcePath", typeof(string));
    
            var targetPathParameter = targetPath != null ?
                new ObjectParameter("TargetPath", targetPath) :
                new ObjectParameter("TargetPath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Check_LiftBuildBatchCopy", sourcePathParameter, targetPathParameter);
        }
    
        public virtual int SP_Check_LiftBuildFileList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Check_LiftBuildFileList");
        }
    
        public virtual ObjectResult<SP_Check_LiftConjunction_Result> SP_Check_LiftConjunction(Nullable<int> maintenanceFlag)
        {
            var maintenanceFlagParameter = maintenanceFlag.HasValue ?
                new ObjectParameter("MaintenanceFlag", maintenanceFlag) :
                new ObjectParameter("MaintenanceFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Check_LiftConjunction_Result>("SP_Check_LiftConjunction", maintenanceFlagParameter);
        }
    
        public virtual ObjectResult<SP_Check_LiftCouponDoublon_Result> SP_Check_LiftCouponDoublon(Nullable<int> maintenanceFlag)
        {
            var maintenanceFlagParameter = maintenanceFlag.HasValue ?
                new ObjectParameter("MaintenanceFlag", maintenanceFlag) :
                new ObjectParameter("MaintenanceFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Check_LiftCouponDoublon_Result>("SP_Check_LiftCouponDoublon", maintenanceFlagParameter);
        }
    
        public virtual ObjectResult<SP_Check_LiftCouponNumber_Result> SP_Check_LiftCouponNumber(Nullable<int> maintenanceFlag)
        {
            var maintenanceFlagParameter = maintenanceFlag.HasValue ?
                new ObjectParameter("MaintenanceFlag", maintenanceFlag) :
                new ObjectParameter("MaintenanceFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Check_LiftCouponNumber_Result>("SP_Check_LiftCouponNumber", maintenanceFlagParameter);
        }
    
        public virtual ObjectResult<SP_Check_LiftCouponNumber_TEST_Result> SP_Check_LiftCouponNumber_TEST(Nullable<int> maintenanceFlag)
        {
            var maintenanceFlagParameter = maintenanceFlag.HasValue ?
                new ObjectParameter("MaintenanceFlag", maintenanceFlag) :
                new ObjectParameter("MaintenanceFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Check_LiftCouponNumber_TEST_Result>("SP_Check_LiftCouponNumber_TEST", maintenanceFlagParameter);
        }
    
        public virtual int SP_Check_LiftImport(Nullable<int> maintenanceFlag)
        {
            var maintenanceFlagParameter = maintenanceFlag.HasValue ?
                new ObjectParameter("MaintenanceFlag", maintenanceFlag) :
                new ObjectParameter("MaintenanceFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Check_LiftImport", maintenanceFlagParameter);
        }
    
        public virtual ObjectResult<SP_Check_LiftMissingCouponsInPax_Result> SP_Check_LiftMissingCouponsInPax(Nullable<int> maintenanceFlag)
        {
            var maintenanceFlagParameter = maintenanceFlag.HasValue ?
                new ObjectParameter("MaintenanceFlag", maintenanceFlag) :
                new ObjectParameter("MaintenanceFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Check_LiftMissingCouponsInPax_Result>("SP_Check_LiftMissingCouponsInPax", maintenanceFlagParameter);
        }
    
        public virtual ObjectResult<SP_Check_LiftOrphan_Result> SP_Check_LiftOrphan(Nullable<int> maintenanceFlag)
        {
            var maintenanceFlagParameter = maintenanceFlag.HasValue ?
                new ObjectParameter("MaintenanceFlag", maintenanceFlag) :
                new ObjectParameter("MaintenanceFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Check_LiftOrphan_Result>("SP_Check_LiftOrphan", maintenanceFlagParameter);
        }
    
        public virtual int SP_Check_LiftReccount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Check_LiftReccount");
        }
    
        public virtual int SP_CheckDocumentDuplicateInPax(ObjectParameter duplicates)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CheckDocumentDuplicateInPax", duplicates);
        }
    
        public virtual int SP_CheckingFileLoadingMissingLines(Nullable<System.DateTime> batchID)
        {
            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CheckingFileLoadingMissingLines", batchIDParameter);
        }
    
        public virtual int SP_CheckLift_TOOLBOX()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CheckLift_TOOLBOX");
        }
    
        public virtual ObjectResult<SP_CheckMissingTax_BSP_Result> SP_CheckMissingTax_BSP(Nullable<int> param)
        {
            var paramParameter = param.HasValue ?
                new ObjectParameter("Param", param) :
                new ObjectParameter("Param", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CheckMissingTax_BSP_Result>("SP_CheckMissingTax_BSP", paramParameter);
        }
    
        public virtual int SP_Correction_01(ObjectParameter recordsUpdated)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Correction_01", recordsUpdated);
        }
    
        public virtual int SP_DeleteDuplicateInLift(ObjectParameter recordsUpdated)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteDuplicateInLift", recordsUpdated);
        }
    
        public virtual int SP_FileImport_Records_Mismatch()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_FileImport_Records_Mismatch");
        }
    
        public virtual int SP_GlobalSystemCheck(string calledFrom)
        {
            var calledFromParameter = calledFrom != null ?
                new ObjectParameter("CalledFrom", calledFrom) :
                new ObjectParameter("CalledFrom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GlobalSystemCheck", calledFromParameter);
        }
    
        public virtual int SP_InConnectionWithDocumentNumber()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_InConnectionWithDocumentNumber");
        }
    
        public virtual int SP_Lift_TicketInSetCorrection(ObjectParameter recordsUpdated)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Lift_TicketInSetCorrection", recordsUpdated);
        }
    
        public virtual int SP_NightMaintenance()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_NightMaintenance");
        }
    
        public virtual int SP_NightMaintenance_AddOn(Nullable<int> p_Monitor, Nullable<int> show, Nullable<int> action)
        {
            var p_MonitorParameter = p_Monitor.HasValue ?
                new ObjectParameter("P_Monitor", p_Monitor) :
                new ObjectParameter("P_Monitor", typeof(int));
    
            var showParameter = show.HasValue ?
                new ObjectParameter("Show", show) :
                new ObjectParameter("Show", typeof(int));
    
            var actionParameter = action.HasValue ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_NightMaintenance_AddOn", p_MonitorParameter, showParameter, actionParameter);
        }
    
        public virtual int SP_OriginalIssueInformation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OriginalIssueInformation");
        }
    
        public virtual int SP_ProrationAfter(Nullable<System.DateTime> batchID)
        {
            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ProrationAfter", batchIDParameter);
        }
    
        public virtual int SP_ProrationBefore(Nullable<System.DateTime> batchID)
        {
            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ProrationBefore", batchIDParameter);
        }
    
        public virtual int SP_ProrationCurrent(Nullable<System.DateTime> batchID)
        {
            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ProrationCurrent", batchIDParameter);
        }
    
        public virtual int SP_RemoveDuplicateInLift(ObjectParameter recordsUpdated)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RemoveDuplicateInLift", recordsUpdated);
        }
    
        public virtual int SP_RemoveDuplicateInPax()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RemoveDuplicateInPax");
        }
    
        public virtual int SP_RemoveOwnTicketHavingFbsAfterLiftImport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RemoveOwnTicketHavingFbsAfterLiftImport");
        }
    
        public virtual int SP_SalesDocumentPayment_AmountCorrection()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SalesDocumentPayment_AmountCorrection");
        }
    
        public virtual int SP_SendMail(string recipients, string subject, string body)
        {
            var recipientsParameter = recipients != null ?
                new ObjectParameter("recipients", recipients) :
                new ObjectParameter("recipients", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("subject", subject) :
                new ObjectParameter("subject", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SendMail", recipientsParameter, subjectParameter, bodyParameter);
        }
    
        public virtual int SP_SendMailSysLog(string subject, string body)
        {
            var subjectParameter = subject != null ?
                new ObjectParameter("subject", subject) :
                new ObjectParameter("subject", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SendMailSysLog", subjectParameter, bodyParameter);
        }
    
        public virtual int SP_SystemCheck(string operation, string calledFrom)
        {
            var operationParameter = operation != null ?
                new ObjectParameter("Operation", operation) :
                new ObjectParameter("Operation", typeof(string));
    
            var calledFromParameter = calledFrom != null ?
                new ObjectParameter("CalledFrom", calledFrom) :
                new ObjectParameter("CalledFrom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SystemCheck", operationParameter, calledFromParameter);
        }
    
        public virtual int SP_Update_Endo_Invol()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_Endo_Invol");
        }
    
        public virtual int SP_Update_SalesDocumentCoupon(ObjectParameter recordsUpdated)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_SalesDocumentCoupon", recordsUpdated);
        }
    
        public virtual int SP_Update_SalesDocumentHeader_At_Once(ObjectParameter recordsUpdated)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_SalesDocumentHeader_At_Once", recordsUpdated);
        }
    
        public virtual int SP_Update_SalesDocumentHeader_batch(ObjectParameter recordsUpdated)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_SalesDocumentHeader_batch", recordsUpdated);
        }
    
        public virtual int SP_UpdateFareBasis(ObjectParameter recordsUpdated)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateFareBasis", recordsUpdated);
        }
    
        public virtual int SP_UpdateOrin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateOrin");
        }
    
        public virtual int SP_UpdatePaxCouponFromLiftCoupon(Nullable<int> maintenanceFlag, string documentNumber, Nullable<int> flag)
        {
            var maintenanceFlagParameter = maintenanceFlag.HasValue ?
                new ObjectParameter("MaintenanceFlag", maintenanceFlag) :
                new ObjectParameter("MaintenanceFlag", typeof(int));
    
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("DocumentNumber", documentNumber) :
                new ObjectParameter("DocumentNumber", typeof(string));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdatePaxCouponFromLiftCoupon", maintenanceFlagParameter, documentNumberParameter, flagParameter);
        }
    
        public virtual int SP_UpdateUsageDataFromLift(ObjectParameter recordsUpdated)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateUsageDataFromLift", recordsUpdated);
        }
    
        public virtual int SP_Use_Temp(Nullable<int> option)
        {
            var optionParameter = option.HasValue ?
                new ObjectParameter("option", option) :
                new ObjectParameter("option", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Use_Temp", optionParameter);
        }
    
        public virtual int SPA_Use_Temp(Nullable<int> option)
        {
            var optionParameter = option.HasValue ?
                new ObjectParameter("option", option) :
                new ObjectParameter("option", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPA_Use_Temp", optionParameter);
        }
    
        public virtual int SP_Update_Fare_In_Pax(ObjectParameter recordsUpdated)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_Fare_In_Pax", recordsUpdated);
        }
    
        public virtual int SP_Bar64()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Bar64");
        }
    
        public virtual int SP_BillingAnalysis_Check()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_BillingAnalysis_Check");
        }
    
        public virtual int SP_BillingAnalysis_SalesDocumentPayment_Check()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_BillingAnalysis_SalesDocumentPayment_Check");
        }
    
        public virtual int SP_SalesDocumentOtherAmount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SalesDocumentOtherAmount");
        }
    
        public virtual int SP_SalesDocumentOtherAmount_Bks30()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SalesDocumentOtherAmount_Bks30");
        }
    
        public virtual int SP_SalesDocumentOtherAmount_Bks39()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SalesDocumentOtherAmount_Bks39");
        }
    
        public virtual int SP_SalesDocumentOtherAmount_Bks42()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SalesDocumentOtherAmount_Bks42");
        }
    
        public virtual int SP_UpdatePaxHavingFbsFlag(Nullable<int> updateAll, ObjectParameter recordsUpdated)
        {
            var updateAllParameter = updateAll.HasValue ?
                new ObjectParameter("UpdateAll", updateAll) :
                new ObjectParameter("UpdateAll", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdatePaxHavingFbsFlag", updateAllParameter, recordsUpdated);
        }
    
        public virtual ObjectResult<GetLiftCoupons_Result> GetLiftCoupons(string ticketNumber)
        {
            var ticketNumberParameter = ticketNumber != null ?
                new ObjectParameter("ticketNumber", ticketNumber) :
                new ObjectParameter("ticketNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLiftCoupons_Result>("GetLiftCoupons", ticketNumberParameter);
        }
    
        public virtual ObjectResult<GetliftGrid_Result> GetliftGrid()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetliftGrid_Result>("GetliftGrid");
        }
    
        public virtual ObjectResult<GetLiftHeader_Result> GetLiftHeader(string ticketNumber)
        {
            var ticketNumberParameter = ticketNumber != null ?
                new ObjectParameter("ticketNumber", ticketNumber) :
                new ObjectParameter("ticketNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLiftHeader_Result>("GetLiftHeader", ticketNumberParameter);
        }
    
        public virtual int LiftHeaderQuery(Nullable<System.DateTime> processingDateFrom, Nullable<System.DateTime> processingDateTo, Nullable<System.DateTime> flightDateFrom, Nullable<System.DateTime> flightDateTo, string agentNumericCode, string processingType, string usageType, string usageOrigin, string usageDestination)
        {
            var processingDateFromParameter = processingDateFrom.HasValue ?
                new ObjectParameter("ProcessingDateFrom", processingDateFrom) :
                new ObjectParameter("ProcessingDateFrom", typeof(System.DateTime));
    
            var processingDateToParameter = processingDateTo.HasValue ?
                new ObjectParameter("ProcessingDateTo", processingDateTo) :
                new ObjectParameter("ProcessingDateTo", typeof(System.DateTime));
    
            var flightDateFromParameter = flightDateFrom.HasValue ?
                new ObjectParameter("FlightDateFrom", flightDateFrom) :
                new ObjectParameter("FlightDateFrom", typeof(System.DateTime));
    
            var flightDateToParameter = flightDateTo.HasValue ?
                new ObjectParameter("FlightDateTo", flightDateTo) :
                new ObjectParameter("FlightDateTo", typeof(System.DateTime));
    
            var agentNumericCodeParameter = agentNumericCode != null ?
                new ObjectParameter("AgentNumericCode", agentNumericCode) :
                new ObjectParameter("AgentNumericCode", typeof(string));
    
            var processingTypeParameter = processingType != null ?
                new ObjectParameter("ProcessingType", processingType) :
                new ObjectParameter("ProcessingType", typeof(string));
    
            var usageTypeParameter = usageType != null ?
                new ObjectParameter("UsageType", usageType) :
                new ObjectParameter("UsageType", typeof(string));
    
            var usageOriginParameter = usageOrigin != null ?
                new ObjectParameter("UsageOrigin", usageOrigin) :
                new ObjectParameter("UsageOrigin", typeof(string));
    
            var usageDestinationParameter = usageDestination != null ?
                new ObjectParameter("UsageDestination", usageDestination) :
                new ObjectParameter("UsageDestination", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LiftHeaderQuery", processingDateFromParameter, processingDateToParameter, flightDateFromParameter, flightDateToParameter, agentNumericCodeParameter, processingTypeParameter, usageTypeParameter, usageOriginParameter, usageDestinationParameter);
        }
    
        public virtual int SP_ImportFileLift23FromText(string userID, string filePath, Nullable<int> option)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var filePathParameter = filePath != null ?
                new ObjectParameter("FilePath", filePath) :
                new ObjectParameter("FilePath", typeof(string));
    
            var optionParameter = option.HasValue ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ImportFileLift23FromText", userIDParameter, filePathParameter, optionParameter);
        }
    
        public virtual int SP_Insert_Lift_From_SAC()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Insert_Lift_From_SAC");
        }
    
        public virtual int SP_Insert_Pax_From_Liftheader(ObjectParameter recordsUpdated)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Insert_Pax_From_Liftheader", recordsUpdated);
        }
    
        public virtual int SP_Insert_SalesDocumentCoupon_From_Liftheader()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Insert_SalesDocumentCoupon_From_Liftheader");
        }
    
        public virtual ObjectResult<string> SP_Insert_SalesDocumentHeader_From_Liftheader()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_Insert_SalesDocumentHeader_From_Liftheader");
        }
    
        public virtual int SP_Insert_SalesRelatedDocumentInformation_From_Liftheader()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Insert_SalesRelatedDocumentInformation_From_Liftheader");
        }
    
        public virtual ObjectResult<SP_Lifted_Coupon_Validation_Result> SP_Lifted_Coupon_Validation(string usageFlightNumber, Nullable<System.DateTime> usageDate_from, Nullable<System.DateTime> usageDate_to)
        {
            var usageFlightNumberParameter = usageFlightNumber != null ?
                new ObjectParameter("UsageFlightNumber", usageFlightNumber) :
                new ObjectParameter("UsageFlightNumber", typeof(string));
    
            var usageDate_fromParameter = usageDate_from.HasValue ?
                new ObjectParameter("UsageDate_from", usageDate_from) :
                new ObjectParameter("UsageDate_from", typeof(System.DateTime));
    
            var usageDate_toParameter = usageDate_to.HasValue ?
                new ObjectParameter("UsageDate_to", usageDate_to) :
                new ObjectParameter("UsageDate_to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Lifted_Coupon_Validation_Result>("SP_Lifted_Coupon_Validation", usageFlightNumberParameter, usageDate_fromParameter, usageDate_toParameter);
        }
    
        public virtual ObjectResult<SP_Lifted_Coupon_Validation_DNA_Sum_Result> SP_Lifted_Coupon_Validation_DNA_Sum(string usageFlightNumber, Nullable<System.DateTime> usageDate_from, Nullable<System.DateTime> usageDate_to)
        {
            var usageFlightNumberParameter = usageFlightNumber != null ?
                new ObjectParameter("UsageFlightNumber", usageFlightNumber) :
                new ObjectParameter("UsageFlightNumber", typeof(string));
    
            var usageDate_fromParameter = usageDate_from.HasValue ?
                new ObjectParameter("UsageDate_from", usageDate_from) :
                new ObjectParameter("UsageDate_from", typeof(System.DateTime));
    
            var usageDate_toParameter = usageDate_to.HasValue ?
                new ObjectParameter("UsageDate_to", usageDate_to) :
                new ObjectParameter("UsageDate_to", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Lifted_Coupon_Validation_DNA_Sum_Result>("SP_Lifted_Coupon_Validation_DNA_Sum", usageFlightNumberParameter, usageDate_fromParameter, usageDate_toParameter);
        }
    
        public virtual int SP_PassengerLift(Nullable<System.DateTime> flightDateFrom, Nullable<System.DateTime> flightDateTo, string agentNumericCode, string usageType, string oWN)
        {
            var flightDateFromParameter = flightDateFrom.HasValue ?
                new ObjectParameter("FlightDateFrom", flightDateFrom) :
                new ObjectParameter("FlightDateFrom", typeof(System.DateTime));
    
            var flightDateToParameter = flightDateTo.HasValue ?
                new ObjectParameter("FlightDateTo", flightDateTo) :
                new ObjectParameter("FlightDateTo", typeof(System.DateTime));
    
            var agentNumericCodeParameter = agentNumericCode != null ?
                new ObjectParameter("AgentNumericCode", agentNumericCode) :
                new ObjectParameter("AgentNumericCode", typeof(string));
    
            var usageTypeParameter = usageType != null ?
                new ObjectParameter("UsageType", usageType) :
                new ObjectParameter("UsageType", typeof(string));
    
            var oWNParameter = oWN != null ?
                new ObjectParameter("OWN", oWN) :
                new ObjectParameter("OWN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PassengerLift", flightDateFromParameter, flightDateToParameter, agentNumericCodeParameter, usageTypeParameter, oWNParameter);
        }
    
        public virtual int SP_PassengerLift_KK(Nullable<System.DateTime> flightDateFrom, Nullable<System.DateTime> flightDateTo, string agentNumericCode, string usageType, string oWN)
        {
            var flightDateFromParameter = flightDateFrom.HasValue ?
                new ObjectParameter("FlightDateFrom", flightDateFrom) :
                new ObjectParameter("FlightDateFrom", typeof(System.DateTime));
    
            var flightDateToParameter = flightDateTo.HasValue ?
                new ObjectParameter("FlightDateTo", flightDateTo) :
                new ObjectParameter("FlightDateTo", typeof(System.DateTime));
    
            var agentNumericCodeParameter = agentNumericCode != null ?
                new ObjectParameter("AgentNumericCode", agentNumericCode) :
                new ObjectParameter("AgentNumericCode", typeof(string));
    
            var usageTypeParameter = usageType != null ?
                new ObjectParameter("UsageType", usageType) :
                new ObjectParameter("UsageType", typeof(string));
    
            var oWNParameter = oWN != null ?
                new ObjectParameter("OWN", oWN) :
                new ObjectParameter("OWN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PassengerLift_KK", flightDateFromParameter, flightDateToParameter, agentNumericCodeParameter, usageTypeParameter, oWNParameter);
        }
    
        public virtual int SP_PassengerLiftDetails_KK(Nullable<System.DateTime> flightDateFrom, Nullable<System.DateTime> flightDateTo, string usageType, string oWN, string dS, string refunded, string transferredToSAP)
        {
            var flightDateFromParameter = flightDateFrom.HasValue ?
                new ObjectParameter("FlightDateFrom", flightDateFrom) :
                new ObjectParameter("FlightDateFrom", typeof(System.DateTime));
    
            var flightDateToParameter = flightDateTo.HasValue ?
                new ObjectParameter("FlightDateTo", flightDateTo) :
                new ObjectParameter("FlightDateTo", typeof(System.DateTime));
    
            var usageTypeParameter = usageType != null ?
                new ObjectParameter("UsageType", usageType) :
                new ObjectParameter("UsageType", typeof(string));
    
            var oWNParameter = oWN != null ?
                new ObjectParameter("OWN", oWN) :
                new ObjectParameter("OWN", typeof(string));
    
            var dSParameter = dS != null ?
                new ObjectParameter("DS", dS) :
                new ObjectParameter("DS", typeof(string));
    
            var refundedParameter = refunded != null ?
                new ObjectParameter("Refunded", refunded) :
                new ObjectParameter("Refunded", typeof(string));
    
            var transferredToSAPParameter = transferredToSAP != null ?
                new ObjectParameter("TransferredToSAP", transferredToSAP) :
                new ObjectParameter("TransferredToSAP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PassengerLiftDetails_KK", flightDateFromParameter, flightDateToParameter, usageTypeParameter, oWNParameter, dSParameter, refundedParameter, transferredToSAPParameter);
        }
    
        public virtual int SP_UpdateCouponFromLift()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateCouponFromLift");
        }
    
        public virtual ObjectResult<SP_FileUploadStatus_Result> SP_FileUploadStatus(string processingFileType, string processingStatus, string processingFileName, Nullable<System.DateTime> batchID_From, Nullable<System.DateTime> batchID_To, string reportType)
        {
            var processingFileTypeParameter = processingFileType != null ?
                new ObjectParameter("ProcessingFileType", processingFileType) :
                new ObjectParameter("ProcessingFileType", typeof(string));
    
            var processingStatusParameter = processingStatus != null ?
                new ObjectParameter("ProcessingStatus", processingStatus) :
                new ObjectParameter("ProcessingStatus", typeof(string));
    
            var processingFileNameParameter = processingFileName != null ?
                new ObjectParameter("ProcessingFileName", processingFileName) :
                new ObjectParameter("ProcessingFileName", typeof(string));
    
            var batchID_FromParameter = batchID_From.HasValue ?
                new ObjectParameter("BatchID_From", batchID_From) :
                new ObjectParameter("BatchID_From", typeof(System.DateTime));
    
            var batchID_ToParameter = batchID_To.HasValue ?
                new ObjectParameter("BatchID_To", batchID_To) :
                new ObjectParameter("BatchID_To", typeof(System.DateTime));
    
            var reportTypeParameter = reportType != null ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FileUploadStatus_Result>("SP_FileUploadStatus", processingFileTypeParameter, processingStatusParameter, processingFileNameParameter, batchID_FromParameter, batchID_ToParameter, reportTypeParameter);
        }
    
        public virtual int SP_FileUploadSummary_By_CalendarDate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_FileUploadSummary_By_CalendarDate");
        }
    
        public virtual int SP_FileUploadSummary_By_TransactionType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_FileUploadSummary_By_TransactionType");
        }
    
        public virtual int SP_LoadingException_LineID(Nullable<System.Guid> uploadGuid, string lineData)
        {
            var uploadGuidParameter = uploadGuid.HasValue ?
                new ObjectParameter("UploadGuid", uploadGuid) :
                new ObjectParameter("UploadGuid", typeof(System.Guid));
    
            var lineDataParameter = lineData != null ?
                new ObjectParameter("LineData", lineData) :
                new ObjectParameter("LineData", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_LoadingException_LineID", uploadGuidParameter, lineDataParameter);
        }
    
        public virtual ObjectResult<SP_NotLoaded_MD_Result> SP_NotLoaded_MD(Nullable<System.DateTime> date_From, Nullable<System.DateTime> date_To)
        {
            var date_FromParameter = date_From.HasValue ?
                new ObjectParameter("Date_From", date_From) :
                new ObjectParameter("Date_From", typeof(System.DateTime));
    
            var date_ToParameter = date_To.HasValue ?
                new ObjectParameter("Date_To", date_To) :
                new ObjectParameter("Date_To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_NotLoaded_MD_Result>("SP_NotLoaded_MD", date_FromParameter, date_ToParameter);
        }
    
        public virtual ObjectResult<SPuploadStatus_Result> SPuploadStatus(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string fileName, string fileType, string status)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            var fileNameParameter = fileName != null ?
                new ObjectParameter("fileName", fileName) :
                new ObjectParameter("fileName", typeof(string));
    
            var fileTypeParameter = fileType != null ?
                new ObjectParameter("fileType", fileType) :
                new ObjectParameter("fileType", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPuploadStatus_Result>("SPuploadStatus", dateFromParameter, dateToParameter, fileNameParameter, fileTypeParameter, statusParameter);
        }
    
        public virtual ObjectResult<UspFileUpload_Result> UspFileUpload(Nullable<System.DateTime> processingDate)
        {
            var processingDateParameter = processingDate.HasValue ?
                new ObjectParameter("ProcessingDate", processingDate) :
                new ObjectParameter("ProcessingDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspFileUpload_Result>("UspFileUpload", processingDateParameter);
        }
    
        public virtual int SP_Loaded_vs_Pax()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Loaded_vs_Pax");
        }
    
        public virtual int SP_BulkImportFile(string p_FilePath, string p_FileName, string p_UserID, Nullable<int> op)
        {
            var p_FilePathParameter = p_FilePath != null ?
                new ObjectParameter("P_FilePath", p_FilePath) :
                new ObjectParameter("P_FilePath", typeof(string));
    
            var p_FileNameParameter = p_FileName != null ?
                new ObjectParameter("P_FileName", p_FileName) :
                new ObjectParameter("P_FileName", typeof(string));
    
            var p_UserIDParameter = p_UserID != null ?
                new ObjectParameter("P_UserID", p_UserID) :
                new ObjectParameter("P_UserID", typeof(string));
    
            var opParameter = op.HasValue ?
                new ObjectParameter("Op", op) :
                new ObjectParameter("Op", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_BulkImportFile", p_FilePathParameter, p_FileNameParameter, p_UserIDParameter, opParameter);
        }
    
        public virtual int SP_BulkImportFile_Launcher()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_BulkImportFile_Launcher");
        }
    
        public virtual int SP_BulkImportFile_Test(string p_FilePath, string p_FileName, string p_UserID, Nullable<int> op)
        {
            var p_FilePathParameter = p_FilePath != null ?
                new ObjectParameter("P_FilePath", p_FilePath) :
                new ObjectParameter("P_FilePath", typeof(string));
    
            var p_FileNameParameter = p_FileName != null ?
                new ObjectParameter("P_FileName", p_FileName) :
                new ObjectParameter("P_FileName", typeof(string));
    
            var p_UserIDParameter = p_UserID != null ?
                new ObjectParameter("P_UserID", p_UserID) :
                new ObjectParameter("P_UserID", typeof(string));
    
            var opParameter = op.HasValue ?
                new ObjectParameter("Op", op) :
                new ObjectParameter("Op", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_BulkImportFile_Test", p_FilePathParameter, p_FileNameParameter, p_UserIDParameter, opParameter);
        }
    
        public virtual int SP_ImportFileSacFromText(string filePath, string filename, string fileHeaderSignature, Nullable<System.Guid> uploadGuid, string userID)
        {
            var filePathParameter = filePath != null ?
                new ObjectParameter("FilePath", filePath) :
                new ObjectParameter("FilePath", typeof(string));
    
            var filenameParameter = filename != null ?
                new ObjectParameter("Filename", filename) :
                new ObjectParameter("Filename", typeof(string));
    
            var fileHeaderSignatureParameter = fileHeaderSignature != null ?
                new ObjectParameter("FileHeaderSignature", fileHeaderSignature) :
                new ObjectParameter("FileHeaderSignature", typeof(string));
    
            var uploadGuidParameter = uploadGuid.HasValue ?
                new ObjectParameter("UploadGuid", uploadGuid) :
                new ObjectParameter("UploadGuid", typeof(System.Guid));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ImportFileSacFromText", filePathParameter, filenameParameter, fileHeaderSignatureParameter, uploadGuidParameter, userIDParameter);
        }
    
        public virtual int SP_ImportFileSacFromText_TEST(string filePath, string filename, string fileHeaderSignature, Nullable<System.Guid> uploadGuid, string userID)
        {
            var filePathParameter = filePath != null ?
                new ObjectParameter("FilePath", filePath) :
                new ObjectParameter("FilePath", typeof(string));
    
            var filenameParameter = filename != null ?
                new ObjectParameter("Filename", filename) :
                new ObjectParameter("Filename", typeof(string));
    
            var fileHeaderSignatureParameter = fileHeaderSignature != null ?
                new ObjectParameter("FileHeaderSignature", fileHeaderSignature) :
                new ObjectParameter("FileHeaderSignature", typeof(string));
    
            var uploadGuidParameter = uploadGuid.HasValue ?
                new ObjectParameter("UploadGuid", uploadGuid) :
                new ObjectParameter("UploadGuid", typeof(System.Guid));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ImportFileSacFromText_TEST", filePathParameter, filenameParameter, fileHeaderSignatureParameter, uploadGuidParameter, userIDParameter);
        }
    
        public virtual ObjectResult<SP_SACLiftHeader_ImportData_Result> SP_SACLiftHeader_ImportData(Nullable<System.Guid> uploadGuid)
        {
            var uploadGuidParameter = uploadGuid.HasValue ?
                new ObjectParameter("UploadGuid", uploadGuid) :
                new ObjectParameter("UploadGuid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SACLiftHeader_ImportData_Result>("SP_SACLiftHeader_ImportData", uploadGuidParameter);
        }
    
        public virtual int SP_AircraftUsage_MD(Nullable<int> option)
        {
            var optionParameter = option.HasValue ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AircraftUsage_MD", optionParameter);
        }
    
        public virtual int SP_NoLift_ForcedFlown()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_NoLift_ForcedFlown");
        }
    
        public virtual int SP_Update_Coupon_Usage_From_PNL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_Coupon_Usage_From_PNL");
        }
    
        public virtual int GlobalDelete1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GlobalDelete1");
        }
    
        public virtual int CleanXMLLoading(Nullable<System.Guid> pUploadGuid)
        {
            var pUploadGuidParameter = pUploadGuid.HasValue ?
                new ObjectParameter("pUploadGuid", pUploadGuid) :
                new ObjectParameter("pUploadGuid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CleanXMLLoading", pUploadGuidParameter);
        }
    
        public virtual ObjectResult<FirstRejection_Result> FirstRejection(string primeGuids, string archive)
        {
            var primeGuidsParameter = primeGuids != null ?
                new ObjectParameter("PrimeGuids", primeGuids) :
                new ObjectParameter("PrimeGuids", typeof(string));
    
            var archiveParameter = archive != null ?
                new ObjectParameter("Archive", archive) :
                new ObjectParameter("Archive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FirstRejection_Result>("FirstRejection", primeGuidsParameter, archiveParameter);
        }
    
        public virtual ObjectResult<FirstRejectionTaxMemo_Result> FirstRejectionTaxMemo(string primeGuid)
        {
            var primeGuidParameter = primeGuid != null ?
                new ObjectParameter("PrimeGuid", primeGuid) :
                new ObjectParameter("PrimeGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FirstRejectionTaxMemo_Result>("FirstRejectionTaxMemo", primeGuidParameter);
        }
    
        public virtual ObjectResult<FRTaxMemo_Result> FRTaxMemo(string primeGuid)
        {
            var primeGuidParameter = primeGuid != null ?
                new ObjectParameter("PrimeGuid", primeGuid) :
                new ObjectParameter("PrimeGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FRTaxMemo_Result>("FRTaxMemo", primeGuidParameter);
        }
    
        public virtual ObjectResult<PrimeInformation_Result> PrimeInformation(string documentNumber, string issuingAirline, string couponNumber)
        {
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("DocumentNumber", documentNumber) :
                new ObjectParameter("DocumentNumber", typeof(string));
    
            var issuingAirlineParameter = issuingAirline != null ?
                new ObjectParameter("IssuingAirline", issuingAirline) :
                new ObjectParameter("IssuingAirline", typeof(string));
    
            var couponNumberParameter = couponNumber != null ?
                new ObjectParameter("CouponNumber", couponNumber) :
                new ObjectParameter("CouponNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PrimeInformation_Result>("PrimeInformation", documentNumberParameter, issuingAirlineParameter, couponNumberParameter);
        }
    
        public virtual ObjectResult<RejectionsInformation_Result> RejectionsInformation(string documentNumber, string issuingAirline, string couponNumber)
        {
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("DocumentNumber", documentNumber) :
                new ObjectParameter("DocumentNumber", typeof(string));
    
            var issuingAirlineParameter = issuingAirline != null ?
                new ObjectParameter("IssuingAirline", issuingAirline) :
                new ObjectParameter("IssuingAirline", typeof(string));
    
            var couponNumberParameter = couponNumber != null ?
                new ObjectParameter("CouponNumber", couponNumber) :
                new ObjectParameter("CouponNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RejectionsInformation_Result>("RejectionsInformation", documentNumberParameter, issuingAirlineParameter, couponNumberParameter);
        }
    
        public virtual ObjectResult<SecondRejection_Result> SecondRejection(string rjGuids)
        {
            var rjGuidsParameter = rjGuids != null ?
                new ObjectParameter("RjGuids", rjGuids) :
                new ObjectParameter("RjGuids", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SecondRejection_Result>("SecondRejection", rjGuidsParameter);
        }
    
        public virtual ObjectResult<SecondRejectionTax_Result> SecondRejectionTax(string rjGuid, string period, string docNum, string cpnNo)
        {
            var rjGuidParameter = rjGuid != null ?
                new ObjectParameter("RjGuid", rjGuid) :
                new ObjectParameter("RjGuid", typeof(string));
    
            var periodParameter = period != null ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(string));
    
            var docNumParameter = docNum != null ?
                new ObjectParameter("DocNum", docNum) :
                new ObjectParameter("DocNum", typeof(string));
    
            var cpnNoParameter = cpnNo != null ?
                new ObjectParameter("CpnNo", cpnNo) :
                new ObjectParameter("CpnNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SecondRejectionTax_Result>("SecondRejectionTax", rjGuidParameter, periodParameter, docNumParameter, cpnNoParameter);
        }
    
        public virtual ObjectResult<ThirdRejection_Result> ThirdRejection(string rjGuids)
        {
            var rjGuidsParameter = rjGuids != null ?
                new ObjectParameter("RjGuids", rjGuids) :
                new ObjectParameter("RjGuids", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ThirdRejection_Result>("ThirdRejection", rjGuidsParameter);
        }
    
        public virtual ObjectResult<ThirdRejectionTax_Result> ThirdRejectionTax(string primeGuid, string rjGuid, string doc, string cpnNo)
        {
            var primeGuidParameter = primeGuid != null ?
                new ObjectParameter("PrimeGuid", primeGuid) :
                new ObjectParameter("PrimeGuid", typeof(string));
    
            var rjGuidParameter = rjGuid != null ?
                new ObjectParameter("RjGuid", rjGuid) :
                new ObjectParameter("RjGuid", typeof(string));
    
            var docParameter = doc != null ?
                new ObjectParameter("Doc", doc) :
                new ObjectParameter("Doc", typeof(string));
    
            var cpnNoParameter = cpnNo != null ?
                new ObjectParameter("CpnNo", cpnNo) :
                new ObjectParameter("CpnNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ThirdRejectionTax_Result>("ThirdRejectionTax", primeGuidParameter, rjGuidParameter, docParameter, cpnNoParameter);
        }
    
        public virtual int UpdateAlreadyRejected(Nullable<System.Guid> primeGuid, Nullable<System.DateTime> rejectionDate)
        {
            var primeGuidParameter = primeGuid.HasValue ?
                new ObjectParameter("PrimeGuid", primeGuid) :
                new ObjectParameter("PrimeGuid", typeof(System.Guid));
    
            var rejectionDateParameter = rejectionDate.HasValue ?
                new ObjectParameter("RejectionDate", rejectionDate) :
                new ObjectParameter("RejectionDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAlreadyRejected", primeGuidParameter, rejectionDateParameter);
        }
    
        public virtual int MD_Navision_CouponTax(Nullable<System.DateTime> dateofIssue_from, Nullable<System.DateTime> dateofIssue_to, string validated, string exported)
        {
            var dateofIssue_fromParameter = dateofIssue_from.HasValue ?
                new ObjectParameter("DateofIssue_from", dateofIssue_from) :
                new ObjectParameter("DateofIssue_from", typeof(System.DateTime));
    
            var dateofIssue_toParameter = dateofIssue_to.HasValue ?
                new ObjectParameter("DateofIssue_to", dateofIssue_to) :
                new ObjectParameter("DateofIssue_to", typeof(System.DateTime));
    
            var validatedParameter = validated != null ?
                new ObjectParameter("Validated", validated) :
                new ObjectParameter("Validated", typeof(string));
    
            var exportedParameter = exported != null ?
                new ObjectParameter("Exported", exported) :
                new ObjectParameter("Exported", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MD_Navision_CouponTax", dateofIssue_fromParameter, dateofIssue_toParameter, validatedParameter, exportedParameter);
        }
    
        public virtual int MD_Navision_Sales(Nullable<System.DateTime> dateofIssue_from, Nullable<System.DateTime> dateofIssue_to, string validated, string exported)
        {
            var dateofIssue_fromParameter = dateofIssue_from.HasValue ?
                new ObjectParameter("DateofIssue_from", dateofIssue_from) :
                new ObjectParameter("DateofIssue_from", typeof(System.DateTime));
    
            var dateofIssue_toParameter = dateofIssue_to.HasValue ?
                new ObjectParameter("DateofIssue_to", dateofIssue_to) :
                new ObjectParameter("DateofIssue_to", typeof(System.DateTime));
    
            var validatedParameter = validated != null ?
                new ObjectParameter("Validated", validated) :
                new ObjectParameter("Validated", typeof(string));
    
            var exportedParameter = exported != null ?
                new ObjectParameter("Exported", exported) :
                new ObjectParameter("Exported", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MD_Navision_Sales", dateofIssue_fromParameter, dateofIssue_toParameter, validatedParameter, exportedParameter);
        }
    
        public virtual int MD_Navision_SalesCoupon(Nullable<System.DateTime> dateofIssue_from, Nullable<System.DateTime> dateofIssue_to, string validated, string exported)
        {
            var dateofIssue_fromParameter = dateofIssue_from.HasValue ?
                new ObjectParameter("DateofIssue_from", dateofIssue_from) :
                new ObjectParameter("DateofIssue_from", typeof(System.DateTime));
    
            var dateofIssue_toParameter = dateofIssue_to.HasValue ?
                new ObjectParameter("DateofIssue_to", dateofIssue_to) :
                new ObjectParameter("DateofIssue_to", typeof(System.DateTime));
    
            var validatedParameter = validated != null ?
                new ObjectParameter("Validated", validated) :
                new ObjectParameter("Validated", typeof(string));
    
            var exportedParameter = exported != null ?
                new ObjectParameter("Exported", exported) :
                new ObjectParameter("Exported", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MD_Navision_SalesCoupon", dateofIssue_fromParameter, dateofIssue_toParameter, validatedParameter, exportedParameter);
        }
    
        public virtual int MD_Navision_UpliftCoupons(Nullable<System.DateTime> usageDate_from, Nullable<System.DateTime> usageDate_to, string validated, string exported)
        {
            var usageDate_fromParameter = usageDate_from.HasValue ?
                new ObjectParameter("UsageDate_from", usageDate_from) :
                new ObjectParameter("UsageDate_from", typeof(System.DateTime));
    
            var usageDate_toParameter = usageDate_to.HasValue ?
                new ObjectParameter("UsageDate_to", usageDate_to) :
                new ObjectParameter("UsageDate_to", typeof(System.DateTime));
    
            var validatedParameter = validated != null ?
                new ObjectParameter("Validated", validated) :
                new ObjectParameter("Validated", typeof(string));
    
            var exportedParameter = exported != null ?
                new ObjectParameter("Exported", exported) :
                new ObjectParameter("Exported", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MD_Navision_UpliftCoupons", usageDate_fromParameter, usageDate_toParameter, validatedParameter, exportedParameter);
        }
    
        public virtual int MD_Navision_UpliftTax(Nullable<System.DateTime> usageDate_from, Nullable<System.DateTime> usageDate_to, string validated, string exported)
        {
            var usageDate_fromParameter = usageDate_from.HasValue ?
                new ObjectParameter("UsageDate_from", usageDate_from) :
                new ObjectParameter("UsageDate_from", typeof(System.DateTime));
    
            var usageDate_toParameter = usageDate_to.HasValue ?
                new ObjectParameter("UsageDate_to", usageDate_to) :
                new ObjectParameter("UsageDate_to", typeof(System.DateTime));
    
            var validatedParameter = validated != null ?
                new ObjectParameter("Validated", validated) :
                new ObjectParameter("Validated", typeof(string));
    
            var exportedParameter = exported != null ?
                new ObjectParameter("Exported", exported) :
                new ObjectParameter("Exported", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MD_Navision_UpliftTax", usageDate_fromParameter, usageDate_toParameter, validatedParameter, exportedParameter);
        }
    
        public virtual ObjectResult<SalesByAgent_Result> SalesByAgent(string fromPeriod, string toPeriod, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string reportOption)
        {
            var fromPeriodParameter = fromPeriod != null ?
                new ObjectParameter("FromPeriod", fromPeriod) :
                new ObjectParameter("FromPeriod", typeof(string));
    
            var toPeriodParameter = toPeriod != null ?
                new ObjectParameter("ToPeriod", toPeriod) :
                new ObjectParameter("ToPeriod", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var reportOptionParameter = reportOption != null ?
                new ObjectParameter("ReportOption", reportOption) :
                new ObjectParameter("ReportOption", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SalesByAgent_Result>("SalesByAgent", fromPeriodParameter, toPeriodParameter, fromDateParameter, toDateParameter, reportOptionParameter);
        }
    
        public virtual int AgreementApplicabilityAuditSPAMsg(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, ObjectParameter message)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgreementApplicabilityAuditSPAMsg", fromDateParameter, toDateParameter, message);
        }
    
        public virtual ObjectResult<ATDsWithConjuctionTickets_Result> ATDsWithConjuctionTickets(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ATDsWithConjuctionTickets_Result>("ATDsWithConjuctionTickets", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<ATDsWithEndorsementsRestrictions_Result> ATDsWithEndorsementsRestrictions(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ATDsWithEndorsementsRestrictions_Result>("ATDsWithEndorsementsRestrictions", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<ATDsWithExchangedDocs_Result> ATDsWithExchangedDocs(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ATDsWithExchangedDocs_Result>("ATDsWithExchangedDocs", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<ATDsWithSPAApplication_Result> ATDsWithSPAApplication(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ATDsWithSPAApplication_Result>("ATDsWithSPAApplication", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<ATDsWithTransitPoints_Result> ATDsWithTransitPoints(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ATDsWithTransitPoints_Result>("ATDsWithTransitPoints", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<ATDsWithUATPFOP_Result> ATDsWithUATPFOP(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ATDsWithUATPFOP_Result>("ATDsWithUATPFOP", fromDateParameter, toDateParameter);
        }
    
        public virtual int CreateLiftProrationSlip(string documentno, Nullable<int> couponno, string sectororigin, string sectordestination, string sectorcarrier, string sourcetype, string currency, Nullable<decimal> finalshare)
        {
            var documentnoParameter = documentno != null ?
                new ObjectParameter("documentno", documentno) :
                new ObjectParameter("documentno", typeof(string));
    
            var couponnoParameter = couponno.HasValue ?
                new ObjectParameter("couponno", couponno) :
                new ObjectParameter("couponno", typeof(int));
    
            var sectororiginParameter = sectororigin != null ?
                new ObjectParameter("sectororigin", sectororigin) :
                new ObjectParameter("sectororigin", typeof(string));
    
            var sectordestinationParameter = sectordestination != null ?
                new ObjectParameter("sectordestination", sectordestination) :
                new ObjectParameter("sectordestination", typeof(string));
    
            var sectorcarrierParameter = sectorcarrier != null ?
                new ObjectParameter("sectorcarrier", sectorcarrier) :
                new ObjectParameter("sectorcarrier", typeof(string));
    
            var sourcetypeParameter = sourcetype != null ?
                new ObjectParameter("sourcetype", sourcetype) :
                new ObjectParameter("sourcetype", typeof(string));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("currency", currency) :
                new ObjectParameter("currency", typeof(string));
    
            var finalshareParameter = finalshare.HasValue ?
                new ObjectParameter("finalshare", finalshare) :
                new ObjectParameter("finalshare", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateLiftProrationSlip", documentnoParameter, couponnoParameter, sectororiginParameter, sectordestinationParameter, sectorcarrierParameter, sourcetypeParameter, currencyParameter, finalshareParameter);
        }
    
        public virtual ObjectResult<FinalShares_V_AmountCollected_Result> FinalShares_V_AmountCollected(string documentNumber)
        {
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("DocumentNumber", documentNumber) :
                new ObjectParameter("DocumentNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FinalShares_V_AmountCollected_Result>("FinalShares_V_AmountCollected", documentNumberParameter);
        }
    
        public virtual ObjectResult<FinalSharesCheck_Result> FinalSharesCheck(string ownairline, string res, Nullable<System.DateTime> dateofIssueFrom, Nullable<System.DateTime> dateofIssueTo, Nullable<int> pageNo, Nullable<int> recordsPerPage)
        {
            var ownairlineParameter = ownairline != null ?
                new ObjectParameter("ownairline", ownairline) :
                new ObjectParameter("ownairline", typeof(string));
    
            var resParameter = res != null ?
                new ObjectParameter("res", res) :
                new ObjectParameter("res", typeof(string));
    
            var dateofIssueFromParameter = dateofIssueFrom.HasValue ?
                new ObjectParameter("DateofIssueFrom", dateofIssueFrom) :
                new ObjectParameter("DateofIssueFrom", typeof(System.DateTime));
    
            var dateofIssueToParameter = dateofIssueTo.HasValue ?
                new ObjectParameter("DateofIssueTo", dateofIssueTo) :
                new ObjectParameter("DateofIssueTo", typeof(System.DateTime));
    
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var recordsPerPageParameter = recordsPerPage.HasValue ?
                new ObjectParameter("RecordsPerPage", recordsPerPage) :
                new ObjectParameter("RecordsPerPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FinalSharesCheck_Result>("FinalSharesCheck", ownairlineParameter, resParameter, dateofIssueFromParameter, dateofIssueToParameter, pageNoParameter, recordsPerPageParameter);
        }
    
        public virtual ObjectResult<FirstRejectionTaxMemo1_Result> FirstRejectionTaxMemo1(string documentNumber, string iCouponNumber, Nullable<decimal> tFCRejection, string settlementMonthPeriod, string ownAirline)
        {
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("DocumentNumber", documentNumber) :
                new ObjectParameter("DocumentNumber", typeof(string));
    
            var iCouponNumberParameter = iCouponNumber != null ?
                new ObjectParameter("iCouponNumber", iCouponNumber) :
                new ObjectParameter("iCouponNumber", typeof(string));
    
            var tFCRejectionParameter = tFCRejection.HasValue ?
                new ObjectParameter("TFCRejection", tFCRejection) :
                new ObjectParameter("TFCRejection", typeof(decimal));
    
            var settlementMonthPeriodParameter = settlementMonthPeriod != null ?
                new ObjectParameter("SettlementMonthPeriod", settlementMonthPeriod) :
                new ObjectParameter("SettlementMonthPeriod", typeof(string));
    
            var ownAirlineParameter = ownAirline != null ?
                new ObjectParameter("OwnAirline", ownAirline) :
                new ObjectParameter("OwnAirline", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FirstRejectionTaxMemo1_Result>("FirstRejectionTaxMemo1", documentNumberParameter, iCouponNumberParameter, tFCRejectionParameter, settlementMonthPeriodParameter, ownAirlineParameter);
        }
    
        public virtual ObjectResult<Flown_Surcharges_Result> Flown_Surcharges(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string airlines, string flight, string agentNumCode, string otherAmtCode)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            var airlinesParameter = airlines != null ?
                new ObjectParameter("airlines", airlines) :
                new ObjectParameter("airlines", typeof(string));
    
            var flightParameter = flight != null ?
                new ObjectParameter("flight", flight) :
                new ObjectParameter("flight", typeof(string));
    
            var agentNumCodeParameter = agentNumCode != null ?
                new ObjectParameter("AgentNumCode", agentNumCode) :
                new ObjectParameter("AgentNumCode", typeof(string));
    
            var otherAmtCodeParameter = otherAmtCode != null ?
                new ObjectParameter("OtherAmtCode", otherAmtCode) :
                new ObjectParameter("OtherAmtCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Flown_Surcharges_Result>("Flown_Surcharges", dateFromParameter, dateToParameter, airlinesParameter, flightParameter, agentNumCodeParameter, otherAmtCodeParameter);
        }
    
        public virtual ObjectResult<FN_InadOal_Result> FN_InadOal(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FN_InadOal_Result>("FN_InadOal", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<FOP_UATP_reclaim_Result> FOP_UATP_reclaim(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FOP_UATP_reclaim_Result>("FOP_UATP_reclaim", dateFromParameter, dateToParameter);
        }
    
        public virtual int GenerateBillingRecords(string airlineCode, string billingPeriod, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var airlineCodeParameter = airlineCode != null ?
                new ObjectParameter("AirlineCode", airlineCode) :
                new ObjectParameter("AirlineCode", typeof(string));
    
            var billingPeriodParameter = billingPeriod != null ?
                new ObjectParameter("BillingPeriod", billingPeriod) :
                new ObjectParameter("BillingPeriod", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenerateBillingRecords", airlineCodeParameter, billingPeriodParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<GetAllSalesTickets_Result> GetAllSalesTickets(string issueDate, string ticketNumber, string agentCode, string pnr, string transactionGroup, string transactionCode, string documentType, Nullable<int> flownFlag)
        {
            var issueDateParameter = issueDate != null ?
                new ObjectParameter("issueDate", issueDate) :
                new ObjectParameter("issueDate", typeof(string));
    
            var ticketNumberParameter = ticketNumber != null ?
                new ObjectParameter("ticketNumber", ticketNumber) :
                new ObjectParameter("ticketNumber", typeof(string));
    
            var agentCodeParameter = agentCode != null ?
                new ObjectParameter("agentCode", agentCode) :
                new ObjectParameter("agentCode", typeof(string));
    
            var pnrParameter = pnr != null ?
                new ObjectParameter("pnr", pnr) :
                new ObjectParameter("pnr", typeof(string));
    
            var transactionGroupParameter = transactionGroup != null ?
                new ObjectParameter("TransactionGroup", transactionGroup) :
                new ObjectParameter("TransactionGroup", typeof(string));
    
            var transactionCodeParameter = transactionCode != null ?
                new ObjectParameter("TransactionCode", transactionCode) :
                new ObjectParameter("TransactionCode", typeof(string));
    
            var documentTypeParameter = documentType != null ?
                new ObjectParameter("DocumentType", documentType) :
                new ObjectParameter("DocumentType", typeof(string));
    
            var flownFlagParameter = flownFlag.HasValue ?
                new ObjectParameter("FlownFlag", flownFlag) :
                new ObjectParameter("FlownFlag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllSalesTickets_Result>("GetAllSalesTickets", issueDateParameter, ticketNumberParameter, agentCodeParameter, pnrParameter, transactionGroupParameter, transactionCodeParameter, documentTypeParameter, flownFlagParameter);
        }
    
        public virtual ObjectResult<GetAllTickets_Result> GetAllTickets(string issueDate, string ticketNumber, string agentCode, string pnr)
        {
            var issueDateParameter = issueDate != null ?
                new ObjectParameter("issueDate", issueDate) :
                new ObjectParameter("issueDate", typeof(string));
    
            var ticketNumberParameter = ticketNumber != null ?
                new ObjectParameter("ticketNumber", ticketNumber) :
                new ObjectParameter("ticketNumber", typeof(string));
    
            var agentCodeParameter = agentCode != null ?
                new ObjectParameter("agentCode", agentCode) :
                new ObjectParameter("agentCode", typeof(string));
    
            var pnrParameter = pnr != null ?
                new ObjectParameter("pnr", pnr) :
                new ObjectParameter("pnr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllTickets_Result>("GetAllTickets", issueDateParameter, ticketNumberParameter, agentCodeParameter, pnrParameter);
        }
    
        public virtual ObjectResult<string> GetConjunction(string documentNumber)
        {
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("documentNumber", documentNumber) :
                new ObjectParameter("documentNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetConjunction", documentNumberParameter);
        }
    
        public virtual ObjectResult<GetConjunctionCoupons_Result> GetConjunctionCoupons(string documentNumber)
        {
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("documentNumber", documentNumber) :
                new ObjectParameter("documentNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetConjunctionCoupons_Result>("GetConjunctionCoupons", documentNumberParameter);
        }
    
        public virtual ObjectResult<GetCoupons_Result> GetCoupons(string documentNumber)
        {
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("documentNumber", documentNumber) :
                new ObjectParameter("documentNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCoupons_Result>("GetCoupons", documentNumberParameter);
        }
    
        public virtual ObjectResult<Nullable<byte>> GetCurrencyDecimalUnits(string currencyCode)
        {
            var currencyCodeParameter = currencyCode != null ?
                new ObjectParameter("CurrencyCode", currencyCode) :
                new ObjectParameter("CurrencyCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<byte>>("GetCurrencyDecimalUnits", currencyCodeParameter);
        }
    
        public virtual ObjectResult<GetHeaderFooter_Result> GetHeaderFooter(string documentNumber)
        {
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("documentNumber", documentNumber) :
                new ObjectParameter("documentNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHeaderFooter_Result>("GetHeaderFooter", documentNumberParameter);
        }
    
        public virtual ObjectResult<GetOALPendingBillings_Result> GetOALPendingBillings(string fromDate, string toDate, string airline)
        {
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(string));
    
            var airlineParameter = airline != null ?
                new ObjectParameter("airline", airline) :
                new ObjectParameter("airline", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOALPendingBillings_Result>("GetOALPendingBillings", fromDateParameter, toDateParameter, airlineParameter);
        }
    
        public virtual int GetOALuplift672_2delete()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetOALuplift672_2delete");
        }
    
        public virtual ObjectResult<GetTax_Result> GetTax(string documentNumber)
        {
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("documentNumber", documentNumber) :
                new ObjectParameter("documentNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTax_Result>("GetTax", documentNumberParameter);
        }
    
        public virtual int Header_Inward_Insert1(string reference, string invoiceNo, string billingPeriod, Nullable<int> sourceCode, Nullable<int> batchNo, string billingAirline, string billedAirline, string sourceDoc)
        {
            var referenceParameter = reference != null ?
                new ObjectParameter("Reference", reference) :
                new ObjectParameter("Reference", typeof(string));
    
            var invoiceNoParameter = invoiceNo != null ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(string));
    
            var billingPeriodParameter = billingPeriod != null ?
                new ObjectParameter("BillingPeriod", billingPeriod) :
                new ObjectParameter("BillingPeriod", typeof(string));
    
            var sourceCodeParameter = sourceCode.HasValue ?
                new ObjectParameter("SourceCode", sourceCode) :
                new ObjectParameter("SourceCode", typeof(int));
    
            var batchNoParameter = batchNo.HasValue ?
                new ObjectParameter("BatchNo", batchNo) :
                new ObjectParameter("BatchNo", typeof(int));
    
            var billingAirlineParameter = billingAirline != null ?
                new ObjectParameter("BillingAirline", billingAirline) :
                new ObjectParameter("BillingAirline", typeof(string));
    
            var billedAirlineParameter = billedAirline != null ?
                new ObjectParameter("BilledAirline", billedAirline) :
                new ObjectParameter("BilledAirline", typeof(string));
    
            var sourceDocParameter = sourceDoc != null ?
                new ObjectParameter("sourceDoc", sourceDoc) :
                new ObjectParameter("sourceDoc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Header_Inward_Insert1", referenceParameter, invoiceNoParameter, billingPeriodParameter, sourceCodeParameter, batchNoParameter, billingAirlineParameter, billedAirlineParameter, sourceDocParameter);
        }
    
        public virtual int Inward_details_insert1(string reference, Nullable<int> sequence, string documentNo, Nullable<int> couponNo, Nullable<int> checkDigit, string sectorFROM, string sectorTO, string currency, Nullable<decimal> grosssFare, string aGMindic, Nullable<decimal> iscRate, Nullable<decimal> iscAmount, Nullable<decimal> otherCommissionRate, Nullable<decimal> otherCommAmt, Nullable<decimal> uatpRate, Nullable<decimal> uatpAmount, Nullable<decimal> handlingFee, string currencyAdj, Nullable<decimal> taxAmt, Nullable<decimal> vatAmount, Nullable<decimal> couponValue)
        {
            var referenceParameter = reference != null ?
                new ObjectParameter("Reference", reference) :
                new ObjectParameter("Reference", typeof(string));
    
            var sequenceParameter = sequence.HasValue ?
                new ObjectParameter("Sequence", sequence) :
                new ObjectParameter("Sequence", typeof(int));
    
            var documentNoParameter = documentNo != null ?
                new ObjectParameter("DocumentNo", documentNo) :
                new ObjectParameter("DocumentNo", typeof(string));
    
            var couponNoParameter = couponNo.HasValue ?
                new ObjectParameter("CouponNo", couponNo) :
                new ObjectParameter("CouponNo", typeof(int));
    
            var checkDigitParameter = checkDigit.HasValue ?
                new ObjectParameter("CheckDigit", checkDigit) :
                new ObjectParameter("CheckDigit", typeof(int));
    
            var sectorFROMParameter = sectorFROM != null ?
                new ObjectParameter("SectorFROM", sectorFROM) :
                new ObjectParameter("SectorFROM", typeof(string));
    
            var sectorTOParameter = sectorTO != null ?
                new ObjectParameter("SectorTO", sectorTO) :
                new ObjectParameter("SectorTO", typeof(string));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            var grosssFareParameter = grosssFare.HasValue ?
                new ObjectParameter("GrosssFare", grosssFare) :
                new ObjectParameter("GrosssFare", typeof(decimal));
    
            var aGMindicParameter = aGMindic != null ?
                new ObjectParameter("AGMindic", aGMindic) :
                new ObjectParameter("AGMindic", typeof(string));
    
            var iscRateParameter = iscRate.HasValue ?
                new ObjectParameter("IscRate", iscRate) :
                new ObjectParameter("IscRate", typeof(decimal));
    
            var iscAmountParameter = iscAmount.HasValue ?
                new ObjectParameter("IscAmount", iscAmount) :
                new ObjectParameter("IscAmount", typeof(decimal));
    
            var otherCommissionRateParameter = otherCommissionRate.HasValue ?
                new ObjectParameter("OtherCommissionRate", otherCommissionRate) :
                new ObjectParameter("OtherCommissionRate", typeof(decimal));
    
            var otherCommAmtParameter = otherCommAmt.HasValue ?
                new ObjectParameter("otherCommAmt", otherCommAmt) :
                new ObjectParameter("otherCommAmt", typeof(decimal));
    
            var uatpRateParameter = uatpRate.HasValue ?
                new ObjectParameter("UatpRate", uatpRate) :
                new ObjectParameter("UatpRate", typeof(decimal));
    
            var uatpAmountParameter = uatpAmount.HasValue ?
                new ObjectParameter("UatpAmount", uatpAmount) :
                new ObjectParameter("UatpAmount", typeof(decimal));
    
            var handlingFeeParameter = handlingFee.HasValue ?
                new ObjectParameter("HandlingFee", handlingFee) :
                new ObjectParameter("HandlingFee", typeof(decimal));
    
            var currencyAdjParameter = currencyAdj != null ?
                new ObjectParameter("CurrencyAdj", currencyAdj) :
                new ObjectParameter("CurrencyAdj", typeof(string));
    
            var taxAmtParameter = taxAmt.HasValue ?
                new ObjectParameter("TaxAmt", taxAmt) :
                new ObjectParameter("TaxAmt", typeof(decimal));
    
            var vatAmountParameter = vatAmount.HasValue ?
                new ObjectParameter("VatAmount", vatAmount) :
                new ObjectParameter("VatAmount", typeof(decimal));
    
            var couponValueParameter = couponValue.HasValue ?
                new ObjectParameter("CouponValue", couponValue) :
                new ObjectParameter("CouponValue", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Inward_details_insert1", referenceParameter, sequenceParameter, documentNoParameter, couponNoParameter, checkDigitParameter, sectorFROMParameter, sectorTOParameter, currencyParameter, grosssFareParameter, aGMindicParameter, iscRateParameter, iscAmountParameter, otherCommissionRateParameter, otherCommAmtParameter, uatpRateParameter, uatpAmountParameter, handlingFeeParameter, currencyAdjParameter, taxAmtParameter, vatAmountParameter, couponValueParameter);
        }
    
        public virtual int LIFTscriptProrationSlip(string documentNo, Nullable<int> couponNo, string sectorOrigin, string sectorDestination, string sectorCarrier, string sourceType, string currency, Nullable<decimal> prorateFactor, Nullable<decimal> prorateValue, Nullable<decimal> straightRateProrate, Nullable<decimal> specialProrateAgreement, Nullable<decimal> diffentials, Nullable<decimal> surcharge, Nullable<decimal> finalShare, Nullable<decimal> taxesFeesCharges, Nullable<decimal> baseAmount, Nullable<decimal> iscPercent, Nullable<decimal> iscAmount, Nullable<decimal> handlingFeeAmt, Nullable<decimal> otherCommissions, Nullable<decimal> taxAmount, Nullable<decimal> uatpAmount)
        {
            var documentNoParameter = documentNo != null ?
                new ObjectParameter("DocumentNo", documentNo) :
                new ObjectParameter("DocumentNo", typeof(string));
    
            var couponNoParameter = couponNo.HasValue ?
                new ObjectParameter("CouponNo", couponNo) :
                new ObjectParameter("CouponNo", typeof(int));
    
            var sectorOriginParameter = sectorOrigin != null ?
                new ObjectParameter("SectorOrigin", sectorOrigin) :
                new ObjectParameter("SectorOrigin", typeof(string));
    
            var sectorDestinationParameter = sectorDestination != null ?
                new ObjectParameter("SectorDestination", sectorDestination) :
                new ObjectParameter("SectorDestination", typeof(string));
    
            var sectorCarrierParameter = sectorCarrier != null ?
                new ObjectParameter("SectorCarrier", sectorCarrier) :
                new ObjectParameter("SectorCarrier", typeof(string));
    
            var sourceTypeParameter = sourceType != null ?
                new ObjectParameter("SourceType", sourceType) :
                new ObjectParameter("SourceType", typeof(string));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            var prorateFactorParameter = prorateFactor.HasValue ?
                new ObjectParameter("ProrateFactor", prorateFactor) :
                new ObjectParameter("ProrateFactor", typeof(decimal));
    
            var prorateValueParameter = prorateValue.HasValue ?
                new ObjectParameter("ProrateValue", prorateValue) :
                new ObjectParameter("ProrateValue", typeof(decimal));
    
            var straightRateProrateParameter = straightRateProrate.HasValue ?
                new ObjectParameter("StraightRateProrate", straightRateProrate) :
                new ObjectParameter("StraightRateProrate", typeof(decimal));
    
            var specialProrateAgreementParameter = specialProrateAgreement.HasValue ?
                new ObjectParameter("SpecialProrateAgreement", specialProrateAgreement) :
                new ObjectParameter("SpecialProrateAgreement", typeof(decimal));
    
            var diffentialsParameter = diffentials.HasValue ?
                new ObjectParameter("Diffentials", diffentials) :
                new ObjectParameter("Diffentials", typeof(decimal));
    
            var surchargeParameter = surcharge.HasValue ?
                new ObjectParameter("Surcharge", surcharge) :
                new ObjectParameter("Surcharge", typeof(decimal));
    
            var finalShareParameter = finalShare.HasValue ?
                new ObjectParameter("FinalShare", finalShare) :
                new ObjectParameter("FinalShare", typeof(decimal));
    
            var taxesFeesChargesParameter = taxesFeesCharges.HasValue ?
                new ObjectParameter("TaxesFeesCharges", taxesFeesCharges) :
                new ObjectParameter("TaxesFeesCharges", typeof(decimal));
    
            var baseAmountParameter = baseAmount.HasValue ?
                new ObjectParameter("BaseAmount", baseAmount) :
                new ObjectParameter("BaseAmount", typeof(decimal));
    
            var iscPercentParameter = iscPercent.HasValue ?
                new ObjectParameter("IscPercent", iscPercent) :
                new ObjectParameter("IscPercent", typeof(decimal));
    
            var iscAmountParameter = iscAmount.HasValue ?
                new ObjectParameter("IscAmount", iscAmount) :
                new ObjectParameter("IscAmount", typeof(decimal));
    
            var handlingFeeAmtParameter = handlingFeeAmt.HasValue ?
                new ObjectParameter("HandlingFeeAmt", handlingFeeAmt) :
                new ObjectParameter("HandlingFeeAmt", typeof(decimal));
    
            var otherCommissionsParameter = otherCommissions.HasValue ?
                new ObjectParameter("OtherCommissions", otherCommissions) :
                new ObjectParameter("OtherCommissions", typeof(decimal));
    
            var taxAmountParameter = taxAmount.HasValue ?
                new ObjectParameter("TaxAmount", taxAmount) :
                new ObjectParameter("TaxAmount", typeof(decimal));
    
            var uatpAmountParameter = uatpAmount.HasValue ?
                new ObjectParameter("UatpAmount", uatpAmount) :
                new ObjectParameter("UatpAmount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LIFTscriptProrationSlip", documentNoParameter, couponNoParameter, sectorOriginParameter, sectorDestinationParameter, sectorCarrierParameter, sourceTypeParameter, currencyParameter, prorateFactorParameter, prorateValueParameter, straightRateProrateParameter, specialProrateAgreementParameter, diffentialsParameter, surchargeParameter, finalShareParameter, taxesFeesChargesParameter, baseAmountParameter, iscPercentParameter, iscAmountParameter, handlingFeeAmtParameter, otherCommissionsParameter, taxAmountParameter, uatpAmountParameter);
        }
    
        public virtual int OALscriptProrationSlip1(string documentNo, Nullable<int> couponNo, string sectorOrigin, string sectorDestination, string sectorCarrier, string sourceType, string currency, Nullable<decimal> prorateFactor, Nullable<decimal> prorateValue, Nullable<decimal> straightRateProrate, Nullable<decimal> specialProrateAgreement, Nullable<decimal> diffentials, Nullable<decimal> surcharge, Nullable<decimal> finalShare, Nullable<decimal> taxesFeesCharges, Nullable<decimal> baseAmount, Nullable<decimal> iscPercent, Nullable<decimal> iscAmount, Nullable<decimal> handlingFeeAmt, Nullable<decimal> otherCommissions, Nullable<decimal> taxAmount, Nullable<decimal> uatpAmount)
        {
            var documentNoParameter = documentNo != null ?
                new ObjectParameter("DocumentNo", documentNo) :
                new ObjectParameter("DocumentNo", typeof(string));
    
            var couponNoParameter = couponNo.HasValue ?
                new ObjectParameter("CouponNo", couponNo) :
                new ObjectParameter("CouponNo", typeof(int));
    
            var sectorOriginParameter = sectorOrigin != null ?
                new ObjectParameter("SectorOrigin", sectorOrigin) :
                new ObjectParameter("SectorOrigin", typeof(string));
    
            var sectorDestinationParameter = sectorDestination != null ?
                new ObjectParameter("SectorDestination", sectorDestination) :
                new ObjectParameter("SectorDestination", typeof(string));
    
            var sectorCarrierParameter = sectorCarrier != null ?
                new ObjectParameter("SectorCarrier", sectorCarrier) :
                new ObjectParameter("SectorCarrier", typeof(string));
    
            var sourceTypeParameter = sourceType != null ?
                new ObjectParameter("SourceType", sourceType) :
                new ObjectParameter("SourceType", typeof(string));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            var prorateFactorParameter = prorateFactor.HasValue ?
                new ObjectParameter("ProrateFactor", prorateFactor) :
                new ObjectParameter("ProrateFactor", typeof(decimal));
    
            var prorateValueParameter = prorateValue.HasValue ?
                new ObjectParameter("ProrateValue", prorateValue) :
                new ObjectParameter("ProrateValue", typeof(decimal));
    
            var straightRateProrateParameter = straightRateProrate.HasValue ?
                new ObjectParameter("StraightRateProrate", straightRateProrate) :
                new ObjectParameter("StraightRateProrate", typeof(decimal));
    
            var specialProrateAgreementParameter = specialProrateAgreement.HasValue ?
                new ObjectParameter("SpecialProrateAgreement", specialProrateAgreement) :
                new ObjectParameter("SpecialProrateAgreement", typeof(decimal));
    
            var diffentialsParameter = diffentials.HasValue ?
                new ObjectParameter("Diffentials", diffentials) :
                new ObjectParameter("Diffentials", typeof(decimal));
    
            var surchargeParameter = surcharge.HasValue ?
                new ObjectParameter("Surcharge", surcharge) :
                new ObjectParameter("Surcharge", typeof(decimal));
    
            var finalShareParameter = finalShare.HasValue ?
                new ObjectParameter("FinalShare", finalShare) :
                new ObjectParameter("FinalShare", typeof(decimal));
    
            var taxesFeesChargesParameter = taxesFeesCharges.HasValue ?
                new ObjectParameter("TaxesFeesCharges", taxesFeesCharges) :
                new ObjectParameter("TaxesFeesCharges", typeof(decimal));
    
            var baseAmountParameter = baseAmount.HasValue ?
                new ObjectParameter("BaseAmount", baseAmount) :
                new ObjectParameter("BaseAmount", typeof(decimal));
    
            var iscPercentParameter = iscPercent.HasValue ?
                new ObjectParameter("IscPercent", iscPercent) :
                new ObjectParameter("IscPercent", typeof(decimal));
    
            var iscAmountParameter = iscAmount.HasValue ?
                new ObjectParameter("IscAmount", iscAmount) :
                new ObjectParameter("IscAmount", typeof(decimal));
    
            var handlingFeeAmtParameter = handlingFeeAmt.HasValue ?
                new ObjectParameter("HandlingFeeAmt", handlingFeeAmt) :
                new ObjectParameter("HandlingFeeAmt", typeof(decimal));
    
            var otherCommissionsParameter = otherCommissions.HasValue ?
                new ObjectParameter("OtherCommissions", otherCommissions) :
                new ObjectParameter("OtherCommissions", typeof(decimal));
    
            var taxAmountParameter = taxAmount.HasValue ?
                new ObjectParameter("TaxAmount", taxAmount) :
                new ObjectParameter("TaxAmount", typeof(decimal));
    
            var uatpAmountParameter = uatpAmount.HasValue ?
                new ObjectParameter("UatpAmount", uatpAmount) :
                new ObjectParameter("UatpAmount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OALscriptProrationSlip1", documentNoParameter, couponNoParameter, sectorOriginParameter, sectorDestinationParameter, sectorCarrierParameter, sourceTypeParameter, currencyParameter, prorateFactorParameter, prorateValueParameter, straightRateProrateParameter, specialProrateAgreementParameter, diffentialsParameter, surchargeParameter, finalShareParameter, taxesFeesChargesParameter, baseAmountParameter, iscPercentParameter, iscAmountParameter, handlingFeeAmtParameter, otherCommissionsParameter, taxAmountParameter, uatpAmountParameter);
        }
    
        public virtual ObjectResult<Proration_Surcharge_Result> Proration_Surcharge(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string airlines, string flight, string agentNumCode, string context)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            var airlinesParameter = airlines != null ?
                new ObjectParameter("airlines", airlines) :
                new ObjectParameter("airlines", typeof(string));
    
            var flightParameter = flight != null ?
                new ObjectParameter("flight", flight) :
                new ObjectParameter("flight", typeof(string));
    
            var agentNumCodeParameter = agentNumCode != null ?
                new ObjectParameter("AgentNumCode", agentNumCode) :
                new ObjectParameter("AgentNumCode", typeof(string));
    
            var contextParameter = context != null ?
                new ObjectParameter("Context", context) :
                new ObjectParameter("Context", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proration_Surcharge_Result>("Proration_Surcharge", dateFromParameter, dateToParameter, airlinesParameter, flightParameter, agentNumCodeParameter, contextParameter);
        }
    
        public virtual ObjectResult<QRYliftSP_Result> QRYliftSP(string flt, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string airline, string doctype)
        {
            var fltParameter = flt != null ?
                new ObjectParameter("flt", flt) :
                new ObjectParameter("flt", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var airlineParameter = airline != null ?
                new ObjectParameter("airline", airline) :
                new ObjectParameter("airline", typeof(string));
    
            var doctypeParameter = doctype != null ?
                new ObjectParameter("doctype", doctype) :
                new ObjectParameter("doctype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<QRYliftSP_Result>("QRYliftSP", fltParameter, startDateParameter, endDateParameter, airlineParameter, doctypeParameter);
        }
    
        public virtual int SisBilling_ADD(string billedAirline, string billingAirline, string tICKET, string cOUPON, string chk, Nullable<int> tCcode, string sectorFrom, string sectorTo, Nullable<decimal> amount, Nullable<int> iSC, Nullable<decimal> comm, string flight, Nullable<System.DateTime> flightDate, string cur, string sac, string invoice, string billingPeriod)
        {
            var billedAirlineParameter = billedAirline != null ?
                new ObjectParameter("billedAirline", billedAirline) :
                new ObjectParameter("billedAirline", typeof(string));
    
            var billingAirlineParameter = billingAirline != null ?
                new ObjectParameter("billingAirline", billingAirline) :
                new ObjectParameter("billingAirline", typeof(string));
    
            var tICKETParameter = tICKET != null ?
                new ObjectParameter("TICKET", tICKET) :
                new ObjectParameter("TICKET", typeof(string));
    
            var cOUPONParameter = cOUPON != null ?
                new ObjectParameter("COUPON", cOUPON) :
                new ObjectParameter("COUPON", typeof(string));
    
            var chkParameter = chk != null ?
                new ObjectParameter("chk", chk) :
                new ObjectParameter("chk", typeof(string));
    
            var tCcodeParameter = tCcode.HasValue ?
                new ObjectParameter("TCcode", tCcode) :
                new ObjectParameter("TCcode", typeof(int));
    
            var sectorFromParameter = sectorFrom != null ?
                new ObjectParameter("sectorFrom", sectorFrom) :
                new ObjectParameter("sectorFrom", typeof(string));
    
            var sectorToParameter = sectorTo != null ?
                new ObjectParameter("sectorTo", sectorTo) :
                new ObjectParameter("sectorTo", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var iSCParameter = iSC.HasValue ?
                new ObjectParameter("ISC", iSC) :
                new ObjectParameter("ISC", typeof(int));
    
            var commParameter = comm.HasValue ?
                new ObjectParameter("comm", comm) :
                new ObjectParameter("comm", typeof(decimal));
    
            var flightParameter = flight != null ?
                new ObjectParameter("flight", flight) :
                new ObjectParameter("flight", typeof(string));
    
            var flightDateParameter = flightDate.HasValue ?
                new ObjectParameter("FlightDate", flightDate) :
                new ObjectParameter("FlightDate", typeof(System.DateTime));
    
            var curParameter = cur != null ?
                new ObjectParameter("cur", cur) :
                new ObjectParameter("cur", typeof(string));
    
            var sacParameter = sac != null ?
                new ObjectParameter("sac", sac) :
                new ObjectParameter("sac", typeof(string));
    
            var invoiceParameter = invoice != null ?
                new ObjectParameter("invoice", invoice) :
                new ObjectParameter("invoice", typeof(string));
    
            var billingPeriodParameter = billingPeriod != null ?
                new ObjectParameter("billingPeriod", billingPeriod) :
                new ObjectParameter("billingPeriod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SisBilling_ADD", billedAirlineParameter, billingAirlineParameter, tICKETParameter, cOUPONParameter, chkParameter, tCcodeParameter, sectorFromParameter, sectorToParameter, amountParameter, iSCParameter, commParameter, flightParameter, flightDateParameter, curParameter, sacParameter, invoiceParameter, billingPeriodParameter);
        }
    
        public virtual ObjectResult<SLSLDM_Adjusted_Result> SLSLDM_Adjusted(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string flt)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            var fltParameter = flt != null ?
                new ObjectParameter("flt", flt) :
                new ObjectParameter("flt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SLSLDM_Adjusted_Result>("SLSLDM_Adjusted", dateFromParameter, dateToParameter, fltParameter);
        }
    
        public virtual ObjectResult<SP_AgentSalesByMonth_Result> SP_AgentSalesByMonth(Nullable<int> mth, Nullable<int> yr, Nullable<long> agtNumCode)
        {
            var mthParameter = mth.HasValue ?
                new ObjectParameter("mth", mth) :
                new ObjectParameter("mth", typeof(int));
    
            var yrParameter = yr.HasValue ?
                new ObjectParameter("yr", yr) :
                new ObjectParameter("yr", typeof(int));
    
            var agtNumCodeParameter = agtNumCode.HasValue ?
                new ObjectParameter("agtNumCode", agtNumCode) :
                new ObjectParameter("agtNumCode", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_AgentSalesByMonth_Result>("SP_AgentSalesByMonth", mthParameter, yrParameter, agtNumCodeParameter);
        }
    
        public virtual int SP_AgentSalesLimit(Nullable<int> sendMail)
        {
            var sendMailParameter = sendMail.HasValue ?
                new ObjectParameter("SendMail", sendMail) :
                new ObjectParameter("SendMail", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AgentSalesLimit", sendMailParameter);
        }
    
        public virtual int SP_ApplicableTaxes(Nullable<System.DateTime> issueDate_From, Nullable<System.DateTime> issueDate_To, string relatedDocumentNumber, string billingAirline)
        {
            var issueDate_FromParameter = issueDate_From.HasValue ?
                new ObjectParameter("IssueDate_From", issueDate_From) :
                new ObjectParameter("IssueDate_From", typeof(System.DateTime));
    
            var issueDate_ToParameter = issueDate_To.HasValue ?
                new ObjectParameter("IssueDate_To", issueDate_To) :
                new ObjectParameter("IssueDate_To", typeof(System.DateTime));
    
            var relatedDocumentNumberParameter = relatedDocumentNumber != null ?
                new ObjectParameter("RelatedDocumentNumber", relatedDocumentNumber) :
                new ObjectParameter("RelatedDocumentNumber", typeof(string));
    
            var billingAirlineParameter = billingAirline != null ?
                new ObjectParameter("BillingAirline", billingAirline) :
                new ObjectParameter("BillingAirline", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ApplicableTaxes", issueDate_FromParameter, issueDate_ToParameter, relatedDocumentNumberParameter, billingAirlineParameter);
        }
    
        public virtual int SP_BSP_BillingMonth(string billingMonth)
        {
            var billingMonthParameter = billingMonth != null ?
                new ObjectParameter("BillingMonth", billingMonth) :
                new ObjectParameter("BillingMonth", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_BSP_BillingMonth", billingMonthParameter);
        }
    
        public virtual int SP_CodeShare(string documentAirlineId, Nullable<System.DateTime> usageDateFrom, Nullable<System.DateTime> usageDateTo)
        {
            var documentAirlineIdParameter = documentAirlineId != null ?
                new ObjectParameter("DocumentAirlineId", documentAirlineId) :
                new ObjectParameter("DocumentAirlineId", typeof(string));
    
            var usageDateFromParameter = usageDateFrom.HasValue ?
                new ObjectParameter("UsageDateFrom", usageDateFrom) :
                new ObjectParameter("UsageDateFrom", typeof(System.DateTime));
    
            var usageDateToParameter = usageDateTo.HasValue ?
                new ObjectParameter("UsageDateTo", usageDateTo) :
                new ObjectParameter("UsageDateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CodeShare", documentAirlineIdParameter, usageDateFromParameter, usageDateToParameter);
        }
    
        public virtual int SP_CodeShare_Generate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CodeShare_Generate");
        }
    
        public virtual ObjectResult<SP_comission_Result> SP_comission(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string agent)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var agentParameter = agent != null ?
                new ObjectParameter("agent", agent) :
                new ObjectParameter("agent", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_comission_Result>("SP_comission", fromDateParameter, toDateParameter, agentParameter);
        }
    
        public virtual int SP_Commission_Reclaim(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Commission_Reclaim", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SP_Compare_Result> SP_Compare(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string flight)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            var flightParameter = flight != null ?
                new ObjectParameter("Flight", flight) :
                new ObjectParameter("Flight", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Compare_Result>("SP_Compare", dateFromParameter, dateToParameter, flightParameter);
        }
    
        public virtual ObjectResult<SP_ConvertRate_Result> SP_ConvertRate(Nullable<int> mth, Nullable<int> yr, string currency)
        {
            var mthParameter = mth.HasValue ?
                new ObjectParameter("mth", mth) :
                new ObjectParameter("mth", typeof(int));
    
            var yrParameter = yr.HasValue ?
                new ObjectParameter("yr", yr) :
                new ObjectParameter("yr", typeof(int));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("currency", currency) :
                new ObjectParameter("currency", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ConvertRate_Result>("SP_ConvertRate", mthParameter, yrParameter, currencyParameter);
        }
    
        public virtual int SP_Coupon_Tax_BreakDown_Pivot(Nullable<System.Guid> hdrHuid)
        {
            var hdrHuidParameter = hdrHuid.HasValue ?
                new ObjectParameter("HdrHuid", hdrHuid) :
                new ObjectParameter("HdrHuid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Coupon_Tax_BreakDown_Pivot", hdrHuidParameter);
        }
    
        public virtual ObjectResult<SP_CouponUnused_Result> SP_CouponUnused(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CouponUnused_Result>("SP_CouponUnused", fromParameter, toParameter);
        }
    
        public virtual int SP_CpnTax_MD()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CpnTax_MD");
        }
    
        public virtual int SP_CpnTaxSector_MD()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CpnTaxSector_MD");
        }
    
        public virtual ObjectResult<SP_DataSplitEngine_SALES_Result> SP_DataSplitEngine_SALES(Nullable<System.DateTime> issueDate_from, Nullable<System.DateTime> issueDate_to, string carrier, Nullable<int> interlining, Nullable<int> lift, Nullable<int> pageNo, Nullable<int> recordsPerPage)
        {
            var issueDate_fromParameter = issueDate_from.HasValue ?
                new ObjectParameter("IssueDate_from", issueDate_from) :
                new ObjectParameter("IssueDate_from", typeof(System.DateTime));
    
            var issueDate_toParameter = issueDate_to.HasValue ?
                new ObjectParameter("IssueDate_to", issueDate_to) :
                new ObjectParameter("IssueDate_to", typeof(System.DateTime));
    
            var carrierParameter = carrier != null ?
                new ObjectParameter("Carrier", carrier) :
                new ObjectParameter("Carrier", typeof(string));
    
            var interliningParameter = interlining.HasValue ?
                new ObjectParameter("Interlining", interlining) :
                new ObjectParameter("Interlining", typeof(int));
    
            var liftParameter = lift.HasValue ?
                new ObjectParameter("Lift", lift) :
                new ObjectParameter("Lift", typeof(int));
    
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var recordsPerPageParameter = recordsPerPage.HasValue ?
                new ObjectParameter("RecordsPerPage", recordsPerPage) :
                new ObjectParameter("RecordsPerPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DataSplitEngine_SALES_Result>("SP_DataSplitEngine_SALES", issueDate_fromParameter, issueDate_toParameter, carrierParameter, interliningParameter, liftParameter, pageNoParameter, recordsPerPageParameter);
        }
    
        public virtual int SP_Document_BSP_Period(string bSP, string yearMonth, Nullable<int> period)
        {
            var bSPParameter = bSP != null ?
                new ObjectParameter("BSP", bSP) :
                new ObjectParameter("BSP", typeof(string));
    
            var yearMonthParameter = yearMonth != null ?
                new ObjectParameter("YearMonth", yearMonth) :
                new ObjectParameter("YearMonth", typeof(string));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Document_BSP_Period", bSPParameter, yearMonthParameter, periodParameter);
        }
    
        public virtual int SP_Document_BSP_Period_New(string bSP, string yearMonth, Nullable<int> period)
        {
            var bSPParameter = bSP != null ?
                new ObjectParameter("BSP", bSP) :
                new ObjectParameter("BSP", typeof(string));
    
            var yearMonthParameter = yearMonth != null ?
                new ObjectParameter("YearMonth", yearMonth) :
                new ObjectParameter("YearMonth", typeof(string));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Document_BSP_Period_New", bSPParameter, yearMonthParameter, periodParameter);
        }
    
        public virtual int SP_Excess_ManualEntryUpdate(Nullable<System.Guid> hdrguid)
        {
            var hdrguidParameter = hdrguid.HasValue ?
                new ObjectParameter("hdrguid", hdrguid) :
                new ObjectParameter("hdrguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Excess_ManualEntryUpdate", hdrguidParameter);
        }
    
        public virtual int SP_ExchangeMoreDetails(string originalIssueDocumentNumber)
        {
            var originalIssueDocumentNumberParameter = originalIssueDocumentNumber != null ?
                new ObjectParameter("OriginalIssueDocumentNumber", originalIssueDocumentNumber) :
                new ObjectParameter("OriginalIssueDocumentNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ExchangeMoreDetails", originalIssueDocumentNumberParameter);
        }
    
        public virtual ObjectResult<SP_FlownTransactionByType_Result> SP_FlownTransactionByType(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string transactionType)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var transactionTypeParameter = transactionType != null ?
                new ObjectParameter("TransactionType", transactionType) :
                new ObjectParameter("TransactionType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FlownTransactionByType_Result>("SP_FlownTransactionByType", fromDateParameter, toDateParameter, transactionTypeParameter);
        }
    
        public virtual ObjectResult<SP_FOP_Result> SP_FOP(Nullable<System.DateTime> periodFrom, Nullable<System.DateTime> periodTo, string fop)
        {
            var periodFromParameter = periodFrom.HasValue ?
                new ObjectParameter("periodFrom", periodFrom) :
                new ObjectParameter("periodFrom", typeof(System.DateTime));
    
            var periodToParameter = periodTo.HasValue ?
                new ObjectParameter("periodTo", periodTo) :
                new ObjectParameter("periodTo", typeof(System.DateTime));
    
            var fopParameter = fop != null ?
                new ObjectParameter("fop", fop) :
                new ObjectParameter("fop", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FOP_Result>("SP_FOP", periodFromParameter, periodToParameter, fopParameter);
        }
    
        public virtual ObjectResult<SP_FOPcurGroup_Result> SP_FOPcurGroup(string periodFrom, string periodTo, string fop, string tCtype)
        {
            var periodFromParameter = periodFrom != null ?
                new ObjectParameter("periodFrom", periodFrom) :
                new ObjectParameter("periodFrom", typeof(string));
    
            var periodToParameter = periodTo != null ?
                new ObjectParameter("periodTo", periodTo) :
                new ObjectParameter("periodTo", typeof(string));
    
            var fopParameter = fop != null ?
                new ObjectParameter("fop", fop) :
                new ObjectParameter("fop", typeof(string));
    
            var tCtypeParameter = tCtype != null ?
                new ObjectParameter("TCtype", tCtype) :
                new ObjectParameter("TCtype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FOPcurGroup_Result>("SP_FOPcurGroup", periodFromParameter, periodToParameter, fopParameter, tCtypeParameter);
        }
    
        public virtual ObjectResult<string> SP_FOPqryFoType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_FOPqryFoType");
        }
    
        public virtual ObjectResult<string> SP_FOPqryPeriod()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_FOPqryPeriod");
        }
    
        public virtual ObjectResult<string> SP_FOPqryTCgroup()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_FOPqryTCgroup");
        }
    
        public virtual ObjectResult<SP_FOPuatp_Result> SP_FOPuatp(Nullable<System.DateTime> periodFrom, Nullable<System.DateTime> periodTo, string fop)
        {
            var periodFromParameter = periodFrom.HasValue ?
                new ObjectParameter("periodFrom", periodFrom) :
                new ObjectParameter("periodFrom", typeof(System.DateTime));
    
            var periodToParameter = periodTo.HasValue ?
                new ObjectParameter("periodTo", periodTo) :
                new ObjectParameter("periodTo", typeof(System.DateTime));
    
            var fopParameter = fop != null ?
                new ObjectParameter("fop", fop) :
                new ObjectParameter("fop", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FOPuatp_Result>("SP_FOPuatp", periodFromParameter, periodToParameter, fopParameter);
        }
    
        public virtual ObjectResult<SP_FOPuatpOthers_Result> SP_FOPuatpOthers(Nullable<System.DateTime> periodFrom, Nullable<System.DateTime> periodTo)
        {
            var periodFromParameter = periodFrom.HasValue ?
                new ObjectParameter("periodFrom", periodFrom) :
                new ObjectParameter("periodFrom", typeof(System.DateTime));
    
            var periodToParameter = periodTo.HasValue ?
                new ObjectParameter("periodTo", periodTo) :
                new ObjectParameter("periodTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_FOPuatpOthers_Result>("SP_FOPuatpOthers", periodFromParameter, periodToParameter);
        }
    
        public virtual int SP_FunnelFLts(string origin, string destination, Nullable<int> flightNumber, Nullable<System.DateTime> departureDate_From, Nullable<System.DateTime> departureDate_To, string fareBasis, string rBD)
        {
            var originParameter = origin != null ?
                new ObjectParameter("Origin", origin) :
                new ObjectParameter("Origin", typeof(string));
    
            var destinationParameter = destination != null ?
                new ObjectParameter("Destination", destination) :
                new ObjectParameter("Destination", typeof(string));
    
            var flightNumberParameter = flightNumber.HasValue ?
                new ObjectParameter("FlightNumber", flightNumber) :
                new ObjectParameter("FlightNumber", typeof(int));
    
            var departureDate_FromParameter = departureDate_From.HasValue ?
                new ObjectParameter("DepartureDate_From", departureDate_From) :
                new ObjectParameter("DepartureDate_From", typeof(System.DateTime));
    
            var departureDate_ToParameter = departureDate_To.HasValue ?
                new ObjectParameter("DepartureDate_To", departureDate_To) :
                new ObjectParameter("DepartureDate_To", typeof(System.DateTime));
    
            var fareBasisParameter = fareBasis != null ?
                new ObjectParameter("FareBasis", fareBasis) :
                new ObjectParameter("FareBasis", typeof(string));
    
            var rBDParameter = rBD != null ?
                new ObjectParameter("RBD", rBD) :
                new ObjectParameter("RBD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_FunnelFLts", originParameter, destinationParameter, flightNumberParameter, departureDate_FromParameter, departureDate_ToParameter, fareBasisParameter, rBDParameter);
        }
    
        public virtual int SP_GenerateBillingRecordsNew(string airlineCode, string billingPeriod, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var airlineCodeParameter = airlineCode != null ?
                new ObjectParameter("AirlineCode", airlineCode) :
                new ObjectParameter("AirlineCode", typeof(string));
    
            var billingPeriodParameter = billingPeriod != null ?
                new ObjectParameter("BillingPeriod", billingPeriod) :
                new ObjectParameter("BillingPeriod", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GenerateBillingRecordsNew", airlineCodeParameter, billingPeriodParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int SP_GenerateFCA(string processingFileType)
        {
            var processingFileTypeParameter = processingFileType != null ?
                new ObjectParameter("ProcessingFileType", processingFileType) :
                new ObjectParameter("ProcessingFileType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GenerateFCA", processingFileTypeParameter);
        }
    
        public virtual ObjectResult<string> SP_GetAirlineCodes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GetAirlineCodes");
        }
    
        public virtual ObjectResult<string> SP_GetFareBasisLifted(string airlineCode, string document, string cpn)
        {
            var airlineCodeParameter = airlineCode != null ?
                new ObjectParameter("airlineCode", airlineCode) :
                new ObjectParameter("airlineCode", typeof(string));
    
            var documentParameter = document != null ?
                new ObjectParameter("document", document) :
                new ObjectParameter("document", typeof(string));
    
            var cpnParameter = cpn != null ?
                new ObjectParameter("cpn", cpn) :
                new ObjectParameter("cpn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GetFareBasisLifted", airlineCodeParameter, documentParameter, cpnParameter);
        }
    
        public virtual ObjectResult<string> SP_GetFunnelFlts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_GetFunnelFlts");
        }
    
        public virtual int SP_HeaderTax()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HeaderTax");
        }
    
        public virtual ObjectResult<SP_InterlineApplicableTax_Result> SP_InterlineApplicableTax(string relatedDocumentNumber, Nullable<int> couponNumber, string mOC)
        {
            var relatedDocumentNumberParameter = relatedDocumentNumber != null ?
                new ObjectParameter("RelatedDocumentNumber", relatedDocumentNumber) :
                new ObjectParameter("RelatedDocumentNumber", typeof(string));
    
            var couponNumberParameter = couponNumber.HasValue ?
                new ObjectParameter("CouponNumber", couponNumber) :
                new ObjectParameter("CouponNumber", typeof(int));
    
            var mOCParameter = mOC != null ?
                new ObjectParameter("MOC", mOC) :
                new ObjectParameter("MOC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_InterlineApplicableTax_Result>("SP_InterlineApplicableTax", relatedDocumentNumberParameter, couponNumberParameter, mOCParameter);
        }
    
        public virtual ObjectResult<SP_InterlineTransactionByType_Result> SP_InterlineTransactionByType(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string transactionType)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var transactionTypeParameter = transactionType != null ?
                new ObjectParameter("TransactionType", transactionType) :
                new ObjectParameter("TransactionType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_InterlineTransactionByType_Result>("SP_InterlineTransactionByType", fromDateParameter, toDateParameter, transactionTypeParameter);
        }
    
        public virtual ObjectResult<SP_InvoiceOALS_Result> SP_InvoiceOALS(string period, string inv, string airline)
        {
            var periodParameter = period != null ?
                new ObjectParameter("period", period) :
                new ObjectParameter("period", typeof(string));
    
            var invParameter = inv != null ?
                new ObjectParameter("inv", inv) :
                new ObjectParameter("inv", typeof(string));
    
            var airlineParameter = airline != null ?
                new ObjectParameter("airline", airline) :
                new ObjectParameter("airline", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_InvoiceOALS_Result>("SP_InvoiceOALS", periodParameter, invParameter, airlineParameter);
        }
    
        public virtual ObjectResult<SP_LDMflt_Result> SP_LDMflt(Nullable<System.DateTime> fltFrom, Nullable<System.DateTime> fltTo, string flt)
        {
            var fltFromParameter = fltFrom.HasValue ?
                new ObjectParameter("FltFrom", fltFrom) :
                new ObjectParameter("FltFrom", typeof(System.DateTime));
    
            var fltToParameter = fltTo.HasValue ?
                new ObjectParameter("FltTo", fltTo) :
                new ObjectParameter("FltTo", typeof(System.DateTime));
    
            var fltParameter = flt != null ?
                new ObjectParameter("flt", flt) :
                new ObjectParameter("flt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LDMflt_Result>("SP_LDMflt", fltFromParameter, fltToParameter, fltParameter);
        }
    
        public virtual ObjectResult<SP_LDMlist_Result> SP_LDMlist(Nullable<System.DateTime> fltFrom, Nullable<System.DateTime> fltTo, string flt)
        {
            var fltFromParameter = fltFrom.HasValue ?
                new ObjectParameter("FltFrom", fltFrom) :
                new ObjectParameter("FltFrom", typeof(System.DateTime));
    
            var fltToParameter = fltTo.HasValue ?
                new ObjectParameter("FltTo", fltTo) :
                new ObjectParameter("FltTo", typeof(System.DateTime));
    
            var fltParameter = flt != null ?
                new ObjectParameter("flt", flt) :
                new ObjectParameter("flt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LDMlist_Result>("SP_LDMlist", fltFromParameter, fltToParameter, fltParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_ListLDMfltNo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_ListLDMfltNo");
        }
    
        public virtual int SP_ManualEntryUpdate(Nullable<System.Guid> hdrguid, string iP, string user)
        {
            var hdrguidParameter = hdrguid.HasValue ?
                new ObjectParameter("hdrguid", hdrguid) :
                new ObjectParameter("hdrguid", typeof(System.Guid));
    
            var iPParameter = iP != null ?
                new ObjectParameter("IP", iP) :
                new ObjectParameter("IP", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ManualEntryUpdate", hdrguidParameter, iPParameter, userParameter);
        }
    
        public virtual int SP_ManualRefundUpdate(Nullable<System.Guid> hdrguid)
        {
            var hdrguidParameter = hdrguid.HasValue ?
                new ObjectParameter("hdrguid", hdrguid) :
                new ObjectParameter("hdrguid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ManualRefundUpdate", hdrguidParameter);
        }
    
        public virtual ObjectResult<SP_Noshow_Result> SP_Noshow(Nullable<System.DateTime> flightdateFrom, Nullable<System.DateTime> flightdateTo, Nullable<System.DateTime> usagedateFrom, Nullable<System.DateTime> usagedateTo, string flightNumber, string documentNo, string paxName, string remarks)
        {
            var flightdateFromParameter = flightdateFrom.HasValue ?
                new ObjectParameter("FlightdateFrom", flightdateFrom) :
                new ObjectParameter("FlightdateFrom", typeof(System.DateTime));
    
            var flightdateToParameter = flightdateTo.HasValue ?
                new ObjectParameter("FlightdateTo", flightdateTo) :
                new ObjectParameter("FlightdateTo", typeof(System.DateTime));
    
            var usagedateFromParameter = usagedateFrom.HasValue ?
                new ObjectParameter("UsagedateFrom", usagedateFrom) :
                new ObjectParameter("UsagedateFrom", typeof(System.DateTime));
    
            var usagedateToParameter = usagedateTo.HasValue ?
                new ObjectParameter("UsagedateTo", usagedateTo) :
                new ObjectParameter("UsagedateTo", typeof(System.DateTime));
    
            var flightNumberParameter = flightNumber != null ?
                new ObjectParameter("FlightNumber", flightNumber) :
                new ObjectParameter("FlightNumber", typeof(string));
    
            var documentNoParameter = documentNo != null ?
                new ObjectParameter("DocumentNo", documentNo) :
                new ObjectParameter("DocumentNo", typeof(string));
    
            var paxNameParameter = paxName != null ?
                new ObjectParameter("PaxName", paxName) :
                new ObjectParameter("PaxName", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Noshow_Result>("SP_Noshow", flightdateFromParameter, flightdateToParameter, usagedateFromParameter, usagedateToParameter, flightNumberParameter, documentNoParameter, paxNameParameter, remarksParameter);
        }
    
        public virtual ObjectResult<SP_Noshow_MD_Result> SP_Noshow_MD(Nullable<System.DateTime> flightdateFrom, Nullable<System.DateTime> flightdateTo, Nullable<System.DateTime> usagedateFrom, Nullable<System.DateTime> usagedateTo, string flightNumber, string documentNo, string paxName, string remarks)
        {
            var flightdateFromParameter = flightdateFrom.HasValue ?
                new ObjectParameter("FlightdateFrom", flightdateFrom) :
                new ObjectParameter("FlightdateFrom", typeof(System.DateTime));
    
            var flightdateToParameter = flightdateTo.HasValue ?
                new ObjectParameter("FlightdateTo", flightdateTo) :
                new ObjectParameter("FlightdateTo", typeof(System.DateTime));
    
            var usagedateFromParameter = usagedateFrom.HasValue ?
                new ObjectParameter("UsagedateFrom", usagedateFrom) :
                new ObjectParameter("UsagedateFrom", typeof(System.DateTime));
    
            var usagedateToParameter = usagedateTo.HasValue ?
                new ObjectParameter("UsagedateTo", usagedateTo) :
                new ObjectParameter("UsagedateTo", typeof(System.DateTime));
    
            var flightNumberParameter = flightNumber != null ?
                new ObjectParameter("FlightNumber", flightNumber) :
                new ObjectParameter("FlightNumber", typeof(string));
    
            var documentNoParameter = documentNo != null ?
                new ObjectParameter("DocumentNo", documentNo) :
                new ObjectParameter("DocumentNo", typeof(string));
    
            var paxNameParameter = paxName != null ?
                new ObjectParameter("PaxName", paxName) :
                new ObjectParameter("PaxName", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Noshow_MD_Result>("SP_Noshow_MD", flightdateFromParameter, flightdateToParameter, usagedateFromParameter, usagedateToParameter, flightNumberParameter, documentNoParameter, paxNameParameter, remarksParameter);
        }
    
        public virtual int SP_OutwardBilling_Base()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OutwardBilling_Base");
        }
    
        public virtual int SP_OutwardBilling_Before_Processing()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OutwardBilling_Before_Processing");
        }
    
        public virtual int SP_OutwardBilling_OBValidated(string airlineCode, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string billingPeriod, Nullable<int> selection, string notbilled)
        {
            var airlineCodeParameter = airlineCode != null ?
                new ObjectParameter("AirlineCode", airlineCode) :
                new ObjectParameter("AirlineCode", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var billingPeriodParameter = billingPeriod != null ?
                new ObjectParameter("BillingPeriod", billingPeriod) :
                new ObjectParameter("BillingPeriod", typeof(string));
    
            var selectionParameter = selection.HasValue ?
                new ObjectParameter("selection", selection) :
                new ObjectParameter("selection", typeof(int));
    
            var notbilledParameter = notbilled != null ?
                new ObjectParameter("notbilled", notbilled) :
                new ObjectParameter("notbilled", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OutwardBilling_OBValidated", airlineCodeParameter, fromDateParameter, toDateParameter, billingPeriodParameter, selectionParameter, notbilledParameter);
        }
    
        public virtual ObjectResult<SP_PassengerSalesReport_Result> SP_PassengerSalesReport(Nullable<System.DateTime> issueDate_from, Nullable<System.DateTime> issueDate_to, string agentNumericCode, string bookingAgentIdentification, string bSP)
        {
            var issueDate_fromParameter = issueDate_from.HasValue ?
                new ObjectParameter("IssueDate_from", issueDate_from) :
                new ObjectParameter("IssueDate_from", typeof(System.DateTime));
    
            var issueDate_toParameter = issueDate_to.HasValue ?
                new ObjectParameter("IssueDate_to", issueDate_to) :
                new ObjectParameter("IssueDate_to", typeof(System.DateTime));
    
            var agentNumericCodeParameter = agentNumericCode != null ?
                new ObjectParameter("AgentNumericCode", agentNumericCode) :
                new ObjectParameter("AgentNumericCode", typeof(string));
    
            var bookingAgentIdentificationParameter = bookingAgentIdentification != null ?
                new ObjectParameter("BookingAgentIdentification", bookingAgentIdentification) :
                new ObjectParameter("BookingAgentIdentification", typeof(string));
    
            var bSPParameter = bSP != null ?
                new ObjectParameter("BSP", bSP) :
                new ObjectParameter("BSP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PassengerSalesReport_Result>("SP_PassengerSalesReport", issueDate_fromParameter, issueDate_toParameter, agentNumericCodeParameter, bookingAgentIdentificationParameter, bSPParameter);
        }
    
        public virtual int SP_PCliftCoupon()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PCliftCoupon");
        }
    
        public virtual int SP_PCsynchroFOP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PCsynchroFOP");
        }
    
        public virtual int SP_PCsynchroLiftHeader()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PCsynchroLiftHeader");
        }
    
        public virtual int SP_PCsynchroLiftTax()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PCsynchroLiftTax");
        }
    
        public virtual int SP_PricingManagement(Nullable<System.DateTime> issueDate_from, Nullable<System.DateTime> issueDate_to, string agentNumericCode, Nullable<int> selection, string wEKDAY, Nullable<int> pageNo, Nullable<int> recordsPerPage)
        {
            var issueDate_fromParameter = issueDate_from.HasValue ?
                new ObjectParameter("IssueDate_from", issueDate_from) :
                new ObjectParameter("IssueDate_from", typeof(System.DateTime));
    
            var issueDate_toParameter = issueDate_to.HasValue ?
                new ObjectParameter("IssueDate_to", issueDate_to) :
                new ObjectParameter("IssueDate_to", typeof(System.DateTime));
    
            var agentNumericCodeParameter = agentNumericCode != null ?
                new ObjectParameter("AgentNumericCode", agentNumericCode) :
                new ObjectParameter("AgentNumericCode", typeof(string));
    
            var selectionParameter = selection.HasValue ?
                new ObjectParameter("selection", selection) :
                new ObjectParameter("selection", typeof(int));
    
            var wEKDAYParameter = wEKDAY != null ?
                new ObjectParameter("WEKDAY", wEKDAY) :
                new ObjectParameter("WEKDAY", typeof(string));
    
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var recordsPerPageParameter = recordsPerPage.HasValue ?
                new ObjectParameter("RecordsPerPage", recordsPerPage) :
                new ObjectParameter("RecordsPerPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PricingManagement", issueDate_fromParameter, issueDate_toParameter, agentNumericCodeParameter, selectionParameter, wEKDAYParameter, pageNoParameter, recordsPerPageParameter);
        }
    
        public virtual int SP_ProrationStatus(Nullable<System.DateTime> processingDate_from, Nullable<System.DateTime> processingDate_to, Nullable<int> selection, string prorateStatus, string filename)
        {
            var processingDate_fromParameter = processingDate_from.HasValue ?
                new ObjectParameter("ProcessingDate_from", processingDate_from) :
                new ObjectParameter("ProcessingDate_from", typeof(System.DateTime));
    
            var processingDate_toParameter = processingDate_to.HasValue ?
                new ObjectParameter("ProcessingDate_to", processingDate_to) :
                new ObjectParameter("ProcessingDate_to", typeof(System.DateTime));
    
            var selectionParameter = selection.HasValue ?
                new ObjectParameter("selection", selection) :
                new ObjectParameter("selection", typeof(int));
    
            var prorateStatusParameter = prorateStatus != null ?
                new ObjectParameter("ProrateStatus", prorateStatus) :
                new ObjectParameter("ProrateStatus", typeof(string));
    
            var filenameParameter = filename != null ?
                new ObjectParameter("Filename", filename) :
                new ObjectParameter("Filename", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ProrationStatus", processingDate_fromParameter, processingDate_toParameter, selectionParameter, prorateStatusParameter, filenameParameter);
        }
    
        public virtual ObjectResult<sp_psr_Result> sp_psr()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_psr_Result>("sp_psr");
        }
    
        public virtual ObjectResult<SP_PSR_Key_Elements_Result> SP_PSR_Key_Elements(Nullable<System.DateTime> issueDate_from, Nullable<System.DateTime> issueDate_to, string agentNumericCode)
        {
            var issueDate_fromParameter = issueDate_from.HasValue ?
                new ObjectParameter("IssueDate_from", issueDate_from) :
                new ObjectParameter("IssueDate_from", typeof(System.DateTime));
    
            var issueDate_toParameter = issueDate_to.HasValue ?
                new ObjectParameter("IssueDate_to", issueDate_to) :
                new ObjectParameter("IssueDate_to", typeof(System.DateTime));
    
            var agentNumericCodeParameter = agentNumericCode != null ?
                new ObjectParameter("AgentNumericCode", agentNumericCode) :
                new ObjectParameter("AgentNumericCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PSR_Key_Elements_Result>("SP_PSR_Key_Elements", issueDate_fromParameter, issueDate_toParameter, agentNumericCodeParameter);
        }
    
        public virtual ObjectResult<sp_psr_OfficeTotal_Result> sp_psr_OfficeTotal(Nullable<System.DateTime> issueDate_from, Nullable<System.DateTime> issueDate_to, string agentNumericCode, string bookingAgentIdentification, string bSP)
        {
            var issueDate_fromParameter = issueDate_from.HasValue ?
                new ObjectParameter("IssueDate_from", issueDate_from) :
                new ObjectParameter("IssueDate_from", typeof(System.DateTime));
    
            var issueDate_toParameter = issueDate_to.HasValue ?
                new ObjectParameter("IssueDate_to", issueDate_to) :
                new ObjectParameter("IssueDate_to", typeof(System.DateTime));
    
            var agentNumericCodeParameter = agentNumericCode != null ?
                new ObjectParameter("AgentNumericCode", agentNumericCode) :
                new ObjectParameter("AgentNumericCode", typeof(string));
    
            var bookingAgentIdentificationParameter = bookingAgentIdentification != null ?
                new ObjectParameter("BookingAgentIdentification", bookingAgentIdentification) :
                new ObjectParameter("BookingAgentIdentification", typeof(string));
    
            var bSPParameter = bSP != null ?
                new ObjectParameter("BSP", bSP) :
                new ObjectParameter("BSP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_psr_OfficeTotal_Result>("sp_psr_OfficeTotal", issueDate_fromParameter, issueDate_toParameter, agentNumericCodeParameter, bookingAgentIdentificationParameter, bSPParameter);
        }
    
        public virtual int SP_PSR_Orin_Dest_FareBasis_Analytics(Nullable<System.DateTime> issueDate_from, Nullable<System.DateTime> issueDate_to, string agentNumericCode, Nullable<int> selection)
        {
            var issueDate_fromParameter = issueDate_from.HasValue ?
                new ObjectParameter("IssueDate_from", issueDate_from) :
                new ObjectParameter("IssueDate_from", typeof(System.DateTime));
    
            var issueDate_toParameter = issueDate_to.HasValue ?
                new ObjectParameter("IssueDate_to", issueDate_to) :
                new ObjectParameter("IssueDate_to", typeof(System.DateTime));
    
            var agentNumericCodeParameter = agentNumericCode != null ?
                new ObjectParameter("AgentNumericCode", agentNumericCode) :
                new ObjectParameter("AgentNumericCode", typeof(string));
    
            var selectionParameter = selection.HasValue ?
                new ObjectParameter("selection", selection) :
                new ObjectParameter("selection", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PSR_Orin_Dest_FareBasis_Analytics", issueDate_fromParameter, issueDate_toParameter, agentNumericCodeParameter, selectionParameter);
        }
    
        public virtual ObjectResult<SP_PSR_Passenger_Management_Result> SP_PSR_Passenger_Management(Nullable<System.DateTime> issueDate_from, Nullable<System.DateTime> issueDate_to, string agentNumericCode)
        {
            var issueDate_fromParameter = issueDate_from.HasValue ?
                new ObjectParameter("IssueDate_from", issueDate_from) :
                new ObjectParameter("IssueDate_from", typeof(System.DateTime));
    
            var issueDate_toParameter = issueDate_to.HasValue ?
                new ObjectParameter("IssueDate_to", issueDate_to) :
                new ObjectParameter("IssueDate_to", typeof(System.DateTime));
    
            var agentNumericCodeParameter = agentNumericCode != null ?
                new ObjectParameter("AgentNumericCode", agentNumericCode) :
                new ObjectParameter("AgentNumericCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PSR_Passenger_Management_Result>("SP_PSR_Passenger_Management", issueDate_fromParameter, issueDate_toParameter, agentNumericCodeParameter);
        }
    
        public virtual ObjectResult<SP_QRYlift_Result> SP_QRYlift(string flt, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string airline, string doctype)
        {
            var fltParameter = flt != null ?
                new ObjectParameter("flt", flt) :
                new ObjectParameter("flt", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var airlineParameter = airline != null ?
                new ObjectParameter("airline", airline) :
                new ObjectParameter("airline", typeof(string));
    
            var doctypeParameter = doctype != null ?
                new ObjectParameter("doctype", doctype) :
                new ObjectParameter("doctype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_QRYlift_Result>("SP_QRYlift", fltParameter, startDateParameter, endDateParameter, airlineParameter, doctypeParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> SP_QRYliftDateToAdj(string flt, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string airline, string doctype)
        {
            var fltParameter = flt != null ?
                new ObjectParameter("flt", flt) :
                new ObjectParameter("flt", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var airlineParameter = airline != null ?
                new ObjectParameter("airline", airline) :
                new ObjectParameter("airline", typeof(string));
    
            var doctypeParameter = doctype != null ?
                new ObjectParameter("doctype", doctype) :
                new ObjectParameter("doctype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("SP_QRYliftDateToAdj", fltParameter, startDateParameter, endDateParameter, airlineParameter, doctypeParameter);
        }
    
        public virtual ObjectResult<SP_RefundOAL_Result> SP_RefundOAL(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string own)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var ownParameter = own != null ?
                new ObjectParameter("Own", own) :
                new ObjectParameter("Own", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_RefundOAL_Result>("SP_RefundOAL", dateFromParameter, dateToParameter, ownParameter);
        }
    
        public virtual int SP_SalesAmount(Nullable<System.DateTime> issueDateFrom, Nullable<System.DateTime> issueDateTo, string documentNumber, string salesDataAvailable, string fbsFlag, Nullable<System.Guid> hdrGuid, string option)
        {
            var issueDateFromParameter = issueDateFrom.HasValue ?
                new ObjectParameter("IssueDateFrom", issueDateFrom) :
                new ObjectParameter("IssueDateFrom", typeof(System.DateTime));
    
            var issueDateToParameter = issueDateTo.HasValue ?
                new ObjectParameter("IssueDateTo", issueDateTo) :
                new ObjectParameter("IssueDateTo", typeof(System.DateTime));
    
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("DocumentNumber", documentNumber) :
                new ObjectParameter("DocumentNumber", typeof(string));
    
            var salesDataAvailableParameter = salesDataAvailable != null ?
                new ObjectParameter("SalesDataAvailable", salesDataAvailable) :
                new ObjectParameter("SalesDataAvailable", typeof(string));
    
            var fbsFlagParameter = fbsFlag != null ?
                new ObjectParameter("FbsFlag", fbsFlag) :
                new ObjectParameter("FbsFlag", typeof(string));
    
            var hdrGuidParameter = hdrGuid.HasValue ?
                new ObjectParameter("HdrGuid", hdrGuid) :
                new ObjectParameter("HdrGuid", typeof(System.Guid));
    
            var optionParameter = option != null ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SalesAmount", issueDateFromParameter, issueDateToParameter, documentNumberParameter, salesDataAvailableParameter, fbsFlagParameter, hdrGuidParameter, optionParameter);
        }
    
        public virtual int SP_SalesDetailsSummary(string documentNumber, string passengerName, string agentNumericCode, Nullable<System.DateTime> dateOfIssue_From, Nullable<System.DateTime> dateOfIssue_To, string transactionCode)
        {
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("DocumentNumber", documentNumber) :
                new ObjectParameter("DocumentNumber", typeof(string));
    
            var passengerNameParameter = passengerName != null ?
                new ObjectParameter("PassengerName", passengerName) :
                new ObjectParameter("PassengerName", typeof(string));
    
            var agentNumericCodeParameter = agentNumericCode != null ?
                new ObjectParameter("AgentNumericCode", agentNumericCode) :
                new ObjectParameter("AgentNumericCode", typeof(string));
    
            var dateOfIssue_FromParameter = dateOfIssue_From.HasValue ?
                new ObjectParameter("DateOfIssue_From", dateOfIssue_From) :
                new ObjectParameter("DateOfIssue_From", typeof(System.DateTime));
    
            var dateOfIssue_ToParameter = dateOfIssue_To.HasValue ?
                new ObjectParameter("DateOfIssue_To", dateOfIssue_To) :
                new ObjectParameter("DateOfIssue_To", typeof(System.DateTime));
    
            var transactionCodeParameter = transactionCode != null ?
                new ObjectParameter("TransactionCode", transactionCode) :
                new ObjectParameter("TransactionCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SalesDetailsSummary", documentNumberParameter, passengerNameParameter, agentNumericCodeParameter, dateOfIssue_FromParameter, dateOfIssue_ToParameter, transactionCodeParameter);
        }
    
        public virtual int SP_SalesDocumentCoupon()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SalesDocumentCoupon");
        }
    
        public virtual int SP_SalesDocumentOtherAmount1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SalesDocumentOtherAmount1");
        }
    
        public virtual int SP_SalesDocumentPayment()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SalesDocumentPayment");
        }
    
        public virtual ObjectResult<SP_SalesFlownMatch_Result> SP_SalesFlownMatch(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string matchStatus, string agentCode, string paxName, string fBS, string docNum, string flt)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            var matchStatusParameter = matchStatus != null ?
                new ObjectParameter("matchStatus", matchStatus) :
                new ObjectParameter("matchStatus", typeof(string));
    
            var agentCodeParameter = agentCode != null ?
                new ObjectParameter("agentCode", agentCode) :
                new ObjectParameter("agentCode", typeof(string));
    
            var paxNameParameter = paxName != null ?
                new ObjectParameter("paxName", paxName) :
                new ObjectParameter("paxName", typeof(string));
    
            var fBSParameter = fBS != null ?
                new ObjectParameter("FBS", fBS) :
                new ObjectParameter("FBS", typeof(string));
    
            var docNumParameter = docNum != null ?
                new ObjectParameter("DocNum", docNum) :
                new ObjectParameter("DocNum", typeof(string));
    
            var fltParameter = flt != null ?
                new ObjectParameter("flt", flt) :
                new ObjectParameter("flt", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SalesFlownMatch_Result>("SP_SalesFlownMatch", dateFromParameter, dateToParameter, matchStatusParameter, agentCodeParameter, paxNameParameter, fBSParameter, docNumParameter, fltParameter);
        }
    
        public virtual ObjectResult<SP_SalesMatch_Result> SP_SalesMatch(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SalesMatch_Result>("SP_SalesMatch", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<SP_SalesSummarry_Result> SP_SalesSummarry(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string transactiongroup)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var transactiongroupParameter = transactiongroup != null ?
                new ObjectParameter("transactiongroup", transactiongroup) :
                new ObjectParameter("transactiongroup", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SalesSummarry_Result>("SP_SalesSummarry", fromDateParameter, toDateParameter, transactiongroupParameter);
        }
    
        public virtual ObjectResult<SP_SalesTransactionByType_Result> SP_SalesTransactionByType(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string transactionType)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var transactionTypeParameter = transactionType != null ?
                new ObjectParameter("TransactionType", transactionType) :
                new ObjectParameter("TransactionType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SalesTransactionByType_Result>("SP_SalesTransactionByType", fromDateParameter, toDateParameter, transactionTypeParameter);
        }
    
        public virtual ObjectResult<SP_SlashPSR_Result> SP_SlashPSR(Nullable<System.DateTime> issueDate_from, Nullable<System.DateTime> issueDate_to, string agentNumericCode, string bookingAgentIdentification, string bSP)
        {
            var issueDate_fromParameter = issueDate_from.HasValue ?
                new ObjectParameter("IssueDate_from", issueDate_from) :
                new ObjectParameter("IssueDate_from", typeof(System.DateTime));
    
            var issueDate_toParameter = issueDate_to.HasValue ?
                new ObjectParameter("IssueDate_to", issueDate_to) :
                new ObjectParameter("IssueDate_to", typeof(System.DateTime));
    
            var agentNumericCodeParameter = agentNumericCode != null ?
                new ObjectParameter("AgentNumericCode", agentNumericCode) :
                new ObjectParameter("AgentNumericCode", typeof(string));
    
            var bookingAgentIdentificationParameter = bookingAgentIdentification != null ?
                new ObjectParameter("BookingAgentIdentification", bookingAgentIdentification) :
                new ObjectParameter("BookingAgentIdentification", typeof(string));
    
            var bSPParameter = bSP != null ?
                new ObjectParameter("BSP", bSP) :
                new ObjectParameter("BSP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SlashPSR_Result>("SP_SlashPSR", issueDate_fromParameter, issueDate_toParameter, agentNumericCodeParameter, bookingAgentIdentificationParameter, bSPParameter);
        }
    
        public virtual ObjectResult<SP_SlashPSR_TranxCode_Summary_Result> SP_SlashPSR_TranxCode_Summary(Nullable<System.DateTime> issueDate_from, Nullable<System.DateTime> issueDate_to, string agentNumericCode, string bookingAgentIdentification, string bSP)
        {
            var issueDate_fromParameter = issueDate_from.HasValue ?
                new ObjectParameter("IssueDate_from", issueDate_from) :
                new ObjectParameter("IssueDate_from", typeof(System.DateTime));
    
            var issueDate_toParameter = issueDate_to.HasValue ?
                new ObjectParameter("IssueDate_to", issueDate_to) :
                new ObjectParameter("IssueDate_to", typeof(System.DateTime));
    
            var agentNumericCodeParameter = agentNumericCode != null ?
                new ObjectParameter("AgentNumericCode", agentNumericCode) :
                new ObjectParameter("AgentNumericCode", typeof(string));
    
            var bookingAgentIdentificationParameter = bookingAgentIdentification != null ?
                new ObjectParameter("BookingAgentIdentification", bookingAgentIdentification) :
                new ObjectParameter("BookingAgentIdentification", typeof(string));
    
            var bSPParameter = bSP != null ?
                new ObjectParameter("BSP", bSP) :
                new ObjectParameter("BSP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SlashPSR_TranxCode_Summary_Result>("SP_SlashPSR_TranxCode_Summary", issueDate_fromParameter, issueDate_toParameter, agentNumericCodeParameter, bookingAgentIdentificationParameter, bSPParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_SLS_Flights()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_SLS_Flights");
        }
    
        public virtual ObjectResult<SP_SLSqryDate_Result> SP_SLSqryDate(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string flt, string sector)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var fltParameter = flt != null ?
                new ObjectParameter("Flt", flt) :
                new ObjectParameter("Flt", typeof(string));
    
            var sectorParameter = sector != null ?
                new ObjectParameter("Sector", sector) :
                new ObjectParameter("Sector", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SLSqryDate_Result>("SP_SLSqryDate", fromDateParameter, toDateParameter, fltParameter, sectorParameter);
        }
    
        public virtual int SP_SLSvLIFT(Nullable<System.DateTime> fromUsageDate, Nullable<System.DateTime> toUsageDate, string flightNumber, Nullable<int> selection)
        {
            var fromUsageDateParameter = fromUsageDate.HasValue ?
                new ObjectParameter("FromUsageDate", fromUsageDate) :
                new ObjectParameter("FromUsageDate", typeof(System.DateTime));
    
            var toUsageDateParameter = toUsageDate.HasValue ?
                new ObjectParameter("ToUsageDate", toUsageDate) :
                new ObjectParameter("ToUsageDate", typeof(System.DateTime));
    
            var flightNumberParameter = flightNumber != null ?
                new ObjectParameter("FlightNumber", flightNumber) :
                new ObjectParameter("FlightNumber", typeof(string));
    
            var selectionParameter = selection.HasValue ?
                new ObjectParameter("selection", selection) :
                new ObjectParameter("selection", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SLSvLIFT", fromUsageDateParameter, toUsageDateParameter, flightNumberParameter, selectionParameter);
        }
    
        public virtual ObjectResult<SP_Tax_By_Coupon_Level_And_Surcharge_Result> SP_Tax_By_Coupon_Level_And_Surcharge(Nullable<System.DateTime> salesDate_From, Nullable<System.DateTime> salesDate_To, string documentType, string agentNumCode, string docNum)
        {
            var salesDate_FromParameter = salesDate_From.HasValue ?
                new ObjectParameter("SalesDate_From", salesDate_From) :
                new ObjectParameter("SalesDate_From", typeof(System.DateTime));
    
            var salesDate_ToParameter = salesDate_To.HasValue ?
                new ObjectParameter("SalesDate_To", salesDate_To) :
                new ObjectParameter("SalesDate_To", typeof(System.DateTime));
    
            var documentTypeParameter = documentType != null ?
                new ObjectParameter("DocumentType", documentType) :
                new ObjectParameter("DocumentType", typeof(string));
    
            var agentNumCodeParameter = agentNumCode != null ?
                new ObjectParameter("AgentNumCode", agentNumCode) :
                new ObjectParameter("AgentNumCode", typeof(string));
    
            var docNumParameter = docNum != null ?
                new ObjectParameter("DocNum", docNum) :
                new ObjectParameter("DocNum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Tax_By_Coupon_Level_And_Surcharge_Result>("SP_Tax_By_Coupon_Level_And_Surcharge", salesDate_FromParameter, salesDate_ToParameter, documentTypeParameter, agentNumCodeParameter, docNumParameter);
        }
    
        public virtual int SP_TaxCompare(string remarks, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string documentNumber, string agentNumericCode)
        {
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("DocumentNumber", documentNumber) :
                new ObjectParameter("DocumentNumber", typeof(string));
    
            var agentNumericCodeParameter = agentNumericCode != null ?
                new ObjectParameter("AgentNumericCode", agentNumericCode) :
                new ObjectParameter("AgentNumericCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_TaxCompare", remarksParameter, dateFromParameter, dateToParameter, documentNumberParameter, agentNumericCodeParameter);
        }
    
        public virtual ObjectResult<SP_TaxSalesTkts_Result> SP_TaxSalesTkts(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string docType, string agentNumCode)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            var docTypeParameter = docType != null ?
                new ObjectParameter("DocType", docType) :
                new ObjectParameter("DocType", typeof(string));
    
            var agentNumCodeParameter = agentNumCode != null ?
                new ObjectParameter("AgentNumCode", agentNumCode) :
                new ObjectParameter("AgentNumCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TaxSalesTkts_Result>("SP_TaxSalesTkts", fromDateParameter, toDateParameter, docTypeParameter, agentNumCodeParameter);
        }
    
        public virtual ObjectResult<SP_TFCflown_Result> SP_TFCflown(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string agentNumCode, string flightNum)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            var agentNumCodeParameter = agentNumCode != null ?
                new ObjectParameter("AgentNumCode", agentNumCode) :
                new ObjectParameter("AgentNumCode", typeof(string));
    
            var flightNumParameter = flightNum != null ?
                new ObjectParameter("FlightNum", flightNum) :
                new ObjectParameter("FlightNum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TFCflown_Result>("SP_TFCflown", dateFromParameter, dateToParameter, agentNumCodeParameter, flightNumParameter);
        }
    
        public virtual ObjectResult<SP_Ticket_No_Fare_Collected_Result> SP_Ticket_No_Fare_Collected(Nullable<System.DateTime> dateofIssue_From, Nullable<System.DateTime> dateofIssue_To, string agentNumericCode, Nullable<int> pageNo, Nullable<int> recordsPerPage)
        {
            var dateofIssue_FromParameter = dateofIssue_From.HasValue ?
                new ObjectParameter("DateofIssue_From", dateofIssue_From) :
                new ObjectParameter("DateofIssue_From", typeof(System.DateTime));
    
            var dateofIssue_ToParameter = dateofIssue_To.HasValue ?
                new ObjectParameter("DateofIssue_To", dateofIssue_To) :
                new ObjectParameter("DateofIssue_To", typeof(System.DateTime));
    
            var agentNumericCodeParameter = agentNumericCode != null ?
                new ObjectParameter("AgentNumericCode", agentNumericCode) :
                new ObjectParameter("AgentNumericCode", typeof(string));
    
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var recordsPerPageParameter = recordsPerPage.HasValue ?
                new ObjectParameter("RecordsPerPage", recordsPerPage) :
                new ObjectParameter("RecordsPerPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Ticket_No_Fare_Collected_Result>("SP_Ticket_No_Fare_Collected", dateofIssue_FromParameter, dateofIssue_ToParameter, agentNumericCodeParameter, pageNoParameter, recordsPerPageParameter);
        }
    
        public virtual ObjectResult<SP_TotallyandPartiallyUnusedTickets_Result> SP_TotallyandPartiallyUnusedTickets(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string unusedCategory)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var unusedCategoryParameter = unusedCategory != null ?
                new ObjectParameter("UnusedCategory", unusedCategory) :
                new ObjectParameter("UnusedCategory", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TotallyandPartiallyUnusedTickets_Result>("SP_TotallyandPartiallyUnusedTickets", fromDateParameter, toDateParameter, unusedCategoryParameter);
        }
    
        public virtual int SP_UpdateCouponsFromLift()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateCouponsFromLift");
        }
    
        public virtual ObjectResult<string> SP_UPLIFTlistFlts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_UPLIFTlistFlts");
        }
    
        public virtual int SP_UsagevBooking(Nullable<System.DateTime> fromUsageDate, Nullable<System.DateTime> toUsageDate, Nullable<int> selection, string farebasis)
        {
            var fromUsageDateParameter = fromUsageDate.HasValue ?
                new ObjectParameter("FromUsageDate", fromUsageDate) :
                new ObjectParameter("FromUsageDate", typeof(System.DateTime));
    
            var toUsageDateParameter = toUsageDate.HasValue ?
                new ObjectParameter("ToUsageDate", toUsageDate) :
                new ObjectParameter("ToUsageDate", typeof(System.DateTime));
    
            var selectionParameter = selection.HasValue ?
                new ObjectParameter("selection", selection) :
                new ObjectParameter("selection", typeof(int));
    
            var farebasisParameter = farebasis != null ?
                new ObjectParameter("Farebasis", farebasis) :
                new ObjectParameter("Farebasis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UsagevBooking", fromUsageDateParameter, toUsageDateParameter, selectionParameter, farebasisParameter);
        }
    
        public virtual ObjectResult<SP_VatDetails_Result> SP_VatDetails(string periodFrom, string periodTo, string agent)
        {
            var periodFromParameter = periodFrom != null ?
                new ObjectParameter("periodFrom", periodFrom) :
                new ObjectParameter("periodFrom", typeof(string));
    
            var periodToParameter = periodTo != null ?
                new ObjectParameter("periodTo", periodTo) :
                new ObjectParameter("periodTo", typeof(string));
    
            var agentParameter = agent != null ?
                new ObjectParameter("agent", agent) :
                new ObjectParameter("agent", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_VatDetails_Result>("SP_VatDetails", periodFromParameter, periodToParameter, agentParameter);
        }
    
        public virtual ObjectResult<SPagent4FCsimile_Result> SPagent4FCsimile(string agentCode)
        {
            var agentCodeParameter = agentCode != null ?
                new ObjectParameter("agentCode", agentCode) :
                new ObjectParameter("agentCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPagent4FCsimile_Result>("SPagent4FCsimile", agentCodeParameter);
        }
    
        public virtual ObjectResult<SPanalysisBYExchange_Result> SPanalysisBYExchange(string periodFrom, string periodTo)
        {
            var periodFromParameter = periodFrom != null ?
                new ObjectParameter("PeriodFrom", periodFrom) :
                new ObjectParameter("PeriodFrom", typeof(string));
    
            var periodToParameter = periodTo != null ?
                new ObjectParameter("PeriodTo", periodTo) :
                new ObjectParameter("PeriodTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPanalysisBYExchange_Result>("SPanalysisBYExchange", periodFromParameter, periodToParameter);
        }
    
        public virtual ObjectResult<SPanalysisBYfop_Result> SPanalysisBYfop(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPanalysisBYfop_Result>("SPanalysisBYfop", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<SPanalysisBYRBDFareBasis_Result> SPanalysisBYRBDFareBasis()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPanalysisBYRBDFareBasis_Result>("SPanalysisBYRBDFareBasis");
        }
    
        public virtual ObjectResult<SPFiveDayRate_Result> SPFiveDayRate(string period, string country, string currency)
        {
            var periodParameter = period != null ?
                new ObjectParameter("period", period) :
                new ObjectParameter("period", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("country", country) :
                new ObjectParameter("country", typeof(string));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("currency", currency) :
                new ObjectParameter("currency", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPFiveDayRate_Result>("SPFiveDayRate", periodParameter, countryParameter, currencyParameter);
        }
    
        public virtual ObjectResult<SPgetConjuction4tkt_Result> SPgetConjuction4tkt(string docnumber)
        {
            var docnumberParameter = docnumber != null ?
                new ObjectParameter("docnumber", docnumber) :
                new ObjectParameter("docnumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPgetConjuction4tkt_Result>("SPgetConjuction4tkt", docnumberParameter);
        }
    
        public virtual ObjectResult<SPgetCPNdetails_Result> SPgetCPNdetails(string relDocGuid)
        {
            var relDocGuidParameter = relDocGuid != null ?
                new ObjectParameter("relDocGuid", relDocGuid) :
                new ObjectParameter("relDocGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPgetCPNdetails_Result>("SPgetCPNdetails", relDocGuidParameter);
        }
    
        public virtual ObjectResult<SPgetTkTdetails_Result> SPgetTkTdetails(string documentNo)
        {
            var documentNoParameter = documentNo != null ?
                new ObjectParameter("DocumentNo", documentNo) :
                new ObjectParameter("DocumentNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPgetTkTdetails_Result>("SPgetTkTdetails", documentNoParameter);
        }
    
        public virtual ObjectResult<SPMMR_Result> SPMMR(string period)
        {
            var periodParameter = period != null ?
                new ObjectParameter("period", period) :
                new ObjectParameter("period", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPMMR_Result>("SPMMR", periodParameter);
        }
    
        public virtual ObjectResult<SPProrateFactor_Result> SPProrateFactor(string orgCityName, string orgCountryName, string destCityName, string destCountryName, Nullable<System.DateTime> validity)
        {
            var orgCityNameParameter = orgCityName != null ?
                new ObjectParameter("OrgCityName", orgCityName) :
                new ObjectParameter("OrgCityName", typeof(string));
    
            var orgCountryNameParameter = orgCountryName != null ?
                new ObjectParameter("OrgCountryName", orgCountryName) :
                new ObjectParameter("OrgCountryName", typeof(string));
    
            var destCityNameParameter = destCityName != null ?
                new ObjectParameter("DestCityName", destCityName) :
                new ObjectParameter("DestCityName", typeof(string));
    
            var destCountryNameParameter = destCountryName != null ?
                new ObjectParameter("DestCountryName", destCountryName) :
                new ObjectParameter("DestCountryName", typeof(string));
    
            var validityParameter = validity.HasValue ?
                new ObjectParameter("Validity", validity) :
                new ObjectParameter("Validity", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPProrateFactor_Result>("SPProrateFactor", orgCityNameParameter, orgCountryNameParameter, destCityNameParameter, destCountryNameParameter, validityParameter);
        }
    
        public virtual int spQuerySalesHeader(string issueDate, string ticketNumber, string agentCode, string pnr)
        {
            var issueDateParameter = issueDate != null ?
                new ObjectParameter("issueDate", issueDate) :
                new ObjectParameter("issueDate", typeof(string));
    
            var ticketNumberParameter = ticketNumber != null ?
                new ObjectParameter("ticketNumber", ticketNumber) :
                new ObjectParameter("ticketNumber", typeof(string));
    
            var agentCodeParameter = agentCode != null ?
                new ObjectParameter("agentCode", agentCode) :
                new ObjectParameter("agentCode", typeof(string));
    
            var pnrParameter = pnr != null ?
                new ObjectParameter("pnr", pnr) :
                new ObjectParameter("pnr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spQuerySalesHeader", issueDateParameter, ticketNumberParameter, agentCodeParameter, pnrParameter);
        }
    
        public virtual ObjectResult<UspSalesAmountTFC_Result> UspSalesAmountTFC(Nullable<System.Guid> uploadedRef)
        {
            var uploadedRefParameter = uploadedRef.HasValue ?
                new ObjectParameter("uploadedRef", uploadedRef) :
                new ObjectParameter("uploadedRef", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspSalesAmountTFC_Result>("UspSalesAmountTFC", uploadedRefParameter);
        }
    
        public virtual ObjectResult<UspSalesBillingRemittance_Result> UspSalesBillingRemittance(Nullable<System.Guid> uploadedRef)
        {
            var uploadedRefParameter = uploadedRef.HasValue ?
                new ObjectParameter("uploadedRef", uploadedRef) :
                new ObjectParameter("uploadedRef", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspSalesBillingRemittance_Result>("UspSalesBillingRemittance", uploadedRefParameter);
        }
    
        public virtual ObjectResult<UspSalesTranRemittance_Result> UspSalesTranRemittance(Nullable<System.Guid> uploadedRef)
        {
            var uploadedRefParameter = uploadedRef.HasValue ?
                new ObjectParameter("uploadedRef", uploadedRef) :
                new ObjectParameter("uploadedRef", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspSalesTranRemittance_Result>("UspSalesTranRemittance", uploadedRefParameter);
        }
    
        public virtual ObjectResult<UspSalesTrnCount_Result> UspSalesTrnCount(Nullable<System.Guid> uploadedRef)
        {
            var uploadedRefParameter = uploadedRef.HasValue ?
                new ObjectParameter("uploadedRef", uploadedRef) :
                new ObjectParameter("uploadedRef", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspSalesTrnCount_Result>("UspSalesTrnCount", uploadedRefParameter);
        }
    
        public virtual int UspUpdateHeaderSalesAfterFlown(Nullable<System.Guid> hdrGuid, Nullable<System.Guid> uploadGuid)
        {
            var hdrGuidParameter = hdrGuid.HasValue ?
                new ObjectParameter("HdrGuid", hdrGuid) :
                new ObjectParameter("HdrGuid", typeof(System.Guid));
    
            var uploadGuidParameter = uploadGuid.HasValue ?
                new ObjectParameter("UploadGuid", uploadGuid) :
                new ObjectParameter("UploadGuid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UspUpdateHeaderSalesAfterFlown", hdrGuidParameter, uploadGuidParameter);
        }
    
        public virtual int UspUpdateTicketUsageInformation(string relatedDocumentNumber, Nullable<int> couponNumber, string usageAirline, Nullable<System.DateTime> usageDate, string usageFlightNumber, string usageOriginCode, string usageDestinationCode, string usedClassofService, string settlementAuthorizationCode, string usageType)
        {
            var relatedDocumentNumberParameter = relatedDocumentNumber != null ?
                new ObjectParameter("RelatedDocumentNumber", relatedDocumentNumber) :
                new ObjectParameter("RelatedDocumentNumber", typeof(string));
    
            var couponNumberParameter = couponNumber.HasValue ?
                new ObjectParameter("CouponNumber", couponNumber) :
                new ObjectParameter("CouponNumber", typeof(int));
    
            var usageAirlineParameter = usageAirline != null ?
                new ObjectParameter("UsageAirline", usageAirline) :
                new ObjectParameter("UsageAirline", typeof(string));
    
            var usageDateParameter = usageDate.HasValue ?
                new ObjectParameter("UsageDate", usageDate) :
                new ObjectParameter("UsageDate", typeof(System.DateTime));
    
            var usageFlightNumberParameter = usageFlightNumber != null ?
                new ObjectParameter("UsageFlightNumber", usageFlightNumber) :
                new ObjectParameter("UsageFlightNumber", typeof(string));
    
            var usageOriginCodeParameter = usageOriginCode != null ?
                new ObjectParameter("UsageOriginCode", usageOriginCode) :
                new ObjectParameter("UsageOriginCode", typeof(string));
    
            var usageDestinationCodeParameter = usageDestinationCode != null ?
                new ObjectParameter("UsageDestinationCode", usageDestinationCode) :
                new ObjectParameter("UsageDestinationCode", typeof(string));
    
            var usedClassofServiceParameter = usedClassofService != null ?
                new ObjectParameter("UsedClassofService", usedClassofService) :
                new ObjectParameter("UsedClassofService", typeof(string));
    
            var settlementAuthorizationCodeParameter = settlementAuthorizationCode != null ?
                new ObjectParameter("SettlementAuthorizationCode", settlementAuthorizationCode) :
                new ObjectParameter("SettlementAuthorizationCode", typeof(string));
    
            var usageTypeParameter = usageType != null ?
                new ObjectParameter("usageType", usageType) :
                new ObjectParameter("usageType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UspUpdateTicketUsageInformation", relatedDocumentNumberParameter, couponNumberParameter, usageAirlineParameter, usageDateParameter, usageFlightNumberParameter, usageOriginCodeParameter, usageDestinationCodeParameter, usedClassofServiceParameter, settlementAuthorizationCodeParameter, usageTypeParameter);
        }
    
        public virtual int SP_InsertPaxFromPNL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_InsertPaxFromPNL");
        }
    
        public virtual ObjectResult<AdjustmentAnalytics_prorate_Result> AdjustmentAnalytics_prorate(string period, string documentNumber)
        {
            var periodParameter = period != null ?
                new ObjectParameter("period", period) :
                new ObjectParameter("period", typeof(string));
    
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("DocumentNumber", documentNumber) :
                new ObjectParameter("DocumentNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdjustmentAnalytics_prorate_Result>("AdjustmentAnalytics_prorate", periodParameter, documentNumberParameter);
        }
    
        public virtual ObjectResult<AdjustmentAnalytics_prorate_perCoupon_Result> AdjustmentAnalytics_prorate_perCoupon(string period, string documentNumber, string iCouponNumber)
        {
            var periodParameter = period != null ?
                new ObjectParameter("period", period) :
                new ObjectParameter("period", typeof(string));
    
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("DocumentNumber", documentNumber) :
                new ObjectParameter("DocumentNumber", typeof(string));
    
            var iCouponNumberParameter = iCouponNumber != null ?
                new ObjectParameter("iCouponNumber", iCouponNumber) :
                new ObjectParameter("iCouponNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdjustmentAnalytics_prorate_perCoupon_Result>("AdjustmentAnalytics_prorate_perCoupon", periodParameter, documentNumberParameter, iCouponNumberParameter);
        }
    
        public virtual int AfterProration(Nullable<System.DateTime> batchID)
        {
            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AfterProration", batchIDParameter);
        }
    
        public virtual int AfterProration_(Nullable<System.DateTime> batchID)
        {
            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AfterProration_", batchIDParameter);
        }
    
        public virtual ObjectResult<CouponsNotToBeProrated_Result> CouponsNotToBeProrated()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CouponsNotToBeProrated_Result>("CouponsNotToBeProrated");
        }
    
        public virtual ObjectResult<CouponsToBeProrated_Result> CouponsToBeProrated(string periodClearance, Nullable<System.DateTime> datePFrom, Nullable<System.DateTime> datePTo, Nullable<System.DateTime> dateIFrom, Nullable<System.DateTime> dateITo)
        {
            var periodClearanceParameter = periodClearance != null ?
                new ObjectParameter("periodClearance", periodClearance) :
                new ObjectParameter("periodClearance", typeof(string));
    
            var datePFromParameter = datePFrom.HasValue ?
                new ObjectParameter("datePFrom", datePFrom) :
                new ObjectParameter("datePFrom", typeof(System.DateTime));
    
            var datePToParameter = datePTo.HasValue ?
                new ObjectParameter("datePTo", datePTo) :
                new ObjectParameter("datePTo", typeof(System.DateTime));
    
            var dateIFromParameter = dateIFrom.HasValue ?
                new ObjectParameter("dateIFrom", dateIFrom) :
                new ObjectParameter("dateIFrom", typeof(System.DateTime));
    
            var dateIToParameter = dateITo.HasValue ?
                new ObjectParameter("dateITo", dateITo) :
                new ObjectParameter("dateITo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CouponsToBeProrated_Result>("CouponsToBeProrated", periodClearanceParameter, datePFromParameter, datePToParameter, dateIFromParameter, dateIToParameter);
        }
    
        public virtual ObjectResult<InwardBillingProration_Result> InwardBillingProration(string period, string documentNumber, string iCouponNumber)
        {
            var periodParameter = period != null ?
                new ObjectParameter("period", period) :
                new ObjectParameter("period", typeof(string));
    
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("DocumentNumber", documentNumber) :
                new ObjectParameter("DocumentNumber", typeof(string));
    
            var iCouponNumberParameter = iCouponNumber != null ?
                new ObjectParameter("iCouponNumber", iCouponNumber) :
                new ObjectParameter("iCouponNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InwardBillingProration_Result>("InwardBillingProration", periodParameter, documentNumberParameter, iCouponNumberParameter);
        }
    
        public virtual ObjectResult<OB_prorate_Result> OB_prorate(string period, string airlineCode)
        {
            var periodParameter = period != null ?
                new ObjectParameter("period", period) :
                new ObjectParameter("period", typeof(string));
    
            var airlineCodeParameter = airlineCode != null ?
                new ObjectParameter("AirlineCode", airlineCode) :
                new ObjectParameter("AirlineCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OB_prorate_Result>("OB_prorate", periodParameter, airlineCodeParameter);
        }
    
        public virtual int OB_updateDetails(string prorationFlag, string sectorOrigin, string sectorDestination, string sectorCarrier, string sourceType, string currency, Nullable<decimal> prorateFactor, Nullable<decimal> prorateValue, Nullable<decimal> straightRateProrate, Nullable<decimal> specialProrateAgreement, Nullable<decimal> differentials, Nullable<decimal> surcharge, Nullable<decimal> finalShare, Nullable<decimal> taxesFeesCharges, Nullable<decimal> baseAmount, Nullable<decimal> iscPercent, Nullable<decimal> iscAmount, Nullable<decimal> handlingFeeAmt, Nullable<decimal> otherCommissions, Nullable<decimal> taxAmount, Nullable<int> couponNumber, Nullable<decimal> uatpAmount, Nullable<int> fareComponent, string documentNumber, Nullable<decimal> rOE, Nullable<System.Guid> relatedDocumentGuid)
        {
            var prorationFlagParameter = prorationFlag != null ?
                new ObjectParameter("prorationFlag", prorationFlag) :
                new ObjectParameter("prorationFlag", typeof(string));
    
            var sectorOriginParameter = sectorOrigin != null ?
                new ObjectParameter("SectorOrigin", sectorOrigin) :
                new ObjectParameter("SectorOrigin", typeof(string));
    
            var sectorDestinationParameter = sectorDestination != null ?
                new ObjectParameter("SectorDestination", sectorDestination) :
                new ObjectParameter("SectorDestination", typeof(string));
    
            var sectorCarrierParameter = sectorCarrier != null ?
                new ObjectParameter("SectorCarrier", sectorCarrier) :
                new ObjectParameter("SectorCarrier", typeof(string));
    
            var sourceTypeParameter = sourceType != null ?
                new ObjectParameter("SourceType", sourceType) :
                new ObjectParameter("SourceType", typeof(string));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            var prorateFactorParameter = prorateFactor.HasValue ?
                new ObjectParameter("prorateFactor", prorateFactor) :
                new ObjectParameter("prorateFactor", typeof(decimal));
    
            var prorateValueParameter = prorateValue.HasValue ?
                new ObjectParameter("prorateValue", prorateValue) :
                new ObjectParameter("prorateValue", typeof(decimal));
    
            var straightRateProrateParameter = straightRateProrate.HasValue ?
                new ObjectParameter("StraightRateProrate", straightRateProrate) :
                new ObjectParameter("StraightRateProrate", typeof(decimal));
    
            var specialProrateAgreementParameter = specialProrateAgreement.HasValue ?
                new ObjectParameter("SpecialProrateAgreement", specialProrateAgreement) :
                new ObjectParameter("SpecialProrateAgreement", typeof(decimal));
    
            var differentialsParameter = differentials.HasValue ?
                new ObjectParameter("Differentials", differentials) :
                new ObjectParameter("Differentials", typeof(decimal));
    
            var surchargeParameter = surcharge.HasValue ?
                new ObjectParameter("Surcharge", surcharge) :
                new ObjectParameter("Surcharge", typeof(decimal));
    
            var finalShareParameter = finalShare.HasValue ?
                new ObjectParameter("FinalShare", finalShare) :
                new ObjectParameter("FinalShare", typeof(decimal));
    
            var taxesFeesChargesParameter = taxesFeesCharges.HasValue ?
                new ObjectParameter("TaxesFeesCharges", taxesFeesCharges) :
                new ObjectParameter("TaxesFeesCharges", typeof(decimal));
    
            var baseAmountParameter = baseAmount.HasValue ?
                new ObjectParameter("BaseAmount", baseAmount) :
                new ObjectParameter("BaseAmount", typeof(decimal));
    
            var iscPercentParameter = iscPercent.HasValue ?
                new ObjectParameter("IscPercent", iscPercent) :
                new ObjectParameter("IscPercent", typeof(decimal));
    
            var iscAmountParameter = iscAmount.HasValue ?
                new ObjectParameter("IscAmount", iscAmount) :
                new ObjectParameter("IscAmount", typeof(decimal));
    
            var handlingFeeAmtParameter = handlingFeeAmt.HasValue ?
                new ObjectParameter("handlingFeeAmt", handlingFeeAmt) :
                new ObjectParameter("handlingFeeAmt", typeof(decimal));
    
            var otherCommissionsParameter = otherCommissions.HasValue ?
                new ObjectParameter("OtherCommissions", otherCommissions) :
                new ObjectParameter("OtherCommissions", typeof(decimal));
    
            var taxAmountParameter = taxAmount.HasValue ?
                new ObjectParameter("TaxAmount", taxAmount) :
                new ObjectParameter("TaxAmount", typeof(decimal));
    
            var couponNumberParameter = couponNumber.HasValue ?
                new ObjectParameter("CouponNumber", couponNumber) :
                new ObjectParameter("CouponNumber", typeof(int));
    
            var uatpAmountParameter = uatpAmount.HasValue ?
                new ObjectParameter("UatpAmount", uatpAmount) :
                new ObjectParameter("UatpAmount", typeof(decimal));
    
            var fareComponentParameter = fareComponent.HasValue ?
                new ObjectParameter("FareComponent", fareComponent) :
                new ObjectParameter("FareComponent", typeof(int));
    
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("DocumentNumber", documentNumber) :
                new ObjectParameter("DocumentNumber", typeof(string));
    
            var rOEParameter = rOE.HasValue ?
                new ObjectParameter("ROE", rOE) :
                new ObjectParameter("ROE", typeof(decimal));
    
            var relatedDocumentGuidParameter = relatedDocumentGuid.HasValue ?
                new ObjectParameter("RelatedDocumentGuid", relatedDocumentGuid) :
                new ObjectParameter("RelatedDocumentGuid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("OB_updateDetails", prorationFlagParameter, sectorOriginParameter, sectorDestinationParameter, sectorCarrierParameter, sourceTypeParameter, currencyParameter, prorateFactorParameter, prorateValueParameter, straightRateProrateParameter, specialProrateAgreementParameter, differentialsParameter, surchargeParameter, finalShareParameter, taxesFeesChargesParameter, baseAmountParameter, iscPercentParameter, iscAmountParameter, handlingFeeAmtParameter, otherCommissionsParameter, taxAmountParameter, couponNumberParameter, uatpAmountParameter, fareComponentParameter, documentNumberParameter, rOEParameter, relatedDocumentGuidParameter);
        }
    
        public virtual int SP_Insert_ErrorMsg()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Insert_ErrorMsg");
        }
    
        public virtual ObjectResult<string> TicketsToBeProrated()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("TicketsToBeProrated");
        }
    
        public virtual ObjectResult<string> CheckProvisoRulesB(string airlinecode, string period, string areaOrigin, string areaDestination, string countryName, Nullable<int> p1)
        {
            var airlinecodeParameter = airlinecode != null ?
                new ObjectParameter("Airlinecode", airlinecode) :
                new ObjectParameter("Airlinecode", typeof(string));
    
            var periodParameter = period != null ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(string));
    
            var areaOriginParameter = areaOrigin != null ?
                new ObjectParameter("AreaOrigin", areaOrigin) :
                new ObjectParameter("AreaOrigin", typeof(string));
    
            var areaDestinationParameter = areaDestination != null ?
                new ObjectParameter("AreaDestination", areaDestination) :
                new ObjectParameter("AreaDestination", typeof(string));
    
            var countryNameParameter = countryName != null ?
                new ObjectParameter("CountryName", countryName) :
                new ObjectParameter("CountryName", typeof(string));
    
            var p1Parameter = p1.HasValue ?
                new ObjectParameter("p1", p1) :
                new ObjectParameter("p1", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CheckProvisoRulesB", airlinecodeParameter, periodParameter, areaOriginParameter, areaDestinationParameter, countryNameParameter, p1Parameter);
        }
    
        public virtual ObjectResult<string> GetAirlineSettlementMethod(string airlinecode)
        {
            var airlinecodeParameter = airlinecode != null ?
                new ObjectParameter("Airlinecode", airlinecode) :
                new ObjectParameter("Airlinecode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetAirlineSettlementMethod", airlinecodeParameter);
        }
    
        public virtual ObjectResult<GetCity_Result> GetCity(string x)
        {
            var xParameter = x != null ?
                new ObjectParameter("x", x) :
                new ObjectParameter("x", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCity_Result>("GetCity", xParameter);
        }
    
        public virtual ObjectResult<string> GetFarePassengerTypeDescription(string code)
        {
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetFarePassengerTypeDescription", codeParameter);
        }
    
        public virtual ObjectResult<string> GetProvisoRulesSectionA(string airline, string cityFrom, string cityTo, string period)
        {
            var airlineParameter = airline != null ?
                new ObjectParameter("Airline", airline) :
                new ObjectParameter("Airline", typeof(string));
    
            var cityFromParameter = cityFrom != null ?
                new ObjectParameter("CityFrom", cityFrom) :
                new ObjectParameter("CityFrom", typeof(string));
    
            var cityToParameter = cityTo != null ?
                new ObjectParameter("CityTo", cityTo) :
                new ObjectParameter("CityTo", typeof(string));
    
            var periodParameter = period != null ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetProvisoRulesSectionA", airlineParameter, cityFromParameter, cityToParameter, periodParameter);
        }
    
        public virtual ObjectResult<string> GetProvisoRulesSectionB(string airline, string region, string period)
        {
            var airlineParameter = airline != null ?
                new ObjectParameter("Airline", airline) :
                new ObjectParameter("Airline", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var periodParameter = period != null ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetProvisoRulesSectionB", airlineParameter, regionParameter, periodParameter);
        }
    
        public virtual ObjectResult<GetProvisoRulesSectionC_Result> GetProvisoRulesSectionC(string airlinecode, string period, Nullable<int> p1, Nullable<int> p2, Nullable<int> p3, Nullable<int> p4, Nullable<int> p5, Nullable<int> p6)
        {
            var airlinecodeParameter = airlinecode != null ?
                new ObjectParameter("Airlinecode", airlinecode) :
                new ObjectParameter("Airlinecode", typeof(string));
    
            var periodParameter = period != null ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(string));
    
            var p1Parameter = p1.HasValue ?
                new ObjectParameter("p1", p1) :
                new ObjectParameter("p1", typeof(int));
    
            var p2Parameter = p2.HasValue ?
                new ObjectParameter("p2", p2) :
                new ObjectParameter("p2", typeof(int));
    
            var p3Parameter = p3.HasValue ?
                new ObjectParameter("p3", p3) :
                new ObjectParameter("p3", typeof(int));
    
            var p4Parameter = p4.HasValue ?
                new ObjectParameter("p4", p4) :
                new ObjectParameter("p4", typeof(int));
    
            var p5Parameter = p5.HasValue ?
                new ObjectParameter("p5", p5) :
                new ObjectParameter("p5", typeof(int));
    
            var p6Parameter = p6.HasValue ?
                new ObjectParameter("p6", p6) :
                new ObjectParameter("p6", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProvisoRulesSectionC_Result>("GetProvisoRulesSectionC", airlinecodeParameter, periodParameter, p1Parameter, p2Parameter, p3Parameter, p4Parameter, p5Parameter, p6Parameter);
        }
    
        public virtual ObjectResult<GetProvisoRulesSectionC_P1Gt0P2Null_Result> GetProvisoRulesSectionC_P1Gt0P2Null(string airlinecode, string period)
        {
            var airlinecodeParameter = airlinecode != null ?
                new ObjectParameter("Airlinecode", airlinecode) :
                new ObjectParameter("Airlinecode", typeof(string));
    
            var periodParameter = period != null ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProvisoRulesSectionC_P1Gt0P2Null_Result>("GetProvisoRulesSectionC_P1Gt0P2Null", airlinecodeParameter, periodParameter);
        }
    
        public virtual ObjectResult<GetProvisoRulesSectionC_P2Gt0_Result> GetProvisoRulesSectionC_P2Gt0(string airlinecode, string period, Nullable<int> paragraphSet)
        {
            var airlinecodeParameter = airlinecode != null ?
                new ObjectParameter("Airlinecode", airlinecode) :
                new ObjectParameter("Airlinecode", typeof(string));
    
            var periodParameter = period != null ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(string));
    
            var paragraphSetParameter = paragraphSet.HasValue ?
                new ObjectParameter("ParagraphSet", paragraphSet) :
                new ObjectParameter("ParagraphSet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProvisoRulesSectionC_P2Gt0_Result>("GetProvisoRulesSectionC_P2Gt0", airlinecodeParameter, periodParameter, paragraphSetParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetProvisoRulesSectionCCount(string airline, string period)
        {
            var airlineParameter = airline != null ?
                new ObjectParameter("Airline", airline) :
                new ObjectParameter("Airline", typeof(string));
    
            var periodParameter = period != null ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetProvisoRulesSectionCCount", airlineParameter, periodParameter);
        }
    
        public virtual ObjectResult<GetRegionIdentifiers_Result> GetRegionIdentifiers(string cityCode)
        {
            var cityCodeParameter = cityCode != null ?
                new ObjectParameter("CityCode", cityCode) :
                new ObjectParameter("CityCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRegionIdentifiers_Result>("GetRegionIdentifiers", cityCodeParameter);
        }
    
        public virtual int RefCompare(string dB, string srcTable)
        {
            var dBParameter = dB != null ?
                new ObjectParameter("DB", dB) :
                new ObjectParameter("DB", typeof(string));
    
            var srcTableParameter = srcTable != null ?
                new ObjectParameter("SrcTable", srcTable) :
                new ObjectParameter("SrcTable", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RefCompare", dBParameter, srcTableParameter);
        }
    
        public virtual int SP_Factor_And_Base()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Factor_And_Base");
        }
    
        public virtual int SP_Generate_PMPFactor_And_PMPBaseAmount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Generate_PMPFactor_And_PMPBaseAmount");
        }
    
        public virtual int SP_NewAirport(Nullable<int> sendMail)
        {
            var sendMailParameter = sendMail.HasValue ?
                new ObjectParameter("SendMail", sendMail) :
                new ObjectParameter("SendMail", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_NewAirport", sendMailParameter);
        }
    
        public virtual int SP_OBSectorNoTax(Nullable<int> sendMail)
        {
            var sendMailParameter = sendMail.HasValue ?
                new ObjectParameter("SendMail", sendMail) :
                new ObjectParameter("SendMail", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_OBSectorNoTax", sendMailParameter);
        }
    
        public virtual ObjectResult<ACMA_ADMA_Detail_Result> ACMA_ADMA_Detail(Nullable<System.DateTime> saleDateFrom, Nullable<System.DateTime> saleDateTo)
        {
            var saleDateFromParameter = saleDateFrom.HasValue ?
                new ObjectParameter("SaleDateFrom", saleDateFrom) :
                new ObjectParameter("SaleDateFrom", typeof(System.DateTime));
    
            var saleDateToParameter = saleDateTo.HasValue ?
                new ObjectParameter("SaleDateTo", saleDateTo) :
                new ObjectParameter("SaleDateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ACMA_ADMA_Detail_Result>("ACMA_ADMA_Detail", saleDateFromParameter, saleDateToParameter);
        }
    
        public virtual int BSP_BATCH_REPORTS_KK(string bSP, string billingMonth, Nullable<int> period, ObjectParameter recordsGenerated)
        {
            var bSPParameter = bSP != null ?
                new ObjectParameter("BSP", bSP) :
                new ObjectParameter("BSP", typeof(string));
    
            var billingMonthParameter = billingMonth != null ?
                new ObjectParameter("BillingMonth", billingMonth) :
                new ObjectParameter("BillingMonth", typeof(string));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BSP_BATCH_REPORTS_KK", bSPParameter, billingMonthParameter, periodParameter, recordsGenerated);
        }
    
        public virtual ObjectResult<BSP_REPORTS_FUTURE_FLIGHTS_SALE_KK_Result> BSP_REPORTS_FUTURE_FLIGHTS_SALE_KK(string bSP, string yearMonth, Nullable<System.DateTime> flightFrom, Nullable<System.DateTime> flightTo, string route)
        {
            var bSPParameter = bSP != null ?
                new ObjectParameter("BSP", bSP) :
                new ObjectParameter("BSP", typeof(string));
    
            var yearMonthParameter = yearMonth != null ?
                new ObjectParameter("YearMonth", yearMonth) :
                new ObjectParameter("YearMonth", typeof(string));
    
            var flightFromParameter = flightFrom.HasValue ?
                new ObjectParameter("FlightFrom", flightFrom) :
                new ObjectParameter("FlightFrom", typeof(System.DateTime));
    
            var flightToParameter = flightTo.HasValue ?
                new ObjectParameter("FlightTo", flightTo) :
                new ObjectParameter("FlightTo", typeof(System.DateTime));
    
            var routeParameter = route != null ?
                new ObjectParameter("Route", route) :
                new ObjectParameter("Route", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BSP_REPORTS_FUTURE_FLIGHTS_SALE_KK_Result>("BSP_REPORTS_FUTURE_FLIGHTS_SALE_KK", bSPParameter, yearMonthParameter, flightFromParameter, flightToParameter, routeParameter);
        }
    
        public virtual ObjectResult<string> BSP_REPORTS_KK1(string bSP, string yearMonth, Nullable<int> period)
        {
            var bSPParameter = bSP != null ?
                new ObjectParameter("BSP", bSP) :
                new ObjectParameter("BSP", typeof(string));
    
            var yearMonthParameter = yearMonth != null ?
                new ObjectParameter("YearMonth", yearMonth) :
                new ObjectParameter("YearMonth", typeof(string));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("BSP_REPORTS_KK1", bSPParameter, yearMonthParameter, periodParameter);
        }
    
        public virtual int BSP_REPORTS_KK_Display(string bSP, string yearMonth, Nullable<int> period, Nullable<System.DateTime> issueDate_from, Nullable<System.DateTime> issueDate_to, string total)
        {
            var bSPParameter = bSP != null ?
                new ObjectParameter("BSP", bSP) :
                new ObjectParameter("BSP", typeof(string));
    
            var yearMonthParameter = yearMonth != null ?
                new ObjectParameter("YearMonth", yearMonth) :
                new ObjectParameter("YearMonth", typeof(string));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(int));
    
            var issueDate_fromParameter = issueDate_from.HasValue ?
                new ObjectParameter("IssueDate_from", issueDate_from) :
                new ObjectParameter("IssueDate_from", typeof(System.DateTime));
    
            var issueDate_toParameter = issueDate_to.HasValue ?
                new ObjectParameter("IssueDate_to", issueDate_to) :
                new ObjectParameter("IssueDate_to", typeof(System.DateTime));
    
            var totalParameter = total != null ?
                new ObjectParameter("Total", total) :
                new ObjectParameter("Total", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BSP_REPORTS_KK_Display", bSPParameter, yearMonthParameter, periodParameter, issueDate_fromParameter, issueDate_toParameter, totalParameter);
        }
    
        public virtual ObjectResult<string> BSP_REPORTS_KK_FULL(string bSP, string yearMonth, Nullable<int> period, string forceGenerate)
        {
            var bSPParameter = bSP != null ?
                new ObjectParameter("BSP", bSP) :
                new ObjectParameter("BSP", typeof(string));
    
            var yearMonthParameter = yearMonth != null ?
                new ObjectParameter("YearMonth", yearMonth) :
                new ObjectParameter("YearMonth", typeof(string));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(int));
    
            var forceGenerateParameter = forceGenerate != null ?
                new ObjectParameter("ForceGenerate", forceGenerate) :
                new ObjectParameter("ForceGenerate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("BSP_REPORTS_KK_FULL", bSPParameter, yearMonthParameter, periodParameter, forceGenerateParameter);
        }
    
        public virtual int BSP_REPORTS_KK_MissingTax()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BSP_REPORTS_KK_MissingTax");
        }
    
        public virtual int BSP_REPORTS_KK_NoLift(Nullable<System.DateTime> processingDateFrom, Nullable<System.DateTime> processingDateTo, Nullable<System.DateTime> flightDateFrom, Nullable<System.DateTime> flightDateTo, string agentNumericCode, string processingType)
        {
            var processingDateFromParameter = processingDateFrom.HasValue ?
                new ObjectParameter("ProcessingDateFrom", processingDateFrom) :
                new ObjectParameter("ProcessingDateFrom", typeof(System.DateTime));
    
            var processingDateToParameter = processingDateTo.HasValue ?
                new ObjectParameter("ProcessingDateTo", processingDateTo) :
                new ObjectParameter("ProcessingDateTo", typeof(System.DateTime));
    
            var flightDateFromParameter = flightDateFrom.HasValue ?
                new ObjectParameter("FlightDateFrom", flightDateFrom) :
                new ObjectParameter("FlightDateFrom", typeof(System.DateTime));
    
            var flightDateToParameter = flightDateTo.HasValue ?
                new ObjectParameter("FlightDateTo", flightDateTo) :
                new ObjectParameter("FlightDateTo", typeof(System.DateTime));
    
            var agentNumericCodeParameter = agentNumericCode != null ?
                new ObjectParameter("AgentNumericCode", agentNumericCode) :
                new ObjectParameter("AgentNumericCode", typeof(string));
    
            var processingTypeParameter = processingType != null ?
                new ObjectParameter("ProcessingType", processingType) :
                new ObjectParameter("ProcessingType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BSP_REPORTS_KK_NoLift", processingDateFromParameter, processingDateToParameter, flightDateFromParameter, flightDateToParameter, agentNumericCodeParameter, processingTypeParameter);
        }
    
        public virtual ObjectResult<BSP_SAP_Flown_Data_Sent_KK_Result> BSP_SAP_Flown_Data_Sent_KK(string bSP, Nullable<System.DateTime> usageDateFrom, Nullable<System.DateTime> usageDateTo)
        {
            var bSPParameter = bSP != null ?
                new ObjectParameter("BSP", bSP) :
                new ObjectParameter("BSP", typeof(string));
    
            var usageDateFromParameter = usageDateFrom.HasValue ?
                new ObjectParameter("UsageDateFrom", usageDateFrom) :
                new ObjectParameter("UsageDateFrom", typeof(System.DateTime));
    
            var usageDateToParameter = usageDateTo.HasValue ?
                new ObjectParameter("UsageDateTo", usageDateTo) :
                new ObjectParameter("UsageDateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BSP_SAP_Flown_Data_Sent_KK_Result>("BSP_SAP_Flown_Data_Sent_KK", bSPParameter, usageDateFromParameter, usageDateToParameter);
        }
    
        public virtual int BSP_SAP_Flown_Data_Transfer_KK(string bSP, Nullable<System.DateTime> usageDateFrom, Nullable<System.DateTime> usageDateTo, ObjectParameter recordsGenerated)
        {
            var bSPParameter = bSP != null ?
                new ObjectParameter("BSP", bSP) :
                new ObjectParameter("BSP", typeof(string));
    
            var usageDateFromParameter = usageDateFrom.HasValue ?
                new ObjectParameter("UsageDateFrom", usageDateFrom) :
                new ObjectParameter("UsageDateFrom", typeof(System.DateTime));
    
            var usageDateToParameter = usageDateTo.HasValue ?
                new ObjectParameter("UsageDateTo", usageDateTo) :
                new ObjectParameter("UsageDateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BSP_SAP_Flown_Data_Transfer_KK", bSPParameter, usageDateFromParameter, usageDateToParameter, recordsGenerated);
        }
    
        public virtual int BSP_SAP_LINK_KK(string bSP, string billingMonth, Nullable<int> period, ObjectParameter recordsGenerated)
        {
            var bSPParameter = bSP != null ?
                new ObjectParameter("BSP", bSP) :
                new ObjectParameter("BSP", typeof(string));
    
            var billingMonthParameter = billingMonth != null ?
                new ObjectParameter("BillingMonth", billingMonth) :
                new ObjectParameter("BillingMonth", typeof(string));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BSP_SAP_LINK_KK", bSPParameter, billingMonthParameter, periodParameter, recordsGenerated);
        }
    
        public virtual int BSP_Summary_Log(string year)
        {
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BSP_Summary_Log", yearParameter);
        }
    
        public virtual ObjectResult<Exchanged_Ticket_Report_MR_Result> Exchanged_Ticket_Report_MR(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Exchanged_Ticket_Report_MR_Result>("Exchanged_Ticket_Report_MR", fromParameter, toParameter);
        }
    
        public virtual ObjectResult<Expected_Flown_MR_Result> Expected_Flown_MR(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string originAirport, string destinationAirport, string flightNumber)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var originAirportParameter = originAirport != null ?
                new ObjectParameter("OriginAirport", originAirport) :
                new ObjectParameter("OriginAirport", typeof(string));
    
            var destinationAirportParameter = destinationAirport != null ?
                new ObjectParameter("DestinationAirport", destinationAirport) :
                new ObjectParameter("DestinationAirport", typeof(string));
    
            var flightNumberParameter = flightNumber != null ?
                new ObjectParameter("FlightNumber", flightNumber) :
                new ObjectParameter("FlightNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Expected_Flown_MR_Result>("Expected_Flown_MR", fromParameter, toParameter, originAirportParameter, destinationAirportParameter, flightNumberParameter);
        }
    
        public virtual ObjectResult<ExpectedPayablesByMonthOfUplift_Result> ExpectedPayablesByMonthOfUplift(string cARRIER, Nullable<System.DateTime> processingDate)
        {
            var cARRIERParameter = cARRIER != null ?
                new ObjectParameter("CARRIER", cARRIER) :
                new ObjectParameter("CARRIER", typeof(string));
    
            var processingDateParameter = processingDate.HasValue ?
                new ObjectParameter("ProcessingDate", processingDate) :
                new ObjectParameter("ProcessingDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExpectedPayablesByMonthOfUplift_Result>("ExpectedPayablesByMonthOfUplift", cARRIERParameter, processingDateParameter);
        }
    
        public virtual ObjectResult<ExpectedReceivableByMonthOfUplift_Result> ExpectedReceivableByMonthOfUplift(Nullable<System.DateTime> processingDateFrom, Nullable<System.DateTime> processingDateTo)
        {
            var processingDateFromParameter = processingDateFrom.HasValue ?
                new ObjectParameter("ProcessingDateFrom", processingDateFrom) :
                new ObjectParameter("ProcessingDateFrom", typeof(System.DateTime));
    
            var processingDateToParameter = processingDateTo.HasValue ?
                new ObjectParameter("ProcessingDateTo", processingDateTo) :
                new ObjectParameter("ProcessingDateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExpectedReceivableByMonthOfUplift_Result>("ExpectedReceivableByMonthOfUplift", processingDateFromParameter, processingDateToParameter);
        }
    
        public virtual ObjectResult<FileUploadStatus_Detail_Result> FileUploadStatus_Detail(Nullable<System.DateTime> processingDateFrom, Nullable<System.DateTime> processingDateTo, string processingFileName, string processingFileType, string processingStatus)
        {
            var processingDateFromParameter = processingDateFrom.HasValue ?
                new ObjectParameter("ProcessingDateFrom", processingDateFrom) :
                new ObjectParameter("ProcessingDateFrom", typeof(System.DateTime));
    
            var processingDateToParameter = processingDateTo.HasValue ?
                new ObjectParameter("ProcessingDateTo", processingDateTo) :
                new ObjectParameter("ProcessingDateTo", typeof(System.DateTime));
    
            var processingFileNameParameter = processingFileName != null ?
                new ObjectParameter("ProcessingFileName", processingFileName) :
                new ObjectParameter("ProcessingFileName", typeof(string));
    
            var processingFileTypeParameter = processingFileType != null ?
                new ObjectParameter("ProcessingFileType", processingFileType) :
                new ObjectParameter("ProcessingFileType", typeof(string));
    
            var processingStatusParameter = processingStatus != null ?
                new ObjectParameter("ProcessingStatus", processingStatus) :
                new ObjectParameter("ProcessingStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FileUploadStatus_Detail_Result>("FileUploadStatus_Detail", processingDateFromParameter, processingDateToParameter, processingFileNameParameter, processingFileTypeParameter, processingStatusParameter);
        }
    
        public virtual ObjectResult<FileUploadStatus_Summary_Result> FileUploadStatus_Summary(Nullable<System.DateTime> processingDateFrom, Nullable<System.DateTime> processingDateTo, string processingFileName, string processingFileType, string processingStatus)
        {
            var processingDateFromParameter = processingDateFrom.HasValue ?
                new ObjectParameter("ProcessingDateFrom", processingDateFrom) :
                new ObjectParameter("ProcessingDateFrom", typeof(System.DateTime));
    
            var processingDateToParameter = processingDateTo.HasValue ?
                new ObjectParameter("ProcessingDateTo", processingDateTo) :
                new ObjectParameter("ProcessingDateTo", typeof(System.DateTime));
    
            var processingFileNameParameter = processingFileName != null ?
                new ObjectParameter("ProcessingFileName", processingFileName) :
                new ObjectParameter("ProcessingFileName", typeof(string));
    
            var processingFileTypeParameter = processingFileType != null ?
                new ObjectParameter("ProcessingFileType", processingFileType) :
                new ObjectParameter("ProcessingFileType", typeof(string));
    
            var processingStatusParameter = processingStatus != null ?
                new ObjectParameter("ProcessingStatus", processingStatus) :
                new ObjectParameter("ProcessingStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FileUploadStatus_Summary_Result>("FileUploadStatus_Summary", processingDateFromParameter, processingDateToParameter, processingFileNameParameter, processingFileTypeParameter, processingStatusParameter);
        }
    
        public virtual ObjectResult<Flown_FareBasis_PaxCount_Result> Flown_FareBasis_PaxCount(Nullable<System.DateTime> flightDepartureDateFrom, Nullable<System.DateTime> flightDepartureDateTo)
        {
            var flightDepartureDateFromParameter = flightDepartureDateFrom.HasValue ?
                new ObjectParameter("FlightDepartureDateFrom", flightDepartureDateFrom) :
                new ObjectParameter("FlightDepartureDateFrom", typeof(System.DateTime));
    
            var flightDepartureDateToParameter = flightDepartureDateTo.HasValue ?
                new ObjectParameter("FlightDepartureDateTo", flightDepartureDateTo) :
                new ObjectParameter("FlightDepartureDateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Flown_FareBasis_PaxCount_Result>("Flown_FareBasis_PaxCount", flightDepartureDateFromParameter, flightDepartureDateToParameter);
        }
    
        public virtual ObjectResult<FlownBy_FlightDate_Routing_Result> FlownBy_FlightDate_Routing(Nullable<System.DateTime> fromFlightDate, Nullable<System.DateTime> toFlightDate, string origin, string destination, string flightNumber)
        {
            var fromFlightDateParameter = fromFlightDate.HasValue ?
                new ObjectParameter("FromFlightDate", fromFlightDate) :
                new ObjectParameter("FromFlightDate", typeof(System.DateTime));
    
            var toFlightDateParameter = toFlightDate.HasValue ?
                new ObjectParameter("ToFlightDate", toFlightDate) :
                new ObjectParameter("ToFlightDate", typeof(System.DateTime));
    
            var originParameter = origin != null ?
                new ObjectParameter("Origin", origin) :
                new ObjectParameter("Origin", typeof(string));
    
            var destinationParameter = destination != null ?
                new ObjectParameter("Destination", destination) :
                new ObjectParameter("Destination", typeof(string));
    
            var flightNumberParameter = flightNumber != null ?
                new ObjectParameter("FlightNumber", flightNumber) :
                new ObjectParameter("FlightNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FlownBy_FlightDate_Routing_Result>("FlownBy_FlightDate_Routing", fromFlightDateParameter, toFlightDateParameter, originParameter, destinationParameter, flightNumberParameter);
        }
    
        public virtual ObjectResult<FlownDetail_Result> FlownDetail(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string originAirport, string destinationAirport)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var originAirportParameter = originAirport != null ?
                new ObjectParameter("OriginAirport", originAirport) :
                new ObjectParameter("OriginAirport", typeof(string));
    
            var destinationAirportParameter = destinationAirport != null ?
                new ObjectParameter("DestinationAirport", destinationAirport) :
                new ObjectParameter("DestinationAirport", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FlownDetail_Result>("FlownDetail", fromParameter, toParameter, originAirportParameter, destinationAirportParameter);
        }
    
        public virtual ObjectResult<FlownDetail_Commission_Override_Result> FlownDetail_Commission_Override(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string originAirport, string destinationAirport)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var originAirportParameter = originAirport != null ?
                new ObjectParameter("OriginAirport", originAirport) :
                new ObjectParameter("OriginAirport", typeof(string));
    
            var destinationAirportParameter = destinationAirport != null ?
                new ObjectParameter("DestinationAirport", destinationAirport) :
                new ObjectParameter("DestinationAirport", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FlownDetail_Commission_Override_Result>("FlownDetail_Commission_Override", fromParameter, toParameter, originAirportParameter, destinationAirportParameter);
        }
    
        public virtual ObjectResult<FlownDetail_MR_Result> FlownDetail_MR(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string originAirport, string destinationAirport)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var originAirportParameter = originAirport != null ?
                new ObjectParameter("OriginAirport", originAirport) :
                new ObjectParameter("OriginAirport", typeof(string));
    
            var destinationAirportParameter = destinationAirport != null ?
                new ObjectParameter("DestinationAirport", destinationAirport) :
                new ObjectParameter("DestinationAirport", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FlownDetail_MR_Result>("FlownDetail_MR", fromParameter, toParameter, originAirportParameter, destinationAirportParameter);
        }
    
        public virtual ObjectResult<FlownFlightCountBySector_Result> FlownFlightCountBySector(Nullable<int> fromPeriod, Nullable<int> toPeriod)
        {
            var fromPeriodParameter = fromPeriod.HasValue ?
                new ObjectParameter("FromPeriod", fromPeriod) :
                new ObjectParameter("FromPeriod", typeof(int));
    
            var toPeriodParameter = toPeriod.HasValue ?
                new ObjectParameter("ToPeriod", toPeriod) :
                new ObjectParameter("ToPeriod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FlownFlightCountBySector_Result>("FlownFlightCountBySector", fromPeriodParameter, toPeriodParameter);
        }
    
        public virtual ObjectResult<FlownRevenue_Result> FlownRevenue(Nullable<int> fromPeriod, Nullable<int> toPeriod)
        {
            var fromPeriodParameter = fromPeriod.HasValue ?
                new ObjectParameter("FromPeriod", fromPeriod) :
                new ObjectParameter("FromPeriod", typeof(int));
    
            var toPeriodParameter = toPeriod.HasValue ?
                new ObjectParameter("ToPeriod", toPeriod) :
                new ObjectParameter("ToPeriod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FlownRevenue_Result>("FlownRevenue", fromPeriodParameter, toPeriodParameter);
        }
    
        public virtual int FlownRevenueBySector_MR(Nullable<System.DateTime> from, Nullable<System.DateTime> to, string originAirport, string destinationAirport)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            var originAirportParameter = originAirport != null ?
                new ObjectParameter("OriginAirport", originAirport) :
                new ObjectParameter("OriginAirport", typeof(string));
    
            var destinationAirportParameter = destinationAirport != null ?
                new ObjectParameter("DestinationAirport", destinationAirport) :
                new ObjectParameter("DestinationAirport", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FlownRevenueBySector_MR", fromParameter, toParameter, originAirportParameter, destinationAirportParameter);
        }
    
        public virtual ObjectResult<FlownRevenueMRExcludingCharter_Result> FlownRevenueMRExcludingCharter(Nullable<int> fromPeriod, Nullable<int> toPeriod)
        {
            var fromPeriodParameter = fromPeriod.HasValue ?
                new ObjectParameter("FromPeriod", fromPeriod) :
                new ObjectParameter("FromPeriod", typeof(int));
    
            var toPeriodParameter = toPeriod.HasValue ?
                new ObjectParameter("ToPeriod", toPeriod) :
                new ObjectParameter("ToPeriod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FlownRevenueMRExcludingCharter_Result>("FlownRevenueMRExcludingCharter", fromPeriodParameter, toPeriodParameter);
        }
    
        public virtual ObjectResult<FlownRevenueMRExcludingCharterUnproratedSectorFare_Result> FlownRevenueMRExcludingCharterUnproratedSectorFare(Nullable<int> fromPeriod, Nullable<int> toPeriod)
        {
            var fromPeriodParameter = fromPeriod.HasValue ?
                new ObjectParameter("FromPeriod", fromPeriod) :
                new ObjectParameter("FromPeriod", typeof(int));
    
            var toPeriodParameter = toPeriod.HasValue ?
                new ObjectParameter("ToPeriod", toPeriod) :
                new ObjectParameter("ToPeriod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FlownRevenueMRExcludingCharterUnproratedSectorFare_Result>("FlownRevenueMRExcludingCharterUnproratedSectorFare", fromPeriodParameter, toPeriodParameter);
        }
    
        public virtual ObjectResult<FreeBaggageAllowanceExcess_Result> FreeBaggageAllowanceExcess(string fromPeriod, string toPeriod, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string agentNumericCode)
        {
            var fromPeriodParameter = fromPeriod != null ?
                new ObjectParameter("FromPeriod", fromPeriod) :
                new ObjectParameter("FromPeriod", typeof(string));
    
            var toPeriodParameter = toPeriod != null ?
                new ObjectParameter("ToPeriod", toPeriod) :
                new ObjectParameter("ToPeriod", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var agentNumericCodeParameter = agentNumericCode != null ?
                new ObjectParameter("AgentNumericCode", agentNumericCode) :
                new ObjectParameter("AgentNumericCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FreeBaggageAllowanceExcess_Result>("FreeBaggageAllowanceExcess", fromPeriodParameter, toPeriodParameter, fromDateParameter, toDateParameter, agentNumericCodeParameter);
        }
    
        public virtual ObjectResult<GetIbDetails_Result> GetIbDetails(string airlineCode, Nullable<int> sourceCode)
        {
            var airlineCodeParameter = airlineCode != null ?
                new ObjectParameter("airlineCode", airlineCode) :
                new ObjectParameter("airlineCode", typeof(string));
    
            var sourceCodeParameter = sourceCode.HasValue ?
                new ObjectParameter("sourceCode", sourceCode) :
                new ObjectParameter("sourceCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetIbDetails_Result>("GetIbDetails", airlineCodeParameter, sourceCodeParameter);
        }
    
        public virtual int Inward_Billing_Summary(string billingPeriod, string billingAirline, string origin, string destination)
        {
            var billingPeriodParameter = billingPeriod != null ?
                new ObjectParameter("BillingPeriod", billingPeriod) :
                new ObjectParameter("BillingPeriod", typeof(string));
    
            var billingAirlineParameter = billingAirline != null ?
                new ObjectParameter("BillingAirline", billingAirline) :
                new ObjectParameter("BillingAirline", typeof(string));
    
            var originParameter = origin != null ?
                new ObjectParameter("Origin", origin) :
                new ObjectParameter("Origin", typeof(string));
    
            var destinationParameter = destination != null ?
                new ObjectParameter("Destination", destination) :
                new ObjectParameter("Destination", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Inward_Billing_Summary", billingPeriodParameter, billingAirlineParameter, originParameter, destinationParameter);
        }
    
        public virtual ObjectResult<Inward_Billing_Summary_MD_Result> Inward_Billing_Summary_MD(string billingPeriod, string billingAirline, string origin, string destination)
        {
            var billingPeriodParameter = billingPeriod != null ?
                new ObjectParameter("BillingPeriod", billingPeriod) :
                new ObjectParameter("BillingPeriod", typeof(string));
    
            var billingAirlineParameter = billingAirline != null ?
                new ObjectParameter("BillingAirline", billingAirline) :
                new ObjectParameter("BillingAirline", typeof(string));
    
            var originParameter = origin != null ?
                new ObjectParameter("Origin", origin) :
                new ObjectParameter("Origin", typeof(string));
    
            var destinationParameter = destination != null ?
                new ObjectParameter("Destination", destination) :
                new ObjectParameter("Destination", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Inward_Billing_Summary_MD_Result>("Inward_Billing_Summary_MD", billingPeriodParameter, billingAirlineParameter, originParameter, destinationParameter);
        }
    
        public virtual int KK_GSA_Commissions(string period, string bSP, Nullable<int> report)
        {
            var periodParameter = period != null ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(string));
    
            var bSPParameter = bSP != null ?
                new ObjectParameter("BSP", bSP) :
                new ObjectParameter("BSP", typeof(string));
    
            var reportParameter = report.HasValue ?
                new ObjectParameter("Report", report) :
                new ObjectParameter("Report", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("KK_GSA_Commissions", periodParameter, bSPParameter, reportParameter);
        }
    
        public virtual ObjectResult<KK_GSA_Commissions_Periods_Result> KK_GSA_Commissions_Periods(string period)
        {
            var periodParameter = period != null ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KK_GSA_Commissions_Periods_Result>("KK_GSA_Commissions_Periods", periodParameter);
        }
    
        public virtual ObjectResult<KK_Interline_Shgm_Domestic_Sales_Report_Result> KK_Interline_Shgm_Domestic_Sales_Report(string bILLINGPERIOD)
        {
            var bILLINGPERIODParameter = bILLINGPERIOD != null ?
                new ObjectParameter("BILLINGPERIOD", bILLINGPERIOD) :
                new ObjectParameter("BILLINGPERIOD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KK_Interline_Shgm_Domestic_Sales_Report_Result>("KK_Interline_Shgm_Domestic_Sales_Report", bILLINGPERIODParameter);
        }
    
        public virtual ObjectResult<string> KK_Inward_OAL_Billing_Invoice_Details(string bILLINGPERIOD, string chargeCode)
        {
            var bILLINGPERIODParameter = bILLINGPERIOD != null ?
                new ObjectParameter("BILLINGPERIOD", bILLINGPERIOD) :
                new ObjectParameter("BILLINGPERIOD", typeof(string));
    
            var chargeCodeParameter = chargeCode != null ?
                new ObjectParameter("ChargeCode", chargeCode) :
                new ObjectParameter("ChargeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("KK_Inward_OAL_Billing_Invoice_Details", bILLINGPERIODParameter, chargeCodeParameter);
        }
    
        public virtual ObjectResult<KK_Inward_OAL_Rejection01_Result> KK_Inward_OAL_Rejection01(string bILLINGPERIOD, string chargeCode)
        {
            var bILLINGPERIODParameter = bILLINGPERIOD != null ?
                new ObjectParameter("BILLINGPERIOD", bILLINGPERIOD) :
                new ObjectParameter("BILLINGPERIOD", typeof(string));
    
            var chargeCodeParameter = chargeCode != null ?
                new ObjectParameter("ChargeCode", chargeCode) :
                new ObjectParameter("ChargeCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KK_Inward_OAL_Rejection01_Result>("KK_Inward_OAL_Rejection01", bILLINGPERIODParameter, chargeCodeParameter);
        }
    
        public virtual ObjectResult<KK_OuwardBilling_500_Result> KK_OuwardBilling_500(string billingPeriod)
        {
            var billingPeriodParameter = billingPeriod != null ?
                new ObjectParameter("BillingPeriod", billingPeriod) :
                new ObjectParameter("BillingPeriod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KK_OuwardBilling_500_Result>("KK_OuwardBilling_500", billingPeriodParameter);
        }
    
        public virtual ObjectResult<KK_OuwardBillingFlightDetail_Result> KK_OuwardBillingFlightDetail(string bILLINGPERIOD)
        {
            var bILLINGPERIODParameter = bILLINGPERIOD != null ?
                new ObjectParameter("BILLINGPERIOD", bILLINGPERIOD) :
                new ObjectParameter("BILLINGPERIOD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KK_OuwardBillingFlightDetail_Result>("KK_OuwardBillingFlightDetail", bILLINGPERIODParameter);
        }
    
        public virtual ObjectResult<KK_OuwardBillingFlightSummary_Result> KK_OuwardBillingFlightSummary(string bILLINGPERIOD)
        {
            var bILLINGPERIODParameter = bILLINGPERIOD != null ?
                new ObjectParameter("BILLINGPERIOD", bILLINGPERIOD) :
                new ObjectParameter("BILLINGPERIOD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KK_OuwardBillingFlightSummary_Result>("KK_OuwardBillingFlightSummary", bILLINGPERIODParameter);
        }
    
        public virtual ObjectResult<KK_OuwardBillingInvoiceSummary_Result> KK_OuwardBillingInvoiceSummary(string bILLINGPERIOD)
        {
            var bILLINGPERIODParameter = bILLINGPERIOD != null ?
                new ObjectParameter("BILLINGPERIOD", bILLINGPERIOD) :
                new ObjectParameter("BILLINGPERIOD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<KK_OuwardBillingInvoiceSummary_Result>("KK_OuwardBillingInvoiceSummary", bILLINGPERIODParameter);
        }
    
        public virtual ObjectResult<string> Launch_BSP_SAP_BATCH_REPORTS_KK(string bSP, string yearMonth, Nullable<int> period)
        {
            var bSPParameter = bSP != null ?
                new ObjectParameter("BSP", bSP) :
                new ObjectParameter("BSP", typeof(string));
    
            var yearMonthParameter = yearMonth != null ?
                new ObjectParameter("YearMonth", yearMonth) :
                new ObjectParameter("YearMonth", typeof(string));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Launch_BSP_SAP_BATCH_REPORTS_KK", bSPParameter, yearMonthParameter, periodParameter);
        }
    
        public virtual ObjectResult<MR_CouponDetail_Result> MR_CouponDetail(Nullable<System.DateTime> saleDateFrom, Nullable<System.DateTime> saleDateTo)
        {
            var saleDateFromParameter = saleDateFrom.HasValue ?
                new ObjectParameter("SaleDateFrom", saleDateFrom) :
                new ObjectParameter("SaleDateFrom", typeof(System.DateTime));
    
            var saleDateToParameter = saleDateTo.HasValue ?
                new ObjectParameter("SaleDateTo", saleDateTo) :
                new ObjectParameter("SaleDateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MR_CouponDetail_Result>("MR_CouponDetail", saleDateFromParameter, saleDateToParameter);
        }
    
        public virtual ObjectResult<MR_DiscountBy_Date_Agent_DocumentNumber_Coupon_Result> MR_DiscountBy_Date_Agent_DocumentNumber_Coupon(Nullable<System.DateTime> saleDateFrom, Nullable<System.DateTime> saleDateTo)
        {
            var saleDateFromParameter = saleDateFrom.HasValue ?
                new ObjectParameter("SaleDateFrom", saleDateFrom) :
                new ObjectParameter("SaleDateFrom", typeof(System.DateTime));
    
            var saleDateToParameter = saleDateTo.HasValue ?
                new ObjectParameter("SaleDateTo", saleDateTo) :
                new ObjectParameter("SaleDateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MR_DiscountBy_Date_Agent_DocumentNumber_Coupon_Result>("MR_DiscountBy_Date_Agent_DocumentNumber_Coupon", saleDateFromParameter, saleDateToParameter);
        }
    
        public virtual ObjectResult<MR_Sales_Summary_Result> MR_Sales_Summary(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> option)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var optionParameter = option.HasValue ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MR_Sales_Summary_Result>("MR_Sales_Summary", fromDateParameter, toDateParameter, optionParameter);
        }
    
        public virtual ObjectResult<MR_Sales_Summary_Sector_RBD_FareBasis_Result> MR_Sales_Summary_Sector_RBD_FareBasis(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> option)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var optionParameter = option.HasValue ?
                new ObjectParameter("Option", option) :
                new ObjectParameter("Option", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MR_Sales_Summary_Sector_RBD_FareBasis_Result>("MR_Sales_Summary_Sector_RBD_FareBasis", fromDateParameter, toDateParameter, optionParameter);
        }
    
        public virtual ObjectResult<MR_SalesSummaryBy_Date_Result> MR_SalesSummaryBy_Date(Nullable<System.DateTime> saleDateFrom, Nullable<System.DateTime> saleDateTo)
        {
            var saleDateFromParameter = saleDateFrom.HasValue ?
                new ObjectParameter("SaleDateFrom", saleDateFrom) :
                new ObjectParameter("SaleDateFrom", typeof(System.DateTime));
    
            var saleDateToParameter = saleDateTo.HasValue ?
                new ObjectParameter("SaleDateTo", saleDateTo) :
                new ObjectParameter("SaleDateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MR_SalesSummaryBy_Date_Result>("MR_SalesSummaryBy_Date", saleDateFromParameter, saleDateToParameter);
        }
    
        public virtual ObjectResult<MR_SalesSummaryBy_Date_Agent_Result> MR_SalesSummaryBy_Date_Agent(string agentNumericCode, string ticketingAgentID, Nullable<System.DateTime> saleDateFrom, Nullable<System.DateTime> saleDateTo)
        {
            var agentNumericCodeParameter = agentNumericCode != null ?
                new ObjectParameter("AgentNumericCode", agentNumericCode) :
                new ObjectParameter("AgentNumericCode", typeof(string));
    
            var ticketingAgentIDParameter = ticketingAgentID != null ?
                new ObjectParameter("TicketingAgentID", ticketingAgentID) :
                new ObjectParameter("TicketingAgentID", typeof(string));
    
            var saleDateFromParameter = saleDateFrom.HasValue ?
                new ObjectParameter("SaleDateFrom", saleDateFrom) :
                new ObjectParameter("SaleDateFrom", typeof(System.DateTime));
    
            var saleDateToParameter = saleDateTo.HasValue ?
                new ObjectParameter("SaleDateTo", saleDateTo) :
                new ObjectParameter("SaleDateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MR_SalesSummaryBy_Date_Agent_Result>("MR_SalesSummaryBy_Date_Agent", agentNumericCodeParameter, ticketingAgentIDParameter, saleDateFromParameter, saleDateToParameter);
        }
    
        public virtual ObjectResult<MR_SalesSummaryBy_Date_Agent_DocumentNumber_Result> MR_SalesSummaryBy_Date_Agent_DocumentNumber(Nullable<System.DateTime> saleDateFrom, Nullable<System.DateTime> saleDateTo)
        {
            var saleDateFromParameter = saleDateFrom.HasValue ?
                new ObjectParameter("SaleDateFrom", saleDateFrom) :
                new ObjectParameter("SaleDateFrom", typeof(System.DateTime));
    
            var saleDateToParameter = saleDateTo.HasValue ?
                new ObjectParameter("SaleDateTo", saleDateTo) :
                new ObjectParameter("SaleDateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MR_SalesSummaryBy_Date_Agent_DocumentNumber_Result>("MR_SalesSummaryBy_Date_Agent_DocumentNumber", saleDateFromParameter, saleDateToParameter);
        }
    
        public virtual ObjectResult<MR_Tax_By_Date_Agent_Result> MR_Tax_By_Date_Agent(Nullable<System.DateTime> saleDateFrom, Nullable<System.DateTime> saleDateTo)
        {
            var saleDateFromParameter = saleDateFrom.HasValue ?
                new ObjectParameter("SaleDateFrom", saleDateFrom) :
                new ObjectParameter("SaleDateFrom", typeof(System.DateTime));
    
            var saleDateToParameter = saleDateTo.HasValue ?
                new ObjectParameter("SaleDateTo", saleDateTo) :
                new ObjectParameter("SaleDateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MR_Tax_By_Date_Agent_Result>("MR_Tax_By_Date_Agent", saleDateFromParameter, saleDateToParameter);
        }
    
        public virtual ObjectResult<Outward_Billing_Detail_Result> Outward_Billing_Detail(string billingPeriod, string billedAirline, Nullable<System.DateTime> fromFlightDate, Nullable<System.DateTime> toFlightDate, string origin, string destination)
        {
            var billingPeriodParameter = billingPeriod != null ?
                new ObjectParameter("BillingPeriod", billingPeriod) :
                new ObjectParameter("BillingPeriod", typeof(string));
    
            var billedAirlineParameter = billedAirline != null ?
                new ObjectParameter("BilledAirline", billedAirline) :
                new ObjectParameter("BilledAirline", typeof(string));
    
            var fromFlightDateParameter = fromFlightDate.HasValue ?
                new ObjectParameter("FromFlightDate", fromFlightDate) :
                new ObjectParameter("FromFlightDate", typeof(System.DateTime));
    
            var toFlightDateParameter = toFlightDate.HasValue ?
                new ObjectParameter("ToFlightDate", toFlightDate) :
                new ObjectParameter("ToFlightDate", typeof(System.DateTime));
    
            var originParameter = origin != null ?
                new ObjectParameter("Origin", origin) :
                new ObjectParameter("Origin", typeof(string));
    
            var destinationParameter = destination != null ?
                new ObjectParameter("Destination", destination) :
                new ObjectParameter("Destination", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Outward_Billing_Detail_Result>("Outward_Billing_Detail", billingPeriodParameter, billedAirlineParameter, fromFlightDateParameter, toFlightDateParameter, originParameter, destinationParameter);
        }
    
        public virtual ObjectResult<Outward_Billing_Summary_Result> Outward_Billing_Summary(string billingPeriod, string billedAirline, Nullable<System.DateTime> fromFlightDate, Nullable<System.DateTime> toFlightDate, string origin, string destination, string flightNumber)
        {
            var billingPeriodParameter = billingPeriod != null ?
                new ObjectParameter("BillingPeriod", billingPeriod) :
                new ObjectParameter("BillingPeriod", typeof(string));
    
            var billedAirlineParameter = billedAirline != null ?
                new ObjectParameter("BilledAirline", billedAirline) :
                new ObjectParameter("BilledAirline", typeof(string));
    
            var fromFlightDateParameter = fromFlightDate.HasValue ?
                new ObjectParameter("FromFlightDate", fromFlightDate) :
                new ObjectParameter("FromFlightDate", typeof(System.DateTime));
    
            var toFlightDateParameter = toFlightDate.HasValue ?
                new ObjectParameter("ToFlightDate", toFlightDate) :
                new ObjectParameter("ToFlightDate", typeof(System.DateTime));
    
            var originParameter = origin != null ?
                new ObjectParameter("Origin", origin) :
                new ObjectParameter("Origin", typeof(string));
    
            var destinationParameter = destination != null ?
                new ObjectParameter("Destination", destination) :
                new ObjectParameter("Destination", typeof(string));
    
            var flightNumberParameter = flightNumber != null ?
                new ObjectParameter("FlightNumber", flightNumber) :
                new ObjectParameter("FlightNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Outward_Billing_Summary_Result>("Outward_Billing_Summary", billingPeriodParameter, billedAirlineParameter, fromFlightDateParameter, toFlightDateParameter, originParameter, destinationParameter, flightNumberParameter);
        }
    
        public virtual ObjectResult<Refunds_Detail_Result> Refunds_Detail(Nullable<System.DateTime> saleDateFrom, Nullable<System.DateTime> saleDateTo)
        {
            var saleDateFromParameter = saleDateFrom.HasValue ?
                new ObjectParameter("SaleDateFrom", saleDateFrom) :
                new ObjectParameter("SaleDateFrom", typeof(System.DateTime));
    
            var saleDateToParameter = saleDateTo.HasValue ?
                new ObjectParameter("SaleDateTo", saleDateTo) :
                new ObjectParameter("SaleDateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Refunds_Detail_Result>("Refunds_Detail", saleDateFromParameter, saleDateToParameter);
        }
    
        public virtual ObjectResult<Refunds_Detail2_Result> Refunds_Detail2(Nullable<System.DateTime> refundDate_From, Nullable<System.DateTime> refundDate_To)
        {
            var refundDate_FromParameter = refundDate_From.HasValue ?
                new ObjectParameter("RefundDate_From", refundDate_From) :
                new ObjectParameter("RefundDate_From", typeof(System.DateTime));
    
            var refundDate_ToParameter = refundDate_To.HasValue ?
                new ObjectParameter("RefundDate_To", refundDate_To) :
                new ObjectParameter("RefundDate_To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Refunds_Detail2_Result>("Refunds_Detail2", refundDate_FromParameter, refundDate_ToParameter);
        }
    
        public virtual ObjectResult<Refunds_DetailByRefundDate_Result> Refunds_DetailByRefundDate(Nullable<System.DateTime> refundDateFrom, Nullable<System.DateTime> refundDateTo)
        {
            var refundDateFromParameter = refundDateFrom.HasValue ?
                new ObjectParameter("RefundDateFrom", refundDateFrom) :
                new ObjectParameter("RefundDateFrom", typeof(System.DateTime));
    
            var refundDateToParameter = refundDateTo.HasValue ?
                new ObjectParameter("RefundDateTo", refundDateTo) :
                new ObjectParameter("RefundDateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Refunds_DetailByRefundDate_Result>("Refunds_DetailByRefundDate", refundDateFromParameter, refundDateToParameter);
        }
    
        public virtual ObjectResult<Refunds_DetailBySaleDate_Result> Refunds_DetailBySaleDate(Nullable<System.DateTime> saleDateFrom, Nullable<System.DateTime> saleDateTo)
        {
            var saleDateFromParameter = saleDateFrom.HasValue ?
                new ObjectParameter("SaleDateFrom", saleDateFrom) :
                new ObjectParameter("SaleDateFrom", typeof(System.DateTime));
    
            var saleDateToParameter = saleDateTo.HasValue ?
                new ObjectParameter("SaleDateTo", saleDateTo) :
                new ObjectParameter("SaleDateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Refunds_DetailBySaleDate_Result>("Refunds_DetailBySaleDate", saleDateFromParameter, saleDateToParameter);
        }
    
        public virtual ObjectResult<Refunds_DetailBySaleDate_MR_Result> Refunds_DetailBySaleDate_MR(Nullable<System.DateTime> saleDateFrom, Nullable<System.DateTime> saleDateTo)
        {
            var saleDateFromParameter = saleDateFrom.HasValue ?
                new ObjectParameter("SaleDateFrom", saleDateFrom) :
                new ObjectParameter("SaleDateFrom", typeof(System.DateTime));
    
            var saleDateToParameter = saleDateTo.HasValue ?
                new ObjectParameter("SaleDateTo", saleDateTo) :
                new ObjectParameter("SaleDateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Refunds_DetailBySaleDate_MR_Result>("Refunds_DetailBySaleDate_MR", saleDateFromParameter, saleDateToParameter);
        }
    
        public virtual ObjectResult<Reissue_Ticket_Report_MR_Result> Reissue_Ticket_Report_MR(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Reissue_Ticket_Report_MR_Result>("Reissue_Ticket_Report_MR", fromParameter, toParameter);
        }
    
        public virtual ObjectResult<Rejection_MR_Result> Rejection_MR(string settlementMonthPeriod)
        {
            var settlementMonthPeriodParameter = settlementMonthPeriod != null ?
                new ObjectParameter("SettlementMonthPeriod", settlementMonthPeriod) :
                new ObjectParameter("SettlementMonthPeriod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rejection_MR_Result>("Rejection_MR", settlementMonthPeriodParameter);
        }
    
        public virtual ObjectResult<RejectionTax_MR_Result> RejectionTax_MR(string settlementMonthPeriod)
        {
            var settlementMonthPeriodParameter = settlementMonthPeriod != null ?
                new ObjectParameter("SettlementMonthPeriod", settlementMonthPeriod) :
                new ObjectParameter("SettlementMonthPeriod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RejectionTax_MR_Result>("RejectionTax_MR", settlementMonthPeriodParameter);
        }
    
        public virtual ObjectResult<Sales_vs_FlownPerformance_Result> Sales_vs_FlownPerformance(Nullable<System.DateTime> flightDepartureDateFrom, Nullable<System.DateTime> flightDepartureDateTo)
        {
            var flightDepartureDateFromParameter = flightDepartureDateFrom.HasValue ?
                new ObjectParameter("FlightDepartureDateFrom", flightDepartureDateFrom) :
                new ObjectParameter("FlightDepartureDateFrom", typeof(System.DateTime));
    
            var flightDepartureDateToParameter = flightDepartureDateTo.HasValue ?
                new ObjectParameter("FlightDepartureDateTo", flightDepartureDateTo) :
                new ObjectParameter("FlightDepartureDateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sales_vs_FlownPerformance_Result>("Sales_vs_FlownPerformance", flightDepartureDateFromParameter, flightDepartureDateToParameter);
        }
    
        public virtual ObjectResult<SalesAnalysis_Result> SalesAnalysis(Nullable<int> period)
        {
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SalesAnalysis_Result>("SalesAnalysis", periodParameter);
        }
    
        public virtual ObjectResult<SalesByAgent1_Result> SalesByAgent1(string fromPeriod, string toPeriod, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string reportOption)
        {
            var fromPeriodParameter = fromPeriod != null ?
                new ObjectParameter("FromPeriod", fromPeriod) :
                new ObjectParameter("FromPeriod", typeof(string));
    
            var toPeriodParameter = toPeriod != null ?
                new ObjectParameter("ToPeriod", toPeriod) :
                new ObjectParameter("ToPeriod", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var reportOptionParameter = reportOption != null ?
                new ObjectParameter("ReportOption", reportOption) :
                new ObjectParameter("ReportOption", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SalesByAgent1_Result>("SalesByAgent1", fromPeriodParameter, toPeriodParameter, fromDateParameter, toDateParameter, reportOptionParameter);
        }
    
        public virtual ObjectResult<SalesByAgentFOP_Result> SalesByAgentFOP(string fromPeriod, string toPeriod, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string reportOption)
        {
            var fromPeriodParameter = fromPeriod != null ?
                new ObjectParameter("FromPeriod", fromPeriod) :
                new ObjectParameter("FromPeriod", typeof(string));
    
            var toPeriodParameter = toPeriod != null ?
                new ObjectParameter("ToPeriod", toPeriod) :
                new ObjectParameter("ToPeriod", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var reportOptionParameter = reportOption != null ?
                new ObjectParameter("ReportOption", reportOption) :
                new ObjectParameter("ReportOption", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SalesByAgentFOP_Result>("SalesByAgentFOP", fromPeriodParameter, toPeriodParameter, fromDateParameter, toDateParameter, reportOptionParameter);
        }
    
        public virtual ObjectResult<SalesByDateCurrency_Result> SalesByDateCurrency(string fromPeriod, string toPeriod, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string agentNumericCode, string currency, string transactionGroup, string reportOption)
        {
            var fromPeriodParameter = fromPeriod != null ?
                new ObjectParameter("FromPeriod", fromPeriod) :
                new ObjectParameter("FromPeriod", typeof(string));
    
            var toPeriodParameter = toPeriod != null ?
                new ObjectParameter("ToPeriod", toPeriod) :
                new ObjectParameter("ToPeriod", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var agentNumericCodeParameter = agentNumericCode != null ?
                new ObjectParameter("AgentNumericCode", agentNumericCode) :
                new ObjectParameter("AgentNumericCode", typeof(string));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            var transactionGroupParameter = transactionGroup != null ?
                new ObjectParameter("TransactionGroup", transactionGroup) :
                new ObjectParameter("TransactionGroup", typeof(string));
    
            var reportOptionParameter = reportOption != null ?
                new ObjectParameter("ReportOption", reportOption) :
                new ObjectParameter("ReportOption", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SalesByDateCurrency_Result>("SalesByDateCurrency", fromPeriodParameter, toPeriodParameter, fromDateParameter, toDateParameter, agentNumericCodeParameter, currencyParameter, transactionGroupParameter, reportOptionParameter);
        }
    
        public virtual ObjectResult<SalesDetailListing_Result> SalesDetailListing(string fromPeriod, string toPeriod, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromPeriodParameter = fromPeriod != null ?
                new ObjectParameter("FromPeriod", fromPeriod) :
                new ObjectParameter("FromPeriod", typeof(string));
    
            var toPeriodParameter = toPeriod != null ?
                new ObjectParameter("ToPeriod", toPeriod) :
                new ObjectParameter("ToPeriod", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SalesDetailListing_Result>("SalesDetailListing", fromPeriodParameter, toPeriodParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SalesDocumentDetailListing_Result> SalesDocumentDetailListing(string agentNumericCode, string ticketingAgentID, Nullable<System.DateTime> saleDateFrom, Nullable<System.DateTime> saleDateTo)
        {
            var agentNumericCodeParameter = agentNumericCode != null ?
                new ObjectParameter("AgentNumericCode", agentNumericCode) :
                new ObjectParameter("AgentNumericCode", typeof(string));
    
            var ticketingAgentIDParameter = ticketingAgentID != null ?
                new ObjectParameter("TicketingAgentID", ticketingAgentID) :
                new ObjectParameter("TicketingAgentID", typeof(string));
    
            var saleDateFromParameter = saleDateFrom.HasValue ?
                new ObjectParameter("SaleDateFrom", saleDateFrom) :
                new ObjectParameter("SaleDateFrom", typeof(System.DateTime));
    
            var saleDateToParameter = saleDateTo.HasValue ?
                new ObjectParameter("SaleDateTo", saleDateTo) :
                new ObjectParameter("SaleDateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SalesDocumentDetailListing_Result>("SalesDocumentDetailListing", agentNumericCodeParameter, ticketingAgentIDParameter, saleDateFromParameter, saleDateToParameter);
        }
    
        public virtual ObjectResult<SalesSectorsFarebasis_Result> SalesSectorsFarebasis(string fromPeriod, string toPeriod, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string reportOption)
        {
            var fromPeriodParameter = fromPeriod != null ?
                new ObjectParameter("FromPeriod", fromPeriod) :
                new ObjectParameter("FromPeriod", typeof(string));
    
            var toPeriodParameter = toPeriod != null ?
                new ObjectParameter("ToPeriod", toPeriod) :
                new ObjectParameter("ToPeriod", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var reportOptionParameter = reportOption != null ?
                new ObjectParameter("ReportOption", reportOption) :
                new ObjectParameter("ReportOption", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SalesSectorsFarebasis_Result>("SalesSectorsFarebasis", fromPeriodParameter, toPeriodParameter, fromDateParameter, toDateParameter, reportOptionParameter);
        }
    
        public virtual ObjectResult<SalesSectorsRBD_Result> SalesSectorsRBD(string fromPeriod, string toPeriod, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string reportOption)
        {
            var fromPeriodParameter = fromPeriod != null ?
                new ObjectParameter("FromPeriod", fromPeriod) :
                new ObjectParameter("FromPeriod", typeof(string));
    
            var toPeriodParameter = toPeriod != null ?
                new ObjectParameter("ToPeriod", toPeriod) :
                new ObjectParameter("ToPeriod", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var reportOptionParameter = reportOption != null ?
                new ObjectParameter("ReportOption", reportOption) :
                new ObjectParameter("ReportOption", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SalesSectorsRBD_Result>("SalesSectorsRBD", fromPeriodParameter, toPeriodParameter, fromDateParameter, toDateParameter, reportOptionParameter);
        }
    
        public virtual ObjectResult<SalesSummary_Result> SalesSummary(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string agentNumericCode)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var agentNumericCodeParameter = agentNumericCode != null ?
                new ObjectParameter("AgentNumericCode", agentNumericCode) :
                new ObjectParameter("AgentNumericCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SalesSummary_Result>("SalesSummary", fromDateParameter, toDateParameter, agentNumericCodeParameter);
        }
    
        public virtual ObjectResult<SalesSummaryPart1_Result> SalesSummaryPart1(string fromPeriod, string toPeriod, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string agentNumericCode, string reportOption)
        {
            var fromPeriodParameter = fromPeriod != null ?
                new ObjectParameter("FromPeriod", fromPeriod) :
                new ObjectParameter("FromPeriod", typeof(string));
    
            var toPeriodParameter = toPeriod != null ?
                new ObjectParameter("ToPeriod", toPeriod) :
                new ObjectParameter("ToPeriod", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var agentNumericCodeParameter = agentNumericCode != null ?
                new ObjectParameter("AgentNumericCode", agentNumericCode) :
                new ObjectParameter("AgentNumericCode", typeof(string));
    
            var reportOptionParameter = reportOption != null ?
                new ObjectParameter("ReportOption", reportOption) :
                new ObjectParameter("ReportOption", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SalesSummaryPart1_Result>("SalesSummaryPart1", fromPeriodParameter, toPeriodParameter, fromDateParameter, toDateParameter, agentNumericCodeParameter, reportOptionParameter);
        }
    
        public virtual ObjectResult<SalesSummaryPart2_Result> SalesSummaryPart2(string fromPeriod, string toPeriod, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string agentNumericCode, string reportOption)
        {
            var fromPeriodParameter = fromPeriod != null ?
                new ObjectParameter("FromPeriod", fromPeriod) :
                new ObjectParameter("FromPeriod", typeof(string));
    
            var toPeriodParameter = toPeriod != null ?
                new ObjectParameter("ToPeriod", toPeriod) :
                new ObjectParameter("ToPeriod", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var agentNumericCodeParameter = agentNumericCode != null ?
                new ObjectParameter("AgentNumericCode", agentNumericCode) :
                new ObjectParameter("AgentNumericCode", typeof(string));
    
            var reportOptionParameter = reportOption != null ?
                new ObjectParameter("ReportOption", reportOption) :
                new ObjectParameter("ReportOption", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SalesSummaryPart2_Result>("SalesSummaryPart2", fromPeriodParameter, toPeriodParameter, fromDateParameter, toDateParameter, agentNumericCodeParameter, reportOptionParameter);
        }
    
        public virtual ObjectResult<SalesTFC_Result> SalesTFC(string fromPeriod, string toPeriod, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string tFCType, string reportOption)
        {
            var fromPeriodParameter = fromPeriod != null ?
                new ObjectParameter("FromPeriod", fromPeriod) :
                new ObjectParameter("FromPeriod", typeof(string));
    
            var toPeriodParameter = toPeriod != null ?
                new ObjectParameter("ToPeriod", toPeriod) :
                new ObjectParameter("ToPeriod", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var tFCTypeParameter = tFCType != null ?
                new ObjectParameter("TFCType", tFCType) :
                new ObjectParameter("TFCType", typeof(string));
    
            var reportOptionParameter = reportOption != null ?
                new ObjectParameter("ReportOption", reportOption) :
                new ObjectParameter("ReportOption", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SalesTFC_Result>("SalesTFC", fromPeriodParameter, toPeriodParameter, fromDateParameter, toDateParameter, tFCTypeParameter, reportOptionParameter);
        }
    
        public virtual ObjectResult<SalesZeroValues_Result> SalesZeroValues(string fromPeriod, string toPeriod, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromPeriodParameter = fromPeriod != null ?
                new ObjectParameter("FromPeriod", fromPeriod) :
                new ObjectParameter("FromPeriod", typeof(string));
    
            var toPeriodParameter = toPeriod != null ?
                new ObjectParameter("ToPeriod", toPeriod) :
                new ObjectParameter("ToPeriod", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SalesZeroValues_Result>("SalesZeroValues", fromPeriodParameter, toPeriodParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int SP_BSP_REPORTS_KK_RTDCN_Exception(Nullable<int> op)
        {
            var opParameter = op.HasValue ?
                new ObjectParameter("Op", op) :
                new ObjectParameter("Op", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_BSP_REPORTS_KK_RTDCN_Exception", opParameter);
        }
    
        public virtual ObjectResult<SP_OutwardBilling_KK_Result> SP_OutwardBilling_KK(string period)
        {
            var periodParameter = period != null ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_OutwardBilling_KK_Result>("SP_OutwardBilling_KK", periodParameter);
        }
    
        public virtual ObjectResult<SP_Unused_Coupons_Result> SP_Unused_Coupons(Nullable<System.DateTime> from, Nullable<System.DateTime> to)
        {
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(System.DateTime));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Unused_Coupons_Result>("SP_Unused_Coupons", fromParameter, toParameter);
        }
    
        public virtual ObjectResult<SummarySalesFlownCouponByFlight_Result> SummarySalesFlownCouponByFlight(string dom_Int, Nullable<System.DateTime> fromSaleDate, Nullable<System.DateTime> toSaleDate, Nullable<System.DateTime> fromFlightDate, Nullable<System.DateTime> toFlightDate)
        {
            var dom_IntParameter = dom_Int != null ?
                new ObjectParameter("Dom_Int", dom_Int) :
                new ObjectParameter("Dom_Int", typeof(string));
    
            var fromSaleDateParameter = fromSaleDate.HasValue ?
                new ObjectParameter("FromSaleDate", fromSaleDate) :
                new ObjectParameter("FromSaleDate", typeof(System.DateTime));
    
            var toSaleDateParameter = toSaleDate.HasValue ?
                new ObjectParameter("ToSaleDate", toSaleDate) :
                new ObjectParameter("ToSaleDate", typeof(System.DateTime));
    
            var fromFlightDateParameter = fromFlightDate.HasValue ?
                new ObjectParameter("FromFlightDate", fromFlightDate) :
                new ObjectParameter("FromFlightDate", typeof(System.DateTime));
    
            var toFlightDateParameter = toFlightDate.HasValue ?
                new ObjectParameter("ToFlightDate", toFlightDate) :
                new ObjectParameter("ToFlightDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SummarySalesFlownCouponByFlight_Result>("SummarySalesFlownCouponByFlight", dom_IntParameter, fromSaleDateParameter, toSaleDateParameter, fromFlightDateParameter, toFlightDateParameter);
        }
    
        public virtual ObjectResult<Validated_Ticket_Report_MR_Result> Validated_Ticket_Report_MR(Nullable<System.DateTime> plannedFlightDepartureDate, Nullable<System.DateTime> usageDate)
        {
            var plannedFlightDepartureDateParameter = plannedFlightDepartureDate.HasValue ?
                new ObjectParameter("PlannedFlightDepartureDate", plannedFlightDepartureDate) :
                new ObjectParameter("PlannedFlightDepartureDate", typeof(System.DateTime));
    
            var usageDateParameter = usageDate.HasValue ?
                new ObjectParameter("UsageDate", usageDate) :
                new ObjectParameter("UsageDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Validated_Ticket_Report_MR_Result>("Validated_Ticket_Report_MR", plannedFlightDepartureDateParameter, usageDateParameter);
        }
    
        public virtual ObjectResult<VW_ExchangeDocument_MR_Result> VW_ExchangeDocument_MR(string ownTicket, Nullable<System.DateTime> newDateofIssueFrom, Nullable<System.DateTime> newDateofIssueTo)
        {
            var ownTicketParameter = ownTicket != null ?
                new ObjectParameter("OwnTicket", ownTicket) :
                new ObjectParameter("OwnTicket", typeof(string));
    
            var newDateofIssueFromParameter = newDateofIssueFrom.HasValue ?
                new ObjectParameter("NewDateofIssueFrom", newDateofIssueFrom) :
                new ObjectParameter("NewDateofIssueFrom", typeof(System.DateTime));
    
            var newDateofIssueToParameter = newDateofIssueTo.HasValue ?
                new ObjectParameter("NewDateofIssueTo", newDateofIssueTo) :
                new ObjectParameter("NewDateofIssueTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<VW_ExchangeDocument_MR_Result>("VW_ExchangeDocument_MR", ownTicketParameter, newDateofIssueFromParameter, newDateofIssueToParameter);
        }
    
        public virtual ObjectResult<DispplayAll_Result> DispplayAll(string docnum)
        {
            var docnumParameter = docnum != null ?
                new ObjectParameter("Docnum", docnum) :
                new ObjectParameter("Docnum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DispplayAll_Result>("DispplayAll", docnumParameter);
        }
    
        public virtual ObjectResult<string> ListDocs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ListDocs");
        }
    
        public virtual int SP_ApplicabilityStatus_Source()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ApplicabilityStatus_Source");
        }
    
        public virtual ObjectResult<SP_CheckExpiry_Result> SP_CheckExpiry()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CheckExpiry_Result>("SP_CheckExpiry");
        }
    
        public virtual ObjectResult<SP_CodeShareClassMapping_Result> SP_CodeShareClassMapping()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CodeShareClassMapping_Result>("SP_CodeShareClassMapping");
        }
    
        public virtual ObjectResult<SP_GetCouponSPA_Result> SP_GetCouponSPA(string relatedDocumentGuid, string documentNumber, Nullable<int> couponNumber)
        {
            var relatedDocumentGuidParameter = relatedDocumentGuid != null ?
                new ObjectParameter("RelatedDocumentGuid", relatedDocumentGuid) :
                new ObjectParameter("RelatedDocumentGuid", typeof(string));
    
            var documentNumberParameter = documentNumber != null ?
                new ObjectParameter("DocumentNumber", documentNumber) :
                new ObjectParameter("DocumentNumber", typeof(string));
    
            var couponNumberParameter = couponNumber.HasValue ?
                new ObjectParameter("CouponNumber", couponNumber) :
                new ObjectParameter("CouponNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetCouponSPA_Result>("SP_GetCouponSPA", relatedDocumentGuidParameter, documentNumberParameter, couponNumberParameter);
        }
    
        public virtual int SP_GetTicketsAllCarrierSPANumber_Source()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetTicketsAllCarrierSPANumber_Source");
        }
    
        public virtual ObjectResult<SP_IATASeasons_Result> SP_IATASeasons()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_IATASeasons_Result>("SP_IATASeasons");
        }
    
        public virtual int SP_Main_ApplicabilityStatus_Source()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Main_ApplicabilityStatus_Source");
        }
    
        public virtual int SP_RegenerateSPA()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RegenerateSPA");
        }
    
        public virtual int SP_UpdateProrationDetail_with_SPA(Nullable<int> selection, ObjectParameter recordsUpdated)
        {
            var selectionParameter = selection.HasValue ?
                new ObjectParameter("Selection", selection) :
                new ObjectParameter("Selection", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateProrationDetail_with_SPA", selectionParameter, recordsUpdated);
        }
    
        public virtual int SP_UpdateSPATables(Nullable<int> selection, ObjectParameter recordsUpdated)
        {
            var selectionParameter = selection.HasValue ?
                new ObjectParameter("Selection", selection) :
                new ObjectParameter("Selection", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateSPATables", selectionParameter, recordsUpdated);
        }
    
        public virtual ObjectResult<SPAstatus_Result> SPAstatus(string document, string aPPLstatus, string aSVstatus)
        {
            var documentParameter = document != null ?
                new ObjectParameter("document", document) :
                new ObjectParameter("document", typeof(string));
    
            var aPPLstatusParameter = aPPLstatus != null ?
                new ObjectParameter("APPLstatus", aPPLstatus) :
                new ObjectParameter("APPLstatus", typeof(string));
    
            var aSVstatusParameter = aSVstatus != null ?
                new ObjectParameter("ASVstatus", aSVstatus) :
                new ObjectParameter("ASVstatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPAstatus_Result>("SPAstatus", documentParameter, aPPLstatusParameter, aSVstatusParameter);
        }
    
        public virtual ObjectResult<SalesSummaryPart11_Result> SalesSummaryPart11()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SalesSummaryPart11_Result>("SalesSummaryPart11");
        }
    
        public virtual int GlobalDeleteXMLFile(string transmissionID)
        {
            var transmissionIDParameter = transmissionID != null ?
                new ObjectParameter("TransmissionID", transmissionID) :
                new ObjectParameter("TransmissionID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GlobalDeleteXMLFile", transmissionIDParameter);
        }
    }
}
